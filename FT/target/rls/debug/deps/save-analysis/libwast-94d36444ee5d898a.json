{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0","program":"/Users/haitran/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","wast","--edition=2018","/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"wasm-module\"","-C","metadata=94d36444ee5d898a","-C","extra-filename=-94d36444ee5d898a","--out-dir","/Users/haitran/Hackathon_NEAR/NEAR_COURCE_K2/nft-marketplace-tutorial/FT/target/rls/debug/deps","-L","dependency=/Users/haitran/Hackathon_NEAR/NEAR_COURCE_K2/nft-marketplace-tutorial/FT/target/rls/debug/deps","--extern","leb128=/Users/haitran/Hackathon_NEAR/NEAR_COURCE_K2/nft-marketplace-tutorial/FT/target/rls/debug/deps/libleb128-979dcf796fb175b2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/haitran/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/haitran/Hackathon_NEAR/NEAR_COURCE_K2/nft-marketplace-tutorial/FT/target/rls/debug/deps/libwast-94d36444ee5d898a.rmeta"},"prelude":{"crate_id":{"name":"wast","disambiguator":[17252216551016386856,0]},"crate_root":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src","external_crates":[{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7101137524639191865,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1887987468260230341,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11423829060327785168,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11467597086512816709,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11478090127832647137,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16011649288231704614,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12732930576792739361,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11329576585081918948,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17189205392791100154,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2953602047458512213,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4833631622402917298,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[2052285648718182991,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16253613530580249776,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5745760535571076062,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[7876989589743503273,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[14488000063334320346,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[5084180220498965168,0]}},{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","num":18,"id":{"name":"leb128","disambiguator":[8778682664228510609,0]}}],"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":0,"byte_end":7428,"line_start":1,"line_end":235,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2490,"byte_end":2491,"line_start":59,"line_end":59,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"AssertExpression, V128Pattern, Span, NanPattern","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":0,"byte_end":7428,"line_start":1,"line_end":235,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":217},{"krate":0,"index":482},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":580},{"krate":0,"index":8467},{"krate":0,"index":8469},{"krate":0,"index":8471},{"krate":0,"index":8476},{"krate":0,"index":8478},{"krate":0,"index":8482},{"krate":0,"index":8484},{"krate":0,"index":8491},{"krate":0,"index":720},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":733}],"decl_id":null,"docs":" A crate for low-level parsing of the WebAssembly text formats: WAT and WAST.","sig":null,"attributes":[{"value":"/ A crate for low-level parsing of the WebAssembly text formats: WAT and WAST.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":81,"byte_end":84,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate is intended to be a low-level detail of the `wat` crate,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":85,"byte_end":156,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ providing a low-level parsing API for parsing WebAssembly text format","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":157,"byte_end":230,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ structures. The API provided by this crate is very similar to","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":231,"byte_end":296,"line_start":5,"line_end":5,"column_start":1,"column_end":66}},{"value":"/ [`syn`](https://docs.rs/syn) and provides the ability to write customized","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":297,"byte_end":374,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ parsers which may be an extension to the core WebAssembly text format. For","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":375,"byte_end":453,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ more documentation see the [`parser`] module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":454,"byte_end":503,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":504,"byte_end":507,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # High-level Overview","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":508,"byte_end":533,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":534,"byte_end":537,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate provides a few major pieces of functionality","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":538,"byte_end":597,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":598,"byte_end":601,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * [`lexer`] - this is a raw lexer for the wasm text format. This is not","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":602,"byte_end":677,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   customizable, but if you'd like to iterate over raw tokens this is the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":678,"byte_end":754,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/   module for you. You likely won't use this much.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":755,"byte_end":808,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":809,"byte_end":812,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * [`parser`] - this is the workhorse of this crate. The [`parser`] module","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":813,"byte_end":890,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/   provides the [`Parse`][] trait primarily and utilities","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":891,"byte_end":951,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/   around working with a [`Parser`](`parser::Parser`) to parse streams of","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":952,"byte_end":1028,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   tokens.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1029,"byte_end":1042,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1043,"byte_end":1046,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * [`Module`] - this contains an Abstract Syntax Tree (AST) of the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1047,"byte_end":1116,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/   WebAssembly Text format (WAT) as well as the unofficial WAST format. This","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1117,"byte_end":1196,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/   also has a [`Module::encode`] method to emit a module in its binary form.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1197,"byte_end":1276,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1277,"byte_end":1280,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Stability and WebAssembly Features","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1281,"byte_end":1321,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1322,"byte_end":1325,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This crate provides support for many in-progress WebAssembly features such","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1326,"byte_end":1404,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ as reference types, multi-value, etc. Be sure to check out the documentation","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1405,"byte_end":1485,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ of the [`wast` crate](https://docs.rs/wast) for policy information on crate","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1486,"byte_end":1565,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ stability vs WebAssembly Features. The tl;dr; version is that this crate","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1566,"byte_end":1642,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ will issue semver-non-breaking releases which will break the parsing of the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1643,"byte_end":1722,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ text format. This crate, unlike `wast`, is expected to have numerous Rust","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1723,"byte_end":1800,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ public API changes, all of which will be accompanied with a semver-breaking","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1801,"byte_end":1880,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ release.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1881,"byte_end":1893,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1894,"byte_end":1897,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Compile-time Cargo features","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1898,"byte_end":1931,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1932,"byte_end":1935,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This crate has a `wasm-module` feature which is turned on by default which","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":1936,"byte_end":2014,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ includes all necessary support to parse full WebAssembly modules. If you","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2015,"byte_end":2091,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ don't need this (for example you're parsing your own s-expression format)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2092,"byte_end":2169,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ then this feature can be disabled.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2170,"byte_end":2208,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2209,"byte_end":2212,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Parse`]: parser::Parse","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2213,"byte_end":2241,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/ [`LexError`]: lexer::LexError","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2242,"byte_end":2275,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"deny(missing_docs, broken_intra_doc_links)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2277,"byte_end":2323,"line_start":48,"line_end":48,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":416},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":113450,"byte_end":113453,"line_start":273,"line_end":273,"column_start":10,"column_end":13},"name":"Key","qualname":"::resolve::types::TypeReference::Key","value":"type Key: TypeKey<'a>;","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":864},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":42650,"byte_end":42655,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"Names","qualname":"::resolve::Names","value":"Names {  }","parent":null,"children":[{"krate":0,"index":866}],"decl_id":null,"docs":" Representation of the results of name resolution for a module.","sig":null,"attributes":[{"value":"/ Representation of the results of name resolution for a module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":42380,"byte_end":42446,"line_start":83,"line_end":83,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":42447,"byte_end":42450,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This structure is returned from the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":42451,"byte_end":42490,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/ [`Module::resolve`](crate::Module::resolve) function and can be used to","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":42491,"byte_end":42566,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"/ resolve your own name arguments if you have any.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":42567,"byte_end":42619,"line_start":87,"line_end":87,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43011,"byte_end":43023,"line_start":99,"line_end":99,"column_start":12,"column_end":24},"name":"resolve_func","qualname":"<Names>::resolve_func","value":"pub fn resolve_func(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the function namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the function namespace.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":42725,"byte_end":42774,"line_start":94,"line_end":94,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":42779,"byte_end":42782,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":42787,"byte_end":42862,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ looked up in the function namespace and converted to a `Num`. If the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":42867,"byte_end":42939,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":42944,"byte_end":42999,"line_start":98,"line_end":98,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43430,"byte_end":43444,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"resolve_memory","qualname":"<Names>::resolve_memory","value":"pub fn resolve_memory(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the memory namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the memory namespace.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43148,"byte_end":43195,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43200,"byte_end":43203,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43208,"byte_end":43283,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ looked up in the memory namespace and converted to a `Num`. If the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43288,"byte_end":43358,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43363,"byte_end":43418,"line_start":108,"line_end":108,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43851,"byte_end":43864,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"resolve_table","qualname":"<Names>::resolve_table","value":"pub fn resolve_table(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the table namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the table namespace.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43571,"byte_end":43617,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43622,"byte_end":43625,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43630,"byte_end":43705,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ looked up in the table namespace and converted to a `Num`. If the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43710,"byte_end":43779,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43784,"byte_end":43839,"line_start":118,"line_end":118,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":44272,"byte_end":44286,"line_start":129,"line_end":129,"column_start":12,"column_end":26},"name":"resolve_global","qualname":"<Names>::resolve_global","value":"pub fn resolve_global(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the global namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the global namespace.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":43990,"byte_end":44037,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":44042,"byte_end":44045,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":44050,"byte_end":44125,"line_start":126,"line_end":126,"column_start":5,"column_end":80}},{"value":"/ looked up in the global namespace and converted to a `Num`. If the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":44130,"byte_end":44200,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":44205,"byte_end":44260,"line_start":128,"line_end":128,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":8493},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9233436,"byte_end":9233440,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Span","qualname":"::ast::token::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":8494}],"decl_id":null,"docs":" A position in the original source stream, used to render errors.\n","sig":null,"attributes":[{"value":"/ A position in the original source stream, used to render errors.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9233288,"byte_end":9233356,"line_start":8,"line_end":8,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9233565,"byte_end":9233576,"line_start":16,"line_end":16,"column_start":12,"column_end":23},"name":"from_offset","qualname":"<Span>::from_offset","value":"pub fn from_offset(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Span` from a byte offset in the source file.\n","sig":null,"attributes":[{"value":"/ Construct a `Span` from a byte offset in the source file.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9233492,"byte_end":9233553,"line_start":15,"line_end":15,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9233895,"byte_end":9233905,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"name":"linecol_in","qualname":"<Span>::linecol_in","value":"pub fn linecol_in(&Self, &str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the line/column information of this span within `text`.\n Line and column numbers are 0-indexed. User presentation is typically\n 1-indexed, but 0-indexing is appropriate for internal use with\n iterators and slices.\n","sig":null,"attributes":[{"value":"/ Returns the line/column information of this span within `text`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9233637,"byte_end":9233704,"line_start":20,"line_end":20,"column_start":5,"column_end":72}},{"value":"/ Line and column numbers are 0-indexed. User presentation is typically","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9233709,"byte_end":9233782,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ 1-indexed, but 0-indexing is appropriate for internal use with","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9233787,"byte_end":9233853,"line_start":22,"line_end":22,"column_start":5,"column_end":71}},{"value":"/ iterators and slices.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9233858,"byte_end":9233883,"line_start":23,"line_end":23,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9234662,"byte_end":9234664,"line_start":45,"line_end":45,"column_start":12,"column_end":14},"name":"Id","qualname":"::ast::token::Id","value":"Id {  }","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015}],"decl_id":null,"docs":" An identifier in a WebAssembly module, prefixed by `$` in the textual\n format.","sig":null,"attributes":[{"value":"/ An identifier in a WebAssembly module, prefixed by `$` in the textual","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9234423,"byte_end":9234496,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ format.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9234497,"byte_end":9234508,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9234509,"byte_end":9234512,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ An identifier is used to symbolically refer to items in a a wasm module,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9234513,"byte_end":9234589,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ typically via the [`Index`] type.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9234590,"byte_end":9234627,"line_start":43,"line_end":43,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9235119,"byte_end":9235123,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"name","qualname":"<Id>::name","value":"pub fn name(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying name of this identifier.","sig":null,"attributes":[{"value":"/ Returns the underlying name of this identifier.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9234988,"byte_end":9235039,"line_start":64,"line_end":64,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9235044,"byte_end":9235047,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The name returned does not contain the leading `$`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9235052,"byte_end":9235107,"line_start":66,"line_end":66,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9235243,"byte_end":9235247,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"span","qualname":"<Id>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns span of this identifier in the original source\n","sig":null,"attributes":[{"value":"/ Returns span of this identifier in the original source","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9235173,"byte_end":9235231,"line_start":71,"line_end":71,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236977,"byte_end":9236980,"line_start":139,"line_end":139,"column_start":5,"column_end":8},"name":"Num","qualname":"::ast::token::Index::Num","value":"Index::Num(u32, Span)","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":" A numerical index that this references. The index space this is\n referencing is implicit based on where this [`Index`] is stored.\n","sig":null,"attributes":[{"value":"/ A numerical index that this references. The index space this is","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236832,"byte_end":9236899,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/ referencing is implicit based on where this [`Index`] is stored.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236904,"byte_end":9236972,"line_start":138,"line_end":138,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9237134,"byte_end":9237136,"line_start":142,"line_end":142,"column_start":5,"column_end":7},"name":"Id","qualname":"::ast::token::Index::Id","value":"Index::Id(Id)","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":" A human-readable identifier this references. Like `Num`, the namespace\n this references is based on where this is stored.\n","sig":null,"attributes":[{"value":"/ A human-readable identifier this references. Like `Num`, the namespace","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236997,"byte_end":9237071,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"/ this references is based on where this is stored.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9237076,"byte_end":9237129,"line_start":141,"line_end":141,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236816,"byte_end":9236821,"line_start":136,"line_end":136,"column_start":10,"column_end":15},"name":"Index","qualname":"::ast::token::Index","value":"pub enum Index<'a> { Num(u32, Span), Id(Id), }","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1027}],"decl_id":null,"docs":" A reference to another item in a wasm module.","sig":null,"attributes":[{"value":"/ A reference to another item in a wasm module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236408,"byte_end":9236457,"line_start":127,"line_end":127,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236458,"byte_end":9236461,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This type is used for items referring to other items (such as `call $foo`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236462,"byte_end":9236539,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"/ referencing function `$foo`). References can be either an index (u32) or an","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236540,"byte_end":9236619,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ [`Id`] in the textual format.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236620,"byte_end":9236653,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236654,"byte_end":9236657,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The emission phase of a module will ensure that `Index::Id` is never used","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236658,"byte_end":9236735,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ and switch them all to `Index::Num`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236736,"byte_end":9236776,"line_start":134,"line_end":134,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9237245,"byte_end":9237249,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"span","qualname":"<Index>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the source location where this `Index` was defined.\n","sig":null,"attributes":[{"value":"/ Returns the source location where this `Index` was defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9237170,"byte_end":9237233,"line_start":146,"line_end":146,"column_start":5,"column_end":68}}]},{"kind":"StructVariant","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9239036,"byte_end":9239041,"line_start":226,"line_end":226,"column_start":5,"column_end":10},"name":"Outer","qualname":"::ast::token::ItemRef::Outer","value":"ItemRef::Outer { kind, module, idx }","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9239123,"byte_end":9239127,"line_start":231,"line_end":231,"column_start":5,"column_end":9},"name":"Item","qualname":"::ast::token::ItemRef::Item","value":"ItemRef::Item { kind, idx, exports }","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9239015,"byte_end":9239022,"line_start":225,"line_end":225,"column_start":10,"column_end":17},"name":"ItemRef","qualname":"::ast::token::ItemRef","value":"pub enum ItemRef<'a, K> {\n    Outer {\n        kind: K,\n        module: Index,\n        idx: Index,\n    },\n    Item {\n        kind: K,\n        idx: Index,\n        exports: Vec<&'a str>,\n    },\n}","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1045}],"decl_id":null,"docs":" Parses `(func $foo)`","sig":null,"attributes":[{"value":"/ Parses `(func $foo)`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9238834,"byte_end":9238858,"line_start":219,"line_end":219,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9238859,"byte_end":9238862,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ Optionally includes export strings for module-linking sugar syntax for alias","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9238863,"byte_end":9238943,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"/ injection.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9238944,"byte_end":9238958,"line_start":222,"line_end":222,"column_start":1,"column_end":15}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9238983,"byte_end":9239005,"line_start":224,"line_end":224,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9239412,"byte_end":9239424,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"unwrap_index","qualname":"<ItemRef>::unwrap_index","value":"pub fn unwrap_index(&Self) -> &Index","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying `Index` for `ItemRef::Item`.","sig":null,"attributes":[{"value":"/ Unwraps the underlying `Index` for `ItemRef::Item`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9239245,"byte_end":9239300,"line_start":239,"line_end":239,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9239305,"byte_end":9239308,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Panics if this is `ItemRef::Outer` or if exports haven't been expanded","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9239313,"byte_end":9239387,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/ yet.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9239392,"byte_end":9239400,"line_start":242,"line_end":242,"column_start":5,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9240811,"byte_end":9240821,"line_start":290,"line_end":290,"column_start":12,"column_end":22},"name":"IndexOrRef","qualname":"::ast::token::IndexOrRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Convenience structure to parse `$f` or `(item $f)`.\n","sig":null,"attributes":[{"value":"/ Convenience structure to parse `$f` or `(item $f)`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9240720,"byte_end":9240775,"line_start":288,"line_end":288,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1061},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9240829,"byte_end":9240847,"line_start":290,"line_end":290,"column_start":30,"column_end":48},"name":"0","qualname":"::ast::token::IndexOrRef::0","value":"ast::token::ItemRef<'a, K>","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9241622,"byte_end":9241636,"line_start":321,"line_end":321,"column_start":12,"column_end":26},"name":"NameAnnotation","qualname":"::ast::token::NameAnnotation","value":"NameAnnotation { name }","parent":null,"children":[{"krate":0,"index":1072}],"decl_id":null,"docs":" An `@name` annotation in source, currently of the form `@name \"foo\"`\n","sig":null,"attributes":[{"value":"/ An `@name` annotation in source, currently of the form `@name \"foo\"`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9241497,"byte_end":9241569,"line_start":319,"line_end":319,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9241691,"byte_end":9241695,"line_start":323,"line_end":323,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::token::NameAnnotation::name","value":"&'a str","parent":{"krate":0,"index":1070},"children":[],"decl_id":null,"docs":" The name specified for the item\n","sig":null,"attributes":[{"value":"/ The name specified for the item","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9241647,"byte_end":9241682,"line_start":322,"line_end":322,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9255003,"byte_end":9255010,"line_start":681,"line_end":681,"column_start":5,"column_end":12},"name":"Float32","qualname":"::ast::token::Float32","value":"Float32 { bits }","parent":null,"children":[{"krate":0,"index":1200}],"decl_id":null,"docs":" A parsed floating-point type\n","sig":null,"attributes":[{"value":"/ A parsed floating-point type","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9244925,"byte_end":9244957,"line_start":443,"line_end":443,"column_start":9,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9255113,"byte_end":9255120,"line_start":687,"line_end":687,"column_start":5,"column_end":12},"name":"Float64","qualname":"::ast::token::Float64","value":"Float64 { bits }","parent":null,"children":[{"krate":0,"index":1204}],"decl_id":null,"docs":" A parsed floating-point type\n","sig":null,"attributes":[{"value":"/ A parsed floating-point type","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9244925,"byte_end":9244957,"line_start":443,"line_end":443,"column_start":9,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9255527,"byte_end":9255533,"line_start":705,"line_end":705,"column_start":12,"column_end":18},"name":"LParen","qualname":"::ast::token::LParen","value":"LParen {  }","parent":null,"children":[{"krate":0,"index":1006}],"decl_id":null,"docs":" A convenience type to use with [`Parser::peek`](crate::parser::Parser::peek)\n to see if the next token is an s-expression.\n","sig":null,"attributes":[{"value":"/ A convenience type to use with [`Parser::peek`](crate::parser::Parser::peek)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9255386,"byte_end":9255466,"line_start":703,"line_end":703,"column_start":1,"column_end":81}},{"value":"/ to see if the next token is an s-expression.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9255467,"byte_end":9255515,"line_start":704,"line_end":704,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2097},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257453,"byte_end":9257458,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Alias","qualname":"::ast::alias::Alias","value":"Alias { span, id, name, source, kind }","parent":null,"children":[{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103}],"decl_id":null,"docs":" An `alias` statement used to juggle indices with nested modules.\n","sig":null,"attributes":[{"value":"/ An `alias` statement used to juggle indices with nested modules.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257356,"byte_end":9257424,"line_start":4,"line_end":4,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2099},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257513,"byte_end":9257517,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::alias::Alias::span","value":"ast::token::Span","parent":{"krate":0,"index":2097},"children":[],"decl_id":null,"docs":" Where this `alias` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `alias` was defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257469,"byte_end":9257504,"line_start":7,"line_end":7,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257635,"byte_end":9257637,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::alias::Alias::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":2097},"children":[],"decl_id":null,"docs":" An identifier that this alias is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this alias is resolved with (optionally) for name","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257534,"byte_end":9257606,"line_start":9,"line_end":9,"column_start":5,"column_end":77}},{"value":"/ resolution.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257611,"byte_end":9257626,"line_start":10,"line_end":10,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":2101},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257745,"byte_end":9257749,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::alias::Alias::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":2097},"children":[],"decl_id":null,"docs":" An optional name for this alias stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this alias stored in the custom `name` section.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257664,"byte_end":9257736,"line_start":12,"line_end":12,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257826,"byte_end":9257832,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"source","qualname":"::ast::alias::Alias::source","value":"ast::alias::AliasSource<'a>","parent":{"krate":0,"index":2097},"children":[],"decl_id":null,"docs":" The source of this alias.\n","sig":null,"attributes":[{"value":"/ The source of this alias.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257788,"byte_end":9257817,"line_start":14,"line_end":14,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2103},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257906,"byte_end":9257910,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::alias::Alias::kind","value":"ast::export::ExportKind","parent":{"krate":0,"index":2097},"children":[],"decl_id":null,"docs":" The kind of item that's being aliased.\n","sig":null,"attributes":[{"value":"/ The kind of item that's being aliased.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257855,"byte_end":9257897,"line_start":16,"line_end":16,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9258003,"byte_end":9258017,"line_start":23,"line_end":23,"column_start":5,"column_end":19},"name":"InstanceExport","qualname":"::ast::alias::AliasSource::InstanceExport","value":"AliasSource::InstanceExport { instance, export }","parent":{"krate":0,"index":2107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9258106,"byte_end":9258111,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"Outer","qualname":"::ast::alias::AliasSource::Outer","value":"AliasSource::Outer { module, index }","parent":{"krate":0,"index":2107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2107},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257981,"byte_end":9257992,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"name":"AliasSource","qualname":"::ast::alias::AliasSource","value":"pub enum AliasSource<'a> {\n    InstanceExport {\n        instance: ast::ItemRef,\n        export: &'a str,\n    },\n    Outer {\n        module: ast::Index,\n        index: ast::Index,\n    },\n}","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2112}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9257949,"byte_end":9257971,"line_start":21,"line_end":21,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259756,"byte_end":9259759,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"I32","qualname":"::ast::assert_expr::AssertExpression::I32","value":"AssertExpression::I32(i32)","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259770,"byte_end":9259773,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"I64","qualname":"::ast::assert_expr::AssertExpression::I64","value":"AssertExpression::I64(i64)","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259784,"byte_end":9259787,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"F32","qualname":"::ast::assert_expr::AssertExpression::F32","value":"AssertExpression::F32(NanPattern<Float32>)","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259814,"byte_end":9259817,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"F64","qualname":"::ast::assert_expr::AssertExpression::F64","value":"AssertExpression::F64(NanPattern<Float64>)","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259844,"byte_end":9259848,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"V128","qualname":"::ast::assert_expr::AssertExpression::V128","value":"AssertExpression::V128(V128Pattern)","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2135},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259868,"byte_end":9259875,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"RefNull","qualname":"::ast::assert_expr::AssertExpression::RefNull","value":"AssertExpression::RefNull(Option<HeapType>)","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2138},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259903,"byte_end":9259912,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"RefExtern","qualname":"::ast::assert_expr::AssertExpression::RefExtern","value":"AssertExpression::RefExtern(u32)","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2141},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259923,"byte_end":9259930,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"RefFunc","qualname":"::ast::assert_expr::AssertExpression::RefFunc","value":"AssertExpression::RefFunc(Option<Index>)","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2144},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9260022,"byte_end":9260041,"line_start":25,"line_end":25,"column_start":5,"column_end":24},"name":"LegacyArithmeticNaN","qualname":"::ast::assert_expr::AssertExpression::LegacyArithmeticNaN","value":"AssertExpression::LegacyArithmeticNaN","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2146},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9260111,"byte_end":9260129,"line_start":27,"line_end":27,"column_start":5,"column_end":23},"name":"LegacyCanonicalNaN","qualname":"::ast::assert_expr::AssertExpression::LegacyCanonicalNaN","value":"AssertExpression::LegacyCanonicalNaN","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259729,"byte_end":9259745,"line_start":13,"line_end":13,"column_start":10,"column_end":26},"name":"AssertExpression","qualname":"::ast::assert_expr::AssertExpression","value":"pub enum AssertExpression<'a> {\n    I32(i32),\n    I64(i64),\n    F32(NanPattern<Float32>),\n    F64(NanPattern<Float64>),\n    V128(V128Pattern),\n    RefNull(Option<HeapType>),\n    RefExtern(u32),\n    RefFunc(Option<Index>),\n    LegacyArithmeticNaN,\n    LegacyCanonicalNaN,\n}","parent":null,"children":[{"krate":0,"index":2120},{"krate":0,"index":2123},{"krate":0,"index":2126},{"krate":0,"index":2129},{"krate":0,"index":2132},{"krate":0,"index":2135},{"krate":0,"index":2138},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":2146}],"decl_id":null,"docs":" An expression that is valid inside an `assert_return` directive.","sig":null,"attributes":[{"value":"/ An expression that is valid inside an `assert_return` directive.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259211,"byte_end":9259279,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259280,"byte_end":9259283,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ As of https://github.com/WebAssembly/spec/pull/1104, spec tests may include `assert_return`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259284,"byte_end":9259379,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ directives that allow NaN patterns (`\"nan:canonical\"`, `\"nan:arithmetic\"`). Parsing an","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259380,"byte_end":9259470,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"/ `AssertExpression` means that:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259471,"byte_end":9259505,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ - only constant values (e.g. `i32.const 4`) are used in the `assert_return` directive","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259506,"byte_end":9259595,"line_start":9,"line_end":9,"column_start":1,"column_end":90}},{"value":"/ - the NaN patterns are allowed (they are not allowed in regular `Expression`s).","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259596,"byte_end":9259679,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9259697,"byte_end":9259719,"line_start":12,"line_end":12,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9261260,"byte_end":9261272,"line_start":55,"line_end":55,"column_start":5,"column_end":17},"name":"CanonicalNan","qualname":"::ast::assert_expr::NanPattern::CanonicalNan","value":"NanPattern::CanonicalNan","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9261278,"byte_end":9261291,"line_start":56,"line_end":56,"column_start":5,"column_end":18},"name":"ArithmeticNan","qualname":"::ast::assert_expr::NanPattern::ArithmeticNan","value":"NanPattern::ArithmeticNan","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9261297,"byte_end":9261302,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Value","qualname":"::ast::assert_expr::NanPattern::Value","value":"NanPattern::Value(T)","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2151},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9261240,"byte_end":9261250,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"NanPattern","qualname":"::ast::assert_expr::NanPattern","value":"pub enum NanPattern<T> { CanonicalNan, ArithmeticNan, Value(T), }","parent":null,"children":[{"krate":0,"index":2153},{"krate":0,"index":2155},{"krate":0,"index":2157}],"decl_id":null,"docs":" Either a NaN pattern (`nan:canonical`, `nan:arithmetic`) or a value of type `T`.\n","sig":null,"attributes":[{"value":"/ Either a NaN pattern (`nan:canonical`, `nan:arithmetic`) or a value of type `T`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9261095,"byte_end":9261179,"line_start":51,"line_end":51,"column_start":1,"column_end":85}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9261208,"byte_end":9261230,"line_start":53,"line_end":53,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9262118,"byte_end":9262123,"line_start":85,"line_end":85,"column_start":5,"column_end":10},"name":"I8x16","qualname":"::ast::assert_expr::V128Pattern::I8x16","value":"V128Pattern::I8x16([i8; ])","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9262139,"byte_end":9262144,"line_start":86,"line_end":86,"column_start":5,"column_end":10},"name":"I16x8","qualname":"::ast::assert_expr::V128Pattern::I16x8","value":"V128Pattern::I16x8([i16; ])","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9262160,"byte_end":9262165,"line_start":87,"line_end":87,"column_start":5,"column_end":10},"name":"I32x4","qualname":"::ast::assert_expr::V128Pattern::I32x4","value":"V128Pattern::I32x4([i32; ])","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9262181,"byte_end":9262186,"line_start":88,"line_end":88,"column_start":5,"column_end":10},"name":"I64x2","qualname":"::ast::assert_expr::V128Pattern::I64x2","value":"V128Pattern::I64x2([i64; ])","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2186},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9262202,"byte_end":9262207,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"F32x4","qualname":"::ast::assert_expr::V128Pattern::F32x4","value":"V128Pattern::F32x4([NanPattern<Float32>; ])","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2190},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9262239,"byte_end":9262244,"line_start":90,"line_end":90,"column_start":5,"column_end":10},"name":"F64x2","qualname":"::ast::assert_expr::V128Pattern::F64x2","value":"V128Pattern::F64x2([NanPattern<Float64>; ])","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2169},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9262100,"byte_end":9262111,"line_start":84,"line_end":84,"column_start":10,"column_end":21},"name":"V128Pattern","qualname":"::ast::assert_expr::V128Pattern","value":"pub enum V128Pattern {\n    I8x16([i8; ]),\n    I16x8([i16; ]),\n    I32x4([i32; ]),\n    I64x2([i64; ]),\n    F32x4([NanPattern<Float32>; ]),\n    F64x2([NanPattern<Float64>; ]),\n}","parent":null,"children":[{"krate":0,"index":2170},{"krate":0,"index":2174},{"krate":0,"index":2178},{"krate":0,"index":2182},{"krate":0,"index":2186},{"krate":0,"index":2190}],"decl_id":null,"docs":" A version of `V128Const` that allows `NanPattern`s.","sig":null,"attributes":[{"value":"/ A version of `V128Const` that allows `NanPattern`s.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9261829,"byte_end":9261884,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9261885,"byte_end":9261888,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ This implementation is necessary because only float types can include NaN patterns; otherwise","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9261889,"byte_end":9261986,"line_start":80,"line_end":80,"column_start":1,"column_end":98}},{"value":"/ it is largely similar to the implementation of `V128Const`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9261987,"byte_end":9262050,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9262068,"byte_end":9262090,"line_start":83,"line_end":83,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9264526,"byte_end":9264532,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Custom","qualname":"::ast::custom::Custom","value":"Custom { span, name, place, data }","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201}],"decl_id":null,"docs":" A wasm custom section within a module.\n","sig":null,"attributes":[{"value":"/ A wasm custom section within a module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9264455,"byte_end":9264497,"line_start":4,"line_end":4,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9264589,"byte_end":9264593,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::custom::Custom::span","value":"ast::token::Span","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":" Where this `@custom` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `@custom` was defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9264543,"byte_end":9264580,"line_start":7,"line_end":7,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2199},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9264651,"byte_end":9264655,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::custom::Custom::name","value":"&'a str","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":" Name of the custom section.\n","sig":null,"attributes":[{"value":"/ Name of the custom section.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9264611,"byte_end":9264642,"line_start":10,"line_end":10,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9264725,"byte_end":9264730,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"place","qualname":"::ast::custom::Custom::place","value":"ast::custom::CustomPlace","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":" Where the custom section is being placed,\n","sig":null,"attributes":[{"value":"/ Where the custom section is being placed,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9264671,"byte_end":9264716,"line_start":13,"line_end":13,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2201},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9264794,"byte_end":9264798,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"data","qualname":"::ast::custom::Custom::data","value":"std::vec::Vec<&'a [u8]>","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":" Payload of this custom section.\n","sig":null,"attributes":[{"value":"/ Payload of this custom section.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9264750,"byte_end":9264785,"line_start":16,"line_end":16,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265032,"byte_end":9265043,"line_start":24,"line_end":24,"column_start":5,"column_end":16},"name":"BeforeFirst","qualname":"::ast::custom::CustomPlace::BeforeFirst","value":"CustomPlace::BeforeFirst","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" This custom section will appear before the first section in the module.\n","sig":null,"attributes":[{"value":"/ This custom section will appear before the first section in the module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9264952,"byte_end":9265027,"line_start":23,"line_end":23,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2208},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265121,"byte_end":9265127,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Before","qualname":"::ast::custom::CustomPlace::Before","value":"CustomPlace::Before(CustomPlaceAnchor)","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" This custom section will be placed just before a known section.\n","sig":null,"attributes":[{"value":"/ This custom section will be placed just before a known section.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265049,"byte_end":9265116,"line_start":25,"line_end":25,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265223,"byte_end":9265228,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"After","qualname":"::ast::custom::CustomPlace::After","value":"CustomPlace::After(CustomPlaceAnchor)","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" This custom section will be placed just after a known section.\n","sig":null,"attributes":[{"value":"/ This custom section will be placed just after a known section.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265152,"byte_end":9265218,"line_start":27,"line_end":27,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2214},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265331,"byte_end":9265340,"line_start":30,"line_end":30,"column_start":5,"column_end":14},"name":"AfterLast","qualname":"::ast::custom::CustomPlace::AfterLast","value":"CustomPlace::AfterLast","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" This custom section will appear after the last section in the module.\n","sig":null,"attributes":[{"value":"/ This custom section will appear after the last section in the module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265253,"byte_end":9265326,"line_start":29,"line_end":29,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":2205},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9264934,"byte_end":9264945,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"name":"CustomPlace","qualname":"::ast::custom::CustomPlace","value":"pub enum CustomPlace {\n    BeforeFirst,\n    Before(CustomPlaceAnchor),\n    After(CustomPlaceAnchor),\n    AfterLast,\n}","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2211},{"krate":0,"index":2214}],"decl_id":null,"docs":" Possible locations to place a custom section within a module.\n","sig":null,"attributes":[{"value":"/ Possible locations to place a custom section within a module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9264818,"byte_end":9264883,"line_start":20,"line_end":20,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265509,"byte_end":9265513,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Type","qualname":"::ast::custom::CustomPlaceAnchor::Type","value":"CustomPlaceAnchor::Type","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2228},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265519,"byte_end":9265525,"line_start":38,"line_end":38,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::custom::CustomPlaceAnchor::Import","value":"CustomPlaceAnchor::Import","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2230},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265531,"byte_end":9265537,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::custom::CustomPlaceAnchor::Module","value":"CustomPlaceAnchor::Module","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2232},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265543,"byte_end":9265551,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::custom::CustomPlaceAnchor::Instance","value":"CustomPlaceAnchor::Instance","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2234},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265557,"byte_end":9265562,"line_start":41,"line_end":41,"column_start":5,"column_end":10},"name":"Alias","qualname":"::ast::custom::CustomPlaceAnchor::Alias","value":"CustomPlaceAnchor::Alias","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265568,"byte_end":9265572,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::custom::CustomPlaceAnchor::Func","value":"CustomPlaceAnchor::Func","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2238},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265578,"byte_end":9265583,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::custom::CustomPlaceAnchor::Table","value":"CustomPlaceAnchor::Table","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265589,"byte_end":9265595,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::custom::CustomPlaceAnchor::Memory","value":"CustomPlaceAnchor::Memory","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2242},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265601,"byte_end":9265607,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::custom::CustomPlaceAnchor::Global","value":"CustomPlaceAnchor::Global","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2244},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265613,"byte_end":9265619,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Export","qualname":"::ast::custom::CustomPlaceAnchor::Export","value":"CustomPlaceAnchor::Export","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265625,"byte_end":9265630,"line_start":47,"line_end":47,"column_start":5,"column_end":10},"name":"Start","qualname":"::ast::custom::CustomPlaceAnchor::Start","value":"CustomPlaceAnchor::Start","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2248},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265636,"byte_end":9265640,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Elem","qualname":"::ast::custom::CustomPlaceAnchor::Elem","value":"CustomPlaceAnchor::Elem","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2250},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265646,"byte_end":9265650,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"Code","qualname":"::ast::custom::CustomPlaceAnchor::Code","value":"CustomPlaceAnchor::Code","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2252},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265656,"byte_end":9265660,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Data","qualname":"::ast::custom::CustomPlaceAnchor::Data","value":"CustomPlaceAnchor::Data","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2254},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265666,"byte_end":9265671,"line_start":51,"line_end":51,"column_start":5,"column_end":10},"name":"Event","qualname":"::ast::custom::CustomPlaceAnchor::Event","value":"CustomPlaceAnchor::Event","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2225},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265485,"byte_end":9265502,"line_start":36,"line_end":36,"column_start":10,"column_end":27},"name":"CustomPlaceAnchor","qualname":"::ast::custom::CustomPlaceAnchor","value":"pub enum CustomPlaceAnchor {\n    Type,\n    Import,\n    Module,\n    Instance,\n    Alias,\n    Func,\n    Table,\n    Memory,\n    Global,\n    Export,\n    Start,\n    Elem,\n    Code,\n    Data,\n    Event,\n}","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2238},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":2244},{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2250},{"krate":0,"index":2252},{"krate":0,"index":2254}],"decl_id":null,"docs":" Known sections that custom sections can be placed relative to.\n","sig":null,"attributes":[{"value":"/ Known sections that custom sections can be placed relative to.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265345,"byte_end":9265411,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265453,"byte_end":9265475,"line_start":35,"line_end":35,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2264},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9269521,"byte_end":9269526,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Event","qualname":"::ast::event::Event","value":"Event { span, id, exports, ty }","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269}],"decl_id":null,"docs":" A WebAssembly event directive, part of the exception handling proposal.\n","sig":null,"attributes":[{"value":"/ A WebAssembly event directive, part of the exception handling proposal.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9269417,"byte_end":9269492,"line_start":4,"line_end":4,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9269578,"byte_end":9269582,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::event::Event::span","value":"ast::token::Span","parent":{"krate":0,"index":2264},"children":[],"decl_id":null,"docs":" Where this event was defined\n","sig":null,"attributes":[{"value":"/ Where this event was defined","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9269537,"byte_end":9269569,"line_start":7,"line_end":7,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9269680,"byte_end":9269682,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::event::Event::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":2264},"children":[],"decl_id":null,"docs":" An optional name by which to refer to this event in name resolution.\n","sig":null,"attributes":[{"value":"/ An optional name by which to refer to this event in name resolution.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9269599,"byte_end":9269671,"line_start":9,"line_end":9,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2268},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9269764,"byte_end":9269771,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::event::Event::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":2264},"children":[],"decl_id":null,"docs":" Optional export directives for this event.\n","sig":null,"attributes":[{"value":"/ Optional export directives for this event.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9269709,"byte_end":9269755,"line_start":11,"line_end":11,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2269},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9269847,"byte_end":9269849,"line_start":14,"line_end":14,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::event::Event::ty","value":"ast::event::EventType<'a>","parent":{"krate":0,"index":2264},"children":[],"decl_id":null,"docs":" The type of event that is defined.\n","sig":null,"attributes":[{"value":"/ The type of event that is defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9269800,"byte_end":9269838,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2275},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9270119,"byte_end":9270128,"line_start":22,"line_end":22,"column_start":5,"column_end":14},"name":"Exception","qualname":"::ast::event::EventType::Exception","value":"EventType::Exception(ast::TypeUse)","parent":{"krate":0,"index":2273},"children":[],"decl_id":null,"docs":" An exception event, where the payload is the type signature of the event\n (constructor parameters, etc).\n","sig":null,"attributes":[{"value":"/ An exception event, where the payload is the type signature of the event","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9269999,"byte_end":9270075,"line_start":20,"line_end":20,"column_start":5,"column_end":81}},{"value":"/ (constructor parameters, etc).","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9270080,"byte_end":9270114,"line_start":21,"line_end":21,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":2273},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9269979,"byte_end":9269988,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"name":"EventType","qualname":"::ast::event::EventType","value":"pub enum EventType<'a> { Exception(ast::TypeUse), }","parent":null,"children":[{"krate":0,"index":2275}],"decl_id":null,"docs":" Listing of various types of events that can be defined in a wasm module.\n","sig":null,"attributes":[{"value":"/ Listing of various types of events that can be defined in a wasm module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9269869,"byte_end":9269945,"line_start":17,"line_end":17,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9270846,"byte_end":9270852,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Export","qualname":"::ast::export::Export","value":"Export { span, name, index }","parent":null,"children":[{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288}],"decl_id":null,"docs":" A entry in a WebAssembly module's export section.\n","sig":null,"attributes":[{"value":"/ A entry in a WebAssembly module's export section.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9270764,"byte_end":9270817,"line_start":4,"line_end":4,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9270906,"byte_end":9270910,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::export::Export::span","value":"ast::token::Span","parent":{"krate":0,"index":2284},"children":[],"decl_id":null,"docs":" Where this export was defined.\n","sig":null,"attributes":[{"value":"/ Where this export was defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9270863,"byte_end":9270897,"line_start":7,"line_end":7,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2287},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9270980,"byte_end":9270984,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::export::Export::name","value":"&'a str","parent":{"krate":0,"index":2284},"children":[],"decl_id":null,"docs":" The name of this export from the module.\n","sig":null,"attributes":[{"value":"/ The name of this export from the module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9270927,"byte_end":9270971,"line_start":9,"line_end":9,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2288},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271050,"byte_end":9271055,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"index","qualname":"::ast::export::Export::index","value":"ast::token::ItemRef<'a, ast::export::ExportKind>","parent":{"krate":0,"index":2284},"children":[],"decl_id":null,"docs":" What's being exported from the module.\n","sig":null,"attributes":[{"value":"/ What's being exported from the module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9270999,"byte_end":9271041,"line_start":11,"line_end":11,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271302,"byte_end":9271306,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::export::ExportKind::Func","value":"ExportKind::Func","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271312,"byte_end":9271317,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::export::ExportKind::Table","value":"ExportKind::Table","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2297},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271323,"byte_end":9271329,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::export::ExportKind::Memory","value":"ExportKind::Memory","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2299},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271335,"byte_end":9271341,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::export::ExportKind::Global","value":"ExportKind::Global","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271347,"byte_end":9271352,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Event","qualname":"::ast::export::ExportKind::Event","value":"ExportKind::Event","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2303},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271358,"byte_end":9271364,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::export::ExportKind::Module","value":"ExportKind::Module","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2305},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271370,"byte_end":9271378,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::export::ExportKind::Instance","value":"ExportKind::Instance","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2307},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271384,"byte_end":9271388,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Type","qualname":"::ast::export::ExportKind::Type","value":"ExportKind::Type","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2292},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271285,"byte_end":9271295,"line_start":19,"line_end":19,"column_start":10,"column_end":20},"name":"ExportKind","qualname":"::ast::export::ExportKind","value":"pub enum ExportKind {\n    Func,\n    Table,\n    Memory,\n    Global,\n    Event,\n    Module,\n    Instance,\n    Type,\n}","parent":null,"children":[{"krate":0,"index":2293},{"krate":0,"index":2295},{"krate":0,"index":2297},{"krate":0,"index":2299},{"krate":0,"index":2301},{"krate":0,"index":2303},{"krate":0,"index":2305},{"krate":0,"index":2307}],"decl_id":null,"docs":" Different kinds of elements that can be exported from a WebAssembly module,\n contained in an [`Export`].\n","sig":null,"attributes":[{"value":"/ Different kinds of elements that can be exported from a WebAssembly module,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271090,"byte_end":9271169,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ contained in an [`Export`].","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271170,"byte_end":9271201,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271253,"byte_end":9271275,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2355},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9273481,"byte_end":9273493,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"InlineExport","qualname":"::ast::export::InlineExport","value":"InlineExport { names }","parent":null,"children":[{"krate":0,"index":2357}],"decl_id":null,"docs":" A listing of inline `(export \"foo\")` statements on a WebAssembly item in\n its textual format.\n","sig":null,"attributes":[{"value":"/ A listing of inline `(export \"foo\")` statements on a WebAssembly item in","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9273352,"byte_end":9273428,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ its textual format.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9273429,"byte_end":9273452,"line_start":101,"line_end":101,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2357},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9273562,"byte_end":9273567,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"name":"names","qualname":"::ast::export::InlineExport::names","value":"std::vec::Vec<&'a str>","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":" The extra names to export an item as, if any.\n","sig":null,"attributes":[{"value":"/ The extra names to export an item as, if any.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9273504,"byte_end":9273553,"line_start":104,"line_end":104,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9274982,"byte_end":9274992,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"Expression","qualname":"::ast::expr::Expression","value":"Expression { instrs }","parent":null,"children":[{"krate":0,"index":2363}],"decl_id":null,"docs":" An expression, or a list of instructions, in the WebAssembly text format.","sig":null,"attributes":[{"value":"/ An expression, or a list of instructions, in the WebAssembly text format.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9274618,"byte_end":9274695,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9274696,"byte_end":9274699,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This expression type will parse s-expression-folded instructions into a flat","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9274700,"byte_end":9274780,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ list of instructions for emission later on. The implicit `end` instruction","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9274781,"byte_end":9274859,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ at the end of an expression is not included in the `instrs` field.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9274860,"byte_end":9274930,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9274948,"byte_end":9274970,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9275007,"byte_end":9275013,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"instrs","qualname":"::ast::expr::Expression::instrs","value":"std::boxed::Box<[ast::expr::Instruction<'a>]>","parent":{"krate":0,"index":2361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5888},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9328471,"byte_end":9328480,"line_start":1142,"line_end":1142,"column_start":12,"column_end":21},"name":"BlockType","qualname":"::ast::expr::BlockType","value":"BlockType { label, ty }","parent":null,"children":[{"krate":0,"index":5890},{"krate":0,"index":5891}],"decl_id":null,"docs":" Extra information associated with block-related instructions.","sig":null,"attributes":[{"value":"/ Extra information associated with block-related instructions.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9328256,"byte_end":9328321,"line_start":1136,"line_end":1136,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9328322,"byte_end":9328325,"line_start":1137,"line_end":1137,"column_start":1,"column_end":4}},{"value":"/ This is used to label blocks and also annotate what types are expected for","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9328326,"byte_end":9328404,"line_start":1138,"line_end":1138,"column_start":1,"column_end":79}},{"value":"/ the block.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9328405,"byte_end":9328419,"line_start":1139,"line_end":1139,"column_start":1,"column_end":15}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9328437,"byte_end":9328459,"line_start":1141,"line_end":1141,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5890},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9328495,"byte_end":9328500,"line_start":1143,"line_end":1143,"column_start":9,"column_end":14},"name":"label","qualname":"::ast::expr::BlockType::label","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5891},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9328531,"byte_end":9328533,"line_start":1144,"line_end":1144,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::expr::BlockType::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":5888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5895},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9328988,"byte_end":9329000,"line_start":1161,"line_end":1161,"column_start":12,"column_end":24},"name":"FuncBindType","qualname":"::ast::expr::FuncBindType","value":"FuncBindType { ty }","parent":null,"children":[{"krate":0,"index":5897}],"decl_id":null,"docs":" Extra information associated with the func.bind instruction.\n","sig":null,"attributes":[{"value":"/ Extra information associated with the func.bind instruction.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9328872,"byte_end":9328936,"line_start":1158,"line_end":1158,"column_start":1,"column_end":65}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9328954,"byte_end":9328976,"line_start":1160,"line_end":1160,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5897},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329015,"byte_end":9329017,"line_start":1162,"line_end":1162,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::expr::FuncBindType::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":5895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5901},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329436,"byte_end":9329443,"line_start":1178,"line_end":1178,"column_start":12,"column_end":19},"name":"LetType","qualname":"::ast::expr::LetType","value":"LetType { block, locals }","parent":null,"children":[{"krate":0,"index":5903},{"krate":0,"index":5904}],"decl_id":null,"docs":" Extra information associated with the let instruction.\n","sig":null,"attributes":[{"value":"/ Extra information associated with the let instruction.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329326,"byte_end":9329384,"line_start":1175,"line_end":1175,"column_start":1,"column_end":59}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329402,"byte_end":9329424,"line_start":1177,"line_end":1177,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5903},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329458,"byte_end":9329463,"line_start":1179,"line_end":1179,"column_start":9,"column_end":14},"name":"block","qualname":"::ast::expr::LetType::block","value":"ast::expr::BlockType<'a>","parent":{"krate":0,"index":5901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5904},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329488,"byte_end":9329494,"line_start":1180,"line_end":1180,"column_start":9,"column_end":15},"name":"locals","qualname":"::ast::expr::LetType::locals","value":"std::vec::Vec<ast::func::Local<'a>>","parent":{"krate":0,"index":5901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5908},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329860,"byte_end":9329874,"line_start":1195,"line_end":1195,"column_start":12,"column_end":26},"name":"BrTableIndices","qualname":"::ast::expr::BrTableIndices","value":"BrTableIndices { labels, default }","parent":null,"children":[{"krate":0,"index":5910},{"krate":0,"index":5911}],"decl_id":null,"docs":" Extra information associated with the `br_table` instruction.\n","sig":null,"attributes":[{"value":"/ Extra information associated with the `br_table` instruction.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329743,"byte_end":9329808,"line_start":1192,"line_end":1192,"column_start":1,"column_end":66}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329809,"byte_end":9329831,"line_start":1193,"line_end":1193,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5910},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329889,"byte_end":9329895,"line_start":1196,"line_end":1196,"column_start":9,"column_end":15},"name":"labels","qualname":"::ast::expr::BrTableIndices::labels","value":"std::vec::Vec<ast::token::Index<'a>>","parent":{"krate":0,"index":5908},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5911},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329926,"byte_end":9329933,"line_start":1197,"line_end":1197,"column_start":9,"column_end":16},"name":"default","qualname":"::ast::expr::BrTableIndices::default","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5908},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5915},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9330419,"byte_end":9330426,"line_start":1214,"line_end":1214,"column_start":12,"column_end":19},"name":"LaneArg","qualname":"::ast::expr::LaneArg","value":"LaneArg { lane }","parent":null,"children":[{"krate":0,"index":5916}],"decl_id":null,"docs":" Payload for lane-related instructions. Unsigned with no + prefix.\n","sig":null,"attributes":[{"value":"/ Payload for lane-related instructions. Unsigned with no + prefix.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9330321,"byte_end":9330390,"line_start":1212,"line_end":1212,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":5916},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9330464,"byte_end":9330468,"line_start":1216,"line_end":1216,"column_start":9,"column_end":13},"name":"lane","qualname":"::ast::expr::LaneArg::lane","value":"u8","parent":{"krate":0,"index":5915},"children":[],"decl_id":null,"docs":" The lane argument.\n","sig":null,"attributes":[{"value":"/ The lane argument.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9330433,"byte_end":9330455,"line_start":1215,"line_end":1215,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":5919},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331264,"byte_end":9331270,"line_start":1242,"line_end":1242,"column_start":12,"column_end":18},"name":"MemArg","qualname":"::ast::expr::MemArg","value":"MemArg { align, offset, memory }","parent":null,"children":[{"krate":0,"index":5921},{"krate":0,"index":5922},{"krate":0,"index":5923}],"decl_id":null,"docs":" Payload for memory-related instructions indicating offset/alignment of\n memory accesses.\n","sig":null,"attributes":[{"value":"/ Payload for memory-related instructions indicating offset/alignment of","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331140,"byte_end":9331214,"line_start":1239,"line_end":1239,"column_start":1,"column_end":75}},{"value":"/ memory accesses.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331215,"byte_end":9331235,"line_start":1240,"line_end":1240,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":5921},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331429,"byte_end":9331434,"line_start":1247,"line_end":1247,"column_start":9,"column_end":14},"name":"align","qualname":"::ast::expr::MemArg::align","value":"u32","parent":{"krate":0,"index":5919},"children":[],"decl_id":null,"docs":" The alignment of this access.","sig":null,"attributes":[{"value":"/ The alignment of this access.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331281,"byte_end":9331314,"line_start":1243,"line_end":1243,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331319,"byte_end":9331322,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ This is not stored as a log, this is the actual alignment (e.g. 1, 2, 4,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331327,"byte_end":9331403,"line_start":1245,"line_end":1245,"column_start":5,"column_end":81}},{"value":"/ 8, etc).","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331408,"byte_end":9331420,"line_start":1246,"line_end":1246,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":5922},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331494,"byte_end":9331500,"line_start":1249,"line_end":1249,"column_start":9,"column_end":15},"name":"offset","qualname":"::ast::expr::MemArg::offset","value":"u32","parent":{"krate":0,"index":5919},"children":[],"decl_id":null,"docs":" The offset, in bytes of this access.\n","sig":null,"attributes":[{"value":"/ The offset, in bytes of this access.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331445,"byte_end":9331485,"line_start":1248,"line_end":1248,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5923},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331556,"byte_end":9331562,"line_start":1251,"line_end":1251,"column_start":9,"column_end":15},"name":"memory","qualname":"::ast::expr::MemArg::memory","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":5919},"children":[],"decl_id":null,"docs":" The memory index we're accessing\n","sig":null,"attributes":[{"value":"/ The memory index we're accessing","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331511,"byte_end":9331547,"line_start":1250,"line_end":1250,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5927},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9333695,"byte_end":9333710,"line_start":1314,"line_end":1314,"column_start":12,"column_end":27},"name":"LoadOrStoreLane","qualname":"::ast::expr::LoadOrStoreLane","value":"LoadOrStoreLane { memarg, lane }","parent":null,"children":[{"krate":0,"index":5929},{"krate":0,"index":5930}],"decl_id":null,"docs":" Extra data associated with the `loadN_lane` and `storeN_lane` instructions.\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `loadN_lane` and `storeN_lane` instructions.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9333587,"byte_end":9333666,"line_start":1312,"line_end":1312,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5929},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9333775,"byte_end":9333781,"line_start":1316,"line_end":1316,"column_start":9,"column_end":15},"name":"memarg","qualname":"::ast::expr::LoadOrStoreLane::memarg","value":"ast::expr::MemArg<'a>","parent":{"krate":0,"index":5927},"children":[],"decl_id":null,"docs":" The memory argument for this instruction.\n","sig":null,"attributes":[{"value":"/ The memory argument for this instruction.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9333721,"byte_end":9333766,"line_start":1315,"line_end":1315,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5930},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9333851,"byte_end":9333855,"line_start":1318,"line_end":1318,"column_start":9,"column_end":13},"name":"lane","qualname":"::ast::expr::LoadOrStoreLane::lane","value":"ast::expr::LaneArg","parent":{"krate":0,"index":5927},"children":[],"decl_id":null,"docs":" The lane argument for this instruction.\n","sig":null,"attributes":[{"value":"/ The lane argument for this instruction.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9333799,"byte_end":9333842,"line_start":1317,"line_end":1317,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5934},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9334214,"byte_end":9334226,"line_start":1332,"line_end":1332,"column_start":12,"column_end":24},"name":"CallIndirect","qualname":"::ast::expr::CallIndirect","value":"CallIndirect { table, ty }","parent":null,"children":[{"krate":0,"index":5936},{"krate":0,"index":5937}],"decl_id":null,"docs":" Extra data associated with the `call_indirect` instruction.\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `call_indirect` instruction.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9334122,"byte_end":9334185,"line_start":1330,"line_end":1330,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":5936},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9334299,"byte_end":9334304,"line_start":1334,"line_end":1334,"column_start":9,"column_end":14},"name":"table","qualname":"::ast::expr::CallIndirect::table","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":5934},"children":[],"decl_id":null,"docs":" The table that this call is going to be indexing.\n","sig":null,"attributes":[{"value":"/ The table that this call is going to be indexing.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9334237,"byte_end":9334290,"line_start":1333,"line_end":1333,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5937},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9334419,"byte_end":9334421,"line_start":1336,"line_end":1336,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::expr::CallIndirect::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":5934},"children":[],"decl_id":null,"docs":" Type type signature that this `call_indirect` instruction is using.\n","sig":null,"attributes":[{"value":"/ Type type signature that this `call_indirect` instruction is using.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9334339,"byte_end":9334410,"line_start":1335,"line_end":1335,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5941},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9335280,"byte_end":9335289,"line_start":1359,"line_end":1359,"column_start":12,"column_end":21},"name":"TableInit","qualname":"::ast::expr::TableInit","value":"TableInit { table, elem }","parent":null,"children":[{"krate":0,"index":5943},{"krate":0,"index":5944}],"decl_id":null,"docs":" Extra data associated with the `table.init` instruction\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `table.init` instruction","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9335192,"byte_end":9335251,"line_start":1357,"line_end":1357,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5943},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9335355,"byte_end":9335360,"line_start":1361,"line_end":1361,"column_start":9,"column_end":14},"name":"table","qualname":"::ast::expr::TableInit::table","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" The index of the table we're copying into.\n","sig":null,"attributes":[{"value":"/ The index of the table we're copying into.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9335300,"byte_end":9335346,"line_start":1360,"line_end":1360,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5944},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9335468,"byte_end":9335472,"line_start":1363,"line_end":1363,"column_start":9,"column_end":13},"name":"elem","qualname":"::ast::expr::TableInit::elem","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" The index of the element segment we're copying into a table.\n","sig":null,"attributes":[{"value":"/ The index of the element segment we're copying into a table.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9335395,"byte_end":9335459,"line_start":1362,"line_end":1362,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5948},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336093,"byte_end":9336102,"line_start":1382,"line_end":1382,"column_start":12,"column_end":21},"name":"TableCopy","qualname":"::ast::expr::TableCopy","value":"TableCopy { dst, src }","parent":null,"children":[{"krate":0,"index":5950},{"krate":0,"index":5951}],"decl_id":null,"docs":" Extra data associated with the `table.copy` instruction.\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `table.copy` instruction.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336004,"byte_end":9336064,"line_start":1380,"line_end":1380,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5950},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336174,"byte_end":9336177,"line_start":1384,"line_end":1384,"column_start":9,"column_end":12},"name":"dst","qualname":"::ast::expr::TableCopy::dst","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":5948},"children":[],"decl_id":null,"docs":" The index of the destination table to copy into.\n","sig":null,"attributes":[{"value":"/ The index of the destination table to copy into.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336113,"byte_end":9336165,"line_start":1383,"line_end":1383,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5951},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336268,"byte_end":9336271,"line_start":1386,"line_end":1386,"column_start":9,"column_end":12},"name":"src","qualname":"::ast::expr::TableCopy::src","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":5948},"children":[],"decl_id":null,"docs":" The index of the source table to copy from.\n","sig":null,"attributes":[{"value":"/ The index of the source table to copy from.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336212,"byte_end":9336259,"line_start":1385,"line_end":1385,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5955},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336840,"byte_end":9336848,"line_start":1404,"line_end":1404,"column_start":12,"column_end":20},"name":"TableArg","qualname":"::ast::expr::TableArg","value":"TableArg { dst }","parent":null,"children":[{"krate":0,"index":5957}],"decl_id":null,"docs":" Extra data associated with unary table instructions.\n","sig":null,"attributes":[{"value":"/ Extra data associated with unary table instructions.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336755,"byte_end":9336811,"line_start":1402,"line_end":1402,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5957},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336904,"byte_end":9336907,"line_start":1406,"line_end":1406,"column_start":9,"column_end":12},"name":"dst","qualname":"::ast::expr::TableArg::dst","value":"ast::token::ItemRef<'a, ast::kw::table>","parent":{"krate":0,"index":5955},"children":[],"decl_id":null,"docs":" The index of the table argument.\n","sig":null,"attributes":[{"value":"/ The index of the table argument.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336859,"byte_end":9336895,"line_start":1405,"line_end":1405,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5961},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9337337,"byte_end":9337346,"line_start":1422,"line_end":1422,"column_start":12,"column_end":21},"name":"MemoryArg","qualname":"::ast::expr::MemoryArg","value":"MemoryArg { mem }","parent":null,"children":[{"krate":0,"index":5963}],"decl_id":null,"docs":" Extra data associated with unary memory instructions.\n","sig":null,"attributes":[{"value":"/ Extra data associated with unary memory instructions.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9337251,"byte_end":9337308,"line_start":1420,"line_end":1420,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5963},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9337400,"byte_end":9337403,"line_start":1424,"line_end":1424,"column_start":9,"column_end":12},"name":"mem","qualname":"::ast::expr::MemoryArg::mem","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":5961},"children":[],"decl_id":null,"docs":" The index of the memory space.\n","sig":null,"attributes":[{"value":"/ The index of the memory space.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9337357,"byte_end":9337391,"line_start":1423,"line_end":1423,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":5967},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9337840,"byte_end":9337850,"line_start":1440,"line_end":1440,"column_start":12,"column_end":22},"name":"MemoryInit","qualname":"::ast::expr::MemoryInit","value":"MemoryInit { data, mem }","parent":null,"children":[{"krate":0,"index":5969},{"krate":0,"index":5970}],"decl_id":null,"docs":" Extra data associated with the `memory.init` instruction\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `memory.init` instruction","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9337751,"byte_end":9337811,"line_start":1438,"line_end":1438,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5969},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9337930,"byte_end":9337934,"line_start":1442,"line_end":1442,"column_start":9,"column_end":13},"name":"data","qualname":"::ast::expr::MemoryInit::data","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5967},"children":[],"decl_id":null,"docs":" The index of the data segment we're copying into memory.\n","sig":null,"attributes":[{"value":"/ The index of the data segment we're copying into memory.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9337861,"byte_end":9337921,"line_start":1441,"line_end":1441,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":5970},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9338012,"byte_end":9338015,"line_start":1444,"line_end":1444,"column_start":9,"column_end":12},"name":"mem","qualname":"::ast::expr::MemoryInit::mem","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":5967},"children":[],"decl_id":null,"docs":" The index of the memory we're copying into,\n","sig":null,"attributes":[{"value":"/ The index of the memory we're copying into,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9337956,"byte_end":9338003,"line_start":1443,"line_end":1443,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5974},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9338481,"byte_end":9338491,"line_start":1460,"line_end":1460,"column_start":12,"column_end":22},"name":"MemoryCopy","qualname":"::ast::expr::MemoryCopy","value":"MemoryCopy { src, dst }","parent":null,"children":[{"krate":0,"index":5976},{"krate":0,"index":5977}],"decl_id":null,"docs":" Extra data associated with the `memory.copy` instruction\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `memory.copy` instruction","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9338392,"byte_end":9338452,"line_start":1458,"line_end":1458,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5976},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9338558,"byte_end":9338561,"line_start":1462,"line_end":1462,"column_start":9,"column_end":12},"name":"src","qualname":"::ast::expr::MemoryCopy::src","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" The index of the memory we're copying from.\n","sig":null,"attributes":[{"value":"/ The index of the memory we're copying from.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9338502,"byte_end":9338549,"line_start":1461,"line_end":1461,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5977},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9338651,"byte_end":9338654,"line_start":1464,"line_end":1464,"column_start":9,"column_end":12},"name":"dst","qualname":"::ast::expr::MemoryCopy::dst","value":"ast::token::ItemRef<'a, ast::kw::memory>","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" The index of the memory we're copying to.\n","sig":null,"attributes":[{"value":"/ The index of the memory we're copying to.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9338597,"byte_end":9338642,"line_start":1463,"line_end":1463,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":5981},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339236,"byte_end":9339248,"line_start":1482,"line_end":1482,"column_start":12,"column_end":24},"name":"StructAccess","qualname":"::ast::expr::StructAccess","value":"StructAccess { r#struct, field }","parent":null,"children":[{"krate":0,"index":5983},{"krate":0,"index":5984}],"decl_id":null,"docs":" Extra data associated with the `struct.get/set` instructions\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `struct.get/set` instructions","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339143,"byte_end":9339207,"line_start":1480,"line_end":1480,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":5983},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339317,"byte_end":9339325,"line_start":1484,"line_end":1484,"column_start":9,"column_end":17},"name":"r#struct","qualname":"::ast::expr::StructAccess::r#struct","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5981},"children":[],"decl_id":null,"docs":" The index of the struct type we're accessing.\n","sig":null,"attributes":[{"value":"/ The index of the struct type we're accessing.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339259,"byte_end":9339308,"line_start":1483,"line_end":1483,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":5984},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339412,"byte_end":9339417,"line_start":1486,"line_end":1486,"column_start":9,"column_end":14},"name":"field","qualname":"::ast::expr::StructAccess::field","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5981},"children":[],"decl_id":null,"docs":" The index of the field of the struct we're accessing\n","sig":null,"attributes":[{"value":"/ The index of the field of the struct we're accessing","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339347,"byte_end":9339403,"line_start":1485,"line_end":1485,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5991},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339791,"byte_end":9339796,"line_start":1503,"line_end":1503,"column_start":5,"column_end":10},"name":"I8x16","qualname":"::ast::expr::V128Const::I8x16","value":"V128Const::I8x16([i8; ])","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5995},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339812,"byte_end":9339817,"line_start":1504,"line_end":1504,"column_start":5,"column_end":10},"name":"I16x8","qualname":"::ast::expr::V128Const::I16x8","value":"V128Const::I16x8([i16; ])","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5999},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339833,"byte_end":9339838,"line_start":1505,"line_end":1505,"column_start":5,"column_end":10},"name":"I32x4","qualname":"::ast::expr::V128Const::I32x4","value":"V128Const::I32x4([i32; ])","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6003},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339854,"byte_end":9339859,"line_start":1506,"line_end":1506,"column_start":5,"column_end":10},"name":"I64x2","qualname":"::ast::expr::V128Const::I64x2","value":"V128Const::I64x2([i64; ])","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6007},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339875,"byte_end":9339880,"line_start":1507,"line_end":1507,"column_start":5,"column_end":10},"name":"F32x4","qualname":"::ast::expr::V128Const::F32x4","value":"V128Const::F32x4([ast::Float32; ])","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6011},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339905,"byte_end":9339910,"line_start":1508,"line_end":1508,"column_start":5,"column_end":10},"name":"F64x2","qualname":"::ast::expr::V128Const::F64x2","value":"V128Const::F64x2([ast::Float64; ])","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5990},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339775,"byte_end":9339784,"line_start":1502,"line_end":1502,"column_start":10,"column_end":19},"name":"V128Const","qualname":"::ast::expr::V128Const","value":"pub enum V128Const {\n    I8x16([i8; ]),\n    I16x8([i16; ]),\n    I32x4([i32; ]),\n    I64x2([i64; ]),\n    F32x4([ast::Float32; ]),\n    F64x2([ast::Float64; ]),\n}","parent":null,"children":[{"krate":0,"index":5991},{"krate":0,"index":5995},{"krate":0,"index":5999},{"krate":0,"index":6003},{"krate":0,"index":6007},{"krate":0,"index":6011}],"decl_id":null,"docs":" Different ways to specify a `v128.const` instruction\n","sig":null,"attributes":[{"value":"/ Different ways to specify a `v128.const` instruction","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339652,"byte_end":9339708,"line_start":1498,"line_end":1498,"column_start":1,"column_end":57}},{"value":"rustfmt::skip","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339726,"byte_end":9339742,"line_start":1500,"line_end":1500,"column_start":1,"column_end":17}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339743,"byte_end":9339765,"line_start":1501,"line_end":1501,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6015},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9340194,"byte_end":9340205,"line_start":1518,"line_end":1518,"column_start":12,"column_end":23},"name":"to_le_bytes","qualname":"<V128Const>::to_le_bytes","value":"pub fn to_le_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw little-ended byte sequence used to represent this\n `v128` constant`","sig":null,"attributes":[{"value":"/ Returns the raw little-ended byte sequence used to represent this","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339955,"byte_end":9340024,"line_start":1512,"line_end":1512,"column_start":5,"column_end":74}},{"value":"/ `v128` constant`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9340029,"byte_end":9340049,"line_start":1513,"line_end":1513,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9340054,"byte_end":9340057,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ This is typically suitable for encoding as the payload of the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9340062,"byte_end":9340127,"line_start":1515,"line_end":1515,"column_start":5,"column_end":70}},{"value":"/ `v128.const` instruction.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9340132,"byte_end":9340161,"line_start":1516,"line_end":1516,"column_start":5,"column_end":34}},{"value":"rustfmt::skip","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9340166,"byte_end":9340182,"line_start":1517,"line_end":1517,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":6017},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9345351,"byte_end":9345363,"line_start":1667,"line_end":1667,"column_start":12,"column_end":24},"name":"I8x16Shuffle","qualname":"::ast::expr::I8x16Shuffle","value":"I8x16Shuffle { lanes }","parent":null,"children":[{"krate":0,"index":6018}],"decl_id":null,"docs":" Lanes being shuffled in the `i8x16.shuffle` instruction\n","sig":null,"attributes":[{"value":"/ Lanes being shuffled in the `i8x16.shuffle` instruction","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9345263,"byte_end":9345322,"line_start":1665,"line_end":1665,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6018},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9345401,"byte_end":9345406,"line_start":1669,"line_end":1669,"column_start":9,"column_end":14},"name":"lanes","qualname":"::ast::expr::I8x16Shuffle::lanes","value":"[u8; 16]","parent":{"krate":0,"index":6017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9345370,"byte_end":9345392,"line_start":1668,"line_end":1668,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":6022},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9346189,"byte_end":9346200,"line_start":1699,"line_end":1699,"column_start":12,"column_end":23},"name":"SelectTypes","qualname":"::ast::expr::SelectTypes","value":"SelectTypes { tys }","parent":null,"children":[{"krate":0,"index":6024}],"decl_id":null,"docs":" Payload of the `select` instructions\n","sig":null,"attributes":[{"value":"/ Payload of the `select` instructions","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9346120,"byte_end":9346160,"line_start":1697,"line_end":1697,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":6024},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9346242,"byte_end":9346245,"line_start":1701,"line_end":1701,"column_start":9,"column_end":12},"name":"tys","qualname":"::ast::expr::SelectTypes::tys","value":"std::option::Option<std::vec::Vec<ast::types::ValType<'a>>>","parent":{"krate":0,"index":6022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9346211,"byte_end":9346233,"line_start":1700,"line_end":1700,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":6028},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347002,"byte_end":9347006,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Func","qualname":"::ast::func::Func","value":"Func { span, id, name, exports, kind, ty }","parent":null,"children":[{"krate":0,"index":6030},{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6034},{"krate":0,"index":6035}],"decl_id":null,"docs":" A WebAssembly function to be inserted into a module.","sig":null,"attributes":[{"value":"/ A WebAssembly function to be inserted into a module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9346852,"byte_end":9346908,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9346909,"byte_end":9346912,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is a member of both the function and code sections.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9346913,"byte_end":9346973,"line_start":6,"line_end":6,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":6030},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347060,"byte_end":9347064,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::func::Func::span","value":"ast::token::Span","parent":{"krate":0,"index":6028},"children":[],"decl_id":null,"docs":" Where this `func` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `func` was defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347017,"byte_end":9347051,"line_start":9,"line_end":9,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6031},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347185,"byte_end":9347187,"line_start":13,"line_end":13,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::func::Func::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6028},"children":[],"decl_id":null,"docs":" An identifier that this function is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this function is resolved with (optionally) for name","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347081,"byte_end":9347156,"line_start":11,"line_end":11,"column_start":5,"column_end":80}},{"value":"/ resolution.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347161,"byte_end":9347176,"line_start":12,"line_end":12,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6032},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347298,"byte_end":9347302,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::func::Func::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6028},"children":[],"decl_id":null,"docs":" An optional name for this function stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this function stored in the custom `name` section.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347214,"byte_end":9347289,"line_start":14,"line_end":14,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":6033},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347462,"byte_end":9347469,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::func::Func::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6028},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347341,"byte_end":9347408,"line_start":16,"line_end":16,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347413,"byte_end":9347453,"line_start":17,"line_end":17,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6034},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347595,"byte_end":9347599,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::func::Func::kind","value":"ast::func::FuncKind<'a>","parent":{"krate":0,"index":6028},"children":[],"decl_id":null,"docs":" What kind of function this is, be it an inline-defined or imported\n function.\n","sig":null,"attributes":[{"value":"/ What kind of function this is, be it an inline-defined or imported","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347498,"byte_end":9347568,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347573,"byte_end":9347586,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":6035},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347670,"byte_end":9347672,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::func::Func::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":6028},"children":[],"decl_id":null,"docs":" The type that this function will have.\n","sig":null,"attributes":[{"value":"/ The type that this function will have.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347619,"byte_end":9347661,"line_start":22,"line_end":22,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6041},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347971,"byte_end":9347977,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::func::FuncKind::Import","value":"FuncKind::Import(ast::InlineImport)","parent":{"krate":0,"index":6039},"children":[],"decl_id":null,"docs":" A function which is actually defined as an import, such as:","sig":null,"attributes":[{"value":"/ A function which is actually defined as an import, such as:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347822,"byte_end":9347885,"line_start":29,"line_end":29,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347890,"byte_end":9347893,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347898,"byte_end":9347909,"line_start":31,"line_end":31,"column_start":5,"column_end":16}},{"value":"/ (func (type 3) (import \"foo\" \"bar\"))","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347914,"byte_end":9347954,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347959,"byte_end":9347966,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":6044},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9348076,"byte_end":9348082,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::func::FuncKind::Inline","value":"FuncKind::Inline { locals, expression }","parent":{"krate":0,"index":6039},"children":[],"decl_id":null,"docs":" Almost all functions, those defined inline in a wasm module.\n","sig":null,"attributes":[{"value":"/ Almost all functions, those defined inline in a wasm module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9348007,"byte_end":9348071,"line_start":36,"line_end":36,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":6039},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347803,"byte_end":9347811,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"name":"FuncKind","qualname":"::ast::func::FuncKind","value":"pub enum FuncKind<'a> {\n    Import(ast::InlineImport),\n    Inline {\n        locals: Vec<Local>,\n        expression: ast::Expression,\n    },\n}","parent":null,"children":[{"krate":0,"index":6041},{"krate":0,"index":6044}],"decl_id":null,"docs":" Possible ways to define a function in the text format.\n","sig":null,"attributes":[{"value":"/ Possible ways to define a function in the text format.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9347718,"byte_end":9347776,"line_start":26,"line_end":26,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6050},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349301,"byte_end":9349306,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"name":"Local","qualname":"::ast::func::Local","value":"Local { id, name, ty }","parent":null,"children":[{"krate":0,"index":6052},{"krate":0,"index":6053},{"krate":0,"index":6054}],"decl_id":null,"docs":" A local for a `func` or `let` instruction.","sig":null,"attributes":[{"value":"/ A local for a `func` or `let` instruction.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349089,"byte_end":9349135,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349136,"byte_end":9349139,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Each local has an optional identifier for name resolution, an optional name","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349140,"byte_end":9349219,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ for the custom `name` section, and a value type.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349220,"byte_end":9349272,"line_start":81,"line_end":81,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":6052},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349418,"byte_end":9349420,"line_start":86,"line_end":86,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::func::Local::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6050},"children":[],"decl_id":null,"docs":" An identifier that this local is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this local is resolved with (optionally) for name","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349317,"byte_end":9349389,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ resolution.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349394,"byte_end":9349409,"line_start":85,"line_end":85,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6053},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349528,"byte_end":9349532,"line_start":88,"line_end":88,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::func::Local::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6050},"children":[],"decl_id":null,"docs":" An optional name for this local stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this local stored in the custom `name` section.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349447,"byte_end":9349519,"line_start":87,"line_end":87,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":6054},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349613,"byte_end":9349615,"line_start":90,"line_end":90,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::func::Local::ty","value":"ast::types::ValType<'a>","parent":{"krate":0,"index":6050},"children":[],"decl_id":null,"docs":" The value type of this local.\n","sig":null,"attributes":[{"value":"/ The value type of this local.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349571,"byte_end":9349604,"line_start":89,"line_end":89,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6058},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9350602,"byte_end":9350608,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Global","qualname":"::ast::global::Global","value":"Global { span, id, exports, ty, kind }","parent":null,"children":[{"krate":0,"index":6060},{"krate":0,"index":6061},{"krate":0,"index":6062},{"krate":0,"index":6063},{"krate":0,"index":6064}],"decl_id":null,"docs":" A WebAssembly global in a module\n","sig":null,"attributes":[{"value":"/ A WebAssembly global in a module","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9350537,"byte_end":9350573,"line_start":4,"line_end":4,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6060},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9350664,"byte_end":9350668,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::global::Global::span","value":"ast::token::Span","parent":{"krate":0,"index":6058},"children":[],"decl_id":null,"docs":" Where this `global` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `global` was defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9350619,"byte_end":9350655,"line_start":7,"line_end":7,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":6061},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9350742,"byte_end":9350744,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::global::Global::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6058},"children":[],"decl_id":null,"docs":" An optional name to reference this global by\n","sig":null,"attributes":[{"value":"/ An optional name to reference this global by","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9350685,"byte_end":9350733,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":6062},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9350892,"byte_end":9350899,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::global::Global::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6058},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9350771,"byte_end":9350838,"line_start":11,"line_end":11,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9350843,"byte_end":9350883,"line_start":12,"line_end":12,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6063},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351011,"byte_end":9351013,"line_start":15,"line_end":15,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::global::Global::ty","value":"ast::types::GlobalType<'a>","parent":{"krate":0,"index":6058},"children":[],"decl_id":null,"docs":" The type of this global, both its value type and whether it's mutable.\n","sig":null,"attributes":[{"value":"/ The type of this global, both its value type and whether it's mutable.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9350928,"byte_end":9351002,"line_start":14,"line_end":14,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":6064},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351089,"byte_end":9351093,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::global::Global::kind","value":"ast::global::GlobalKind<'a>","parent":{"krate":0,"index":6058},"children":[],"decl_id":null,"docs":" What kind of global this defined as.\n","sig":null,"attributes":[{"value":"/ What kind of global this defined as.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351040,"byte_end":9351080,"line_start":16,"line_end":16,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6070},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351369,"byte_end":9351375,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::global::GlobalKind::Import","value":"GlobalKind::Import(ast::InlineImport)","parent":{"krate":0,"index":6068},"children":[],"decl_id":null,"docs":" A global which is actually defined as an import, such as:","sig":null,"attributes":[{"value":"/ A global which is actually defined as an import, such as:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351225,"byte_end":9351286,"line_start":23,"line_end":23,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351291,"byte_end":9351294,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351299,"byte_end":9351310,"line_start":25,"line_end":25,"column_start":5,"column_end":16}},{"value":"/ (global i32 (import \"foo\" \"bar\"))","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351315,"byte_end":9351352,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351357,"byte_end":9351364,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6073},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351458,"byte_end":9351464,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::global::GlobalKind::Inline","value":"GlobalKind::Inline(ast::Expression)","parent":{"krate":0,"index":6068},"children":[],"decl_id":null,"docs":" A global defined inline in the module itself\n","sig":null,"attributes":[{"value":"/ A global defined inline in the module itself","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351405,"byte_end":9351453,"line_start":30,"line_end":30,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6068},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351204,"byte_end":9351214,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"name":"GlobalKind","qualname":"::ast::global::GlobalKind","value":"pub enum GlobalKind<'a> {\n    Import(ast::InlineImport),\n    Inline(ast::Expression),\n}","parent":null,"children":[{"krate":0,"index":6070},{"krate":0,"index":6073}],"decl_id":null,"docs":" Different kinds of globals that can be defined in a module.\n","sig":null,"attributes":[{"value":"/ Different kinds of globals that can be defined in a module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351114,"byte_end":9351177,"line_start":20,"line_end":20,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6079},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9352233,"byte_end":9352239,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Import","qualname":"::ast::import::Import","value":"Import { span, module, field, item }","parent":null,"children":[{"krate":0,"index":6081},{"krate":0,"index":6082},{"krate":0,"index":6083},{"krate":0,"index":6084}],"decl_id":null,"docs":" An `import` statement and entry in a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ An `import` statement and entry in a WebAssembly module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9352137,"byte_end":9352197,"line_start":4,"line_end":4,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":6081},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9352294,"byte_end":9352298,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::import::Import::span","value":"ast::token::Span","parent":{"krate":0,"index":6079},"children":[],"decl_id":null,"docs":" Where this `import` was defined\n","sig":null,"attributes":[{"value":"/ Where this `import` was defined","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9352250,"byte_end":9352285,"line_start":7,"line_end":7,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6082},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9352376,"byte_end":9352382,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::import::Import::module","value":"&'a str","parent":{"krate":0,"index":6079},"children":[],"decl_id":null,"docs":" The module that this statement is importing from\n","sig":null,"attributes":[{"value":"/ The module that this statement is importing from","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9352315,"byte_end":9352367,"line_start":9,"line_end":9,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":6083},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9352474,"byte_end":9352479,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"field","qualname":"::ast::import::Import::field","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":6079},"children":[],"decl_id":null,"docs":" The name of the field in the module this statement imports from.\n","sig":null,"attributes":[{"value":"/ The name of the field in the module this statement imports from.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9352397,"byte_end":9352465,"line_start":11,"line_end":11,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":6084},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9352546,"byte_end":9352550,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"item","qualname":"::ast::import::Import::item","value":"ast::import::ItemSig<'a>","parent":{"krate":0,"index":6079},"children":[],"decl_id":null,"docs":" The item that's being imported.\n","sig":null,"attributes":[{"value":"/ The item that's being imported.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9352502,"byte_end":9352537,"line_start":13,"line_end":13,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6091},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353005,"byte_end":9353012,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"ItemSig","qualname":"::ast::import::ItemSig","value":"ItemSig { span, id, name, kind }","parent":null,"children":[{"krate":0,"index":6093},{"krate":0,"index":6094},{"krate":0,"index":6095},{"krate":0,"index":6096}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9352971,"byte_end":9352993,"line_start":33,"line_end":33,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6093},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353077,"byte_end":9353081,"line_start":36,"line_end":36,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::import::ItemSig::span","value":"ast::token::Span","parent":{"krate":0,"index":6091},"children":[],"decl_id":null,"docs":" Where this item is defined in the source.\n","sig":null,"attributes":[{"value":"/ Where this item is defined in the source.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353023,"byte_end":9353068,"line_start":35,"line_end":35,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6094},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353220,"byte_end":9353222,"line_start":39,"line_end":39,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::import::ItemSig::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6091},"children":[],"decl_id":null,"docs":" An optional identifier used during name resolution to refer to this item\n from the rest of the module.\n","sig":null,"attributes":[{"value":"/ An optional identifier used during name resolution to refer to this item","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353098,"byte_end":9353174,"line_start":37,"line_end":37,"column_start":5,"column_end":81}},{"value":"/ from the rest of the module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353179,"byte_end":9353211,"line_start":38,"line_end":38,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6095},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353353,"byte_end":9353357,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::import::ItemSig::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6091},"children":[],"decl_id":null,"docs":" An optional name which, for functions, will be stored in the\n custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name which, for functions, will be stored in the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353249,"byte_end":9353313,"line_start":40,"line_end":40,"column_start":5,"column_end":69}},{"value":"/ custom `name` section.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353318,"byte_end":9353344,"line_start":41,"line_end":41,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6096},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353435,"byte_end":9353439,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::import::ItemSig::kind","value":"ast::import::ItemKind<'a>","parent":{"krate":0,"index":6091},"children":[],"decl_id":null,"docs":" What kind of item this is.\n","sig":null,"attributes":[{"value":"/ What kind of item this is.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353396,"byte_end":9353426,"line_start":43,"line_end":43,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6105},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353533,"byte_end":9353537,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::import::ItemKind::Func","value":"ItemKind::Func(ast::TypeUse)","parent":{"krate":0,"index":6103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6108},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353584,"byte_end":9353589,"line_start":51,"line_end":51,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::import::ItemKind::Table","value":"ItemKind::Table(ast::TableType)","parent":{"krate":0,"index":6103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6111},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353615,"byte_end":9353621,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::import::ItemKind::Memory","value":"ItemKind::Memory(ast::MemoryType)","parent":{"krate":0,"index":6103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6114},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353644,"byte_end":9353650,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::import::ItemKind::Global","value":"ItemKind::Global(ast::GlobalType)","parent":{"krate":0,"index":6103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6117},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353677,"byte_end":9353682,"line_start":54,"line_end":54,"column_start":5,"column_end":10},"name":"Event","qualname":"::ast::import::ItemKind::Event","value":"ItemKind::Event(ast::EventType)","parent":{"krate":0,"index":6103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6120},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353708,"byte_end":9353714,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::import::ItemKind::Module","value":"ItemKind::Module(ast::TypeUse)","parent":{"krate":0,"index":6103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6123},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353759,"byte_end":9353767,"line_start":56,"line_end":56,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::import::ItemKind::Instance","value":"ItemKind::Instance(ast::TypeUse)","parent":{"krate":0,"index":6103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6103},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353514,"byte_end":9353522,"line_start":49,"line_end":49,"column_start":10,"column_end":18},"name":"ItemKind","qualname":"::ast::import::ItemKind","value":"pub enum ItemKind<'a> {\n    Func(ast::TypeUse),\n    Table(ast::TableType),\n    Memory(ast::MemoryType),\n    Global(ast::GlobalType),\n    Event(ast::EventType),\n    Module(ast::TypeUse),\n    Instance(ast::TypeUse),\n}","parent":null,"children":[{"krate":0,"index":6105},{"krate":0,"index":6108},{"krate":0,"index":6111},{"krate":0,"index":6114},{"krate":0,"index":6117},{"krate":0,"index":6120},{"krate":0,"index":6123}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353482,"byte_end":9353504,"line_start":48,"line_end":48,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6132},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9356373,"byte_end":9356385,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"InlineImport","qualname":"::ast::import::InlineImport","value":"InlineImport { module, field }","parent":null,"children":[{"krate":0,"index":6134},{"krate":0,"index":6135}],"decl_id":null,"docs":" A listing of a inline `(import \"foo\")` statement.","sig":null,"attributes":[{"value":"/ A listing of a inline `(import \"foo\")` statement.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9355984,"byte_end":9356037,"line_start":124,"line_end":124,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9356038,"byte_end":9356041,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Note that when parsing this type it is somewhat unconventional that it","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9356042,"byte_end":9356116,"line_start":126,"line_end":126,"column_start":1,"column_end":75}},{"value":"/ parses its own surrounding parentheses. This is typically an optional type,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9356117,"byte_end":9356196,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ so it's so far been a bit nicer to have the optionality handled through","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9356197,"byte_end":9356272,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ `Peek` rather than `Option<T>`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9356273,"byte_end":9356308,"line_start":129,"line_end":129,"column_start":1,"column_end":36}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9356339,"byte_end":9356361,"line_start":131,"line_end":131,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6134},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9356400,"byte_end":9356406,"line_start":133,"line_end":133,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::import::InlineImport::module","value":"&'a str","parent":{"krate":0,"index":6132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6135},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9356425,"byte_end":9356430,"line_start":134,"line_end":134,"column_start":9,"column_end":14},"name":"field","qualname":"::ast::import::InlineImport::field","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":6132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6144},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9357647,"byte_end":9357655,"line_start":6,"line_end":6,"column_start":12,"column_end":20},"name":"Instance","qualname":"::ast::instance::Instance","value":"Instance { span, id, exports, kind }","parent":null,"children":[{"krate":0,"index":6146},{"krate":0,"index":6147},{"krate":0,"index":6148},{"krate":0,"index":6149}],"decl_id":null,"docs":" A nested WebAssembly instance to be created as part of a module.\n","sig":null,"attributes":[{"value":"/ A nested WebAssembly instance to be created as part of a module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9357550,"byte_end":9357618,"line_start":4,"line_end":4,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":6146},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9357713,"byte_end":9357717,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::instance::Instance::span","value":"ast::token::Span","parent":{"krate":0,"index":6144},"children":[],"decl_id":null,"docs":" Where this `instance` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `instance` was defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9357666,"byte_end":9357704,"line_start":7,"line_end":7,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6147},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9357838,"byte_end":9357840,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::instance::Instance::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6144},"children":[],"decl_id":null,"docs":" An identifier that this instance is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this instance is resolved with (optionally) for name","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9357734,"byte_end":9357809,"line_start":9,"line_end":9,"column_start":5,"column_end":80}},{"value":"/ resolution.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9357814,"byte_end":9357829,"line_start":10,"line_end":10,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6148},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9357988,"byte_end":9357995,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::instance::Instance::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6144},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9357867,"byte_end":9357934,"line_start":12,"line_end":12,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9357939,"byte_end":9357979,"line_start":13,"line_end":13,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6149},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358108,"byte_end":9358112,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::instance::Instance::kind","value":"ast::instance::InstanceKind<'a>","parent":{"krate":0,"index":6144},"children":[],"decl_id":null,"docs":" What kind of instance this is, be it an inline-defined or imported one.\n","sig":null,"attributes":[{"value":"/ What kind of instance this is, be it an inline-defined or imported one.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358024,"byte_end":9358099,"line_start":15,"line_end":15,"column_start":5,"column_end":80}}]},{"kind":"StructVariant","id":{"krate":0,"index":6155},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358312,"byte_end":9358318,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::instance::InstanceKind::Import","value":"InstanceKind::Import { import, ty }","parent":{"krate":0,"index":6153},"children":[],"decl_id":null,"docs":" An instance which is actually defined as an import, such as:\n","sig":null,"attributes":[{"value":"/ An instance which is actually defined as an import, such as:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358243,"byte_end":9358307,"line_start":22,"line_end":22,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":6158},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358572,"byte_end":9358578,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::instance::InstanceKind::Inline","value":"InstanceKind::Inline { module, args }","parent":{"krate":0,"index":6153},"children":[],"decl_id":null,"docs":" Instances whose instantiation is defined inline.\n","sig":null,"attributes":[{"value":"/ Instances whose instantiation is defined inline.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358515,"byte_end":9358567,"line_start":30,"line_end":30,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":6153},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358220,"byte_end":9358232,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"InstanceKind","qualname":"::ast::instance::InstanceKind","value":"pub enum InstanceKind<'a> {\n    Import {\n        import: ast::InlineImport,\n        ty: ast::TypeUse,\n    },\n    Inline {\n        module: ast::ItemRef,\n        args: Vec<InstanceArg>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6155},{"krate":0,"index":6158}],"decl_id":null,"docs":" Possible ways to define a instance in the text format.\n","sig":null,"attributes":[{"value":"/ Possible ways to define a instance in the text format.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358135,"byte_end":9358193,"line_start":19,"line_end":19,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6164},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358870,"byte_end":9358881,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"InstanceArg","qualname":"::ast::instance::InstanceArg","value":"InstanceArg { name, index }","parent":null,"children":[{"krate":0,"index":6166},{"krate":0,"index":6167}],"decl_id":null,"docs":" Arguments to the `instantiate` instruction\n","sig":null,"attributes":[{"value":"/ Arguments to the `instantiate` instruction","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358772,"byte_end":9358818,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358836,"byte_end":9358858,"line_start":41,"line_end":41,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6166},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358896,"byte_end":9358900,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::instance::InstanceArg::name","value":"&'a str","parent":{"krate":0,"index":6164},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6167},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358919,"byte_end":9358924,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"name":"index","qualname":"::ast::instance::InstanceArg::index","value":"ast::token::ItemRef<'a, ast::export::ExportKind>","parent":{"krate":0,"index":6164},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6171},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360296,"byte_end":9360302,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Memory","qualname":"::ast::memory::Memory","value":"Memory { span, id, exports, kind }","parent":null,"children":[{"krate":0,"index":6173},{"krate":0,"index":6174},{"krate":0,"index":6175},{"krate":0,"index":6176}],"decl_id":null,"docs":" A defined WebAssembly memory instance inside of a module.\n","sig":null,"attributes":[{"value":"/ A defined WebAssembly memory instance inside of a module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360206,"byte_end":9360267,"line_start":4,"line_end":4,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":6173},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360357,"byte_end":9360361,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::memory::Memory::span","value":"ast::token::Span","parent":{"krate":0,"index":6171},"children":[],"decl_id":null,"docs":" Where this `memory` was defined\n","sig":null,"attributes":[{"value":"/ Where this `memory` was defined","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360313,"byte_end":9360348,"line_start":7,"line_end":7,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6174},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360435,"byte_end":9360437,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::memory::Memory::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6171},"children":[],"decl_id":null,"docs":" An optional name to refer to this memory by.\n","sig":null,"attributes":[{"value":"/ An optional name to refer to this memory by.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360378,"byte_end":9360426,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":6175},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360585,"byte_end":9360592,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::memory::Memory::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6171},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360464,"byte_end":9360531,"line_start":11,"line_end":11,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360536,"byte_end":9360576,"line_start":12,"line_end":12,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6176},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360675,"byte_end":9360679,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::memory::Memory::kind","value":"ast::memory::MemoryKind<'a>","parent":{"krate":0,"index":6171},"children":[],"decl_id":null,"docs":" How this memory is defined in the module.\n","sig":null,"attributes":[{"value":"/ How this memory is defined in the module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360621,"byte_end":9360666,"line_start":14,"line_end":14,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":6182},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360904,"byte_end":9360910,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::memory::MemoryKind::Import","value":"MemoryKind::Import { import, ty }","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":" This memory is actually an inlined import definition.\n","sig":null,"attributes":[{"value":"/ This memory is actually an inlined import definition.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360815,"byte_end":9360872,"line_start":21,"line_end":21,"column_start":5,"column_end":62}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360877,"byte_end":9360899,"line_start":22,"line_end":22,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6185},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9361072,"byte_end":9361078,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ast::memory::MemoryKind::Normal","value":"MemoryKind::Normal(ast::MemoryType)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":" A typical memory definition which simply says the limits of the memory\n","sig":null,"attributes":[{"value":"/ A typical memory definition which simply says the limits of the memory","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360993,"byte_end":9361067,"line_start":28,"line_end":28,"column_start":5,"column_end":79}}]},{"kind":"StructVariant","id":{"krate":0,"index":6188},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9361170,"byte_end":9361176,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::memory::MemoryKind::Inline","value":"MemoryKind::Inline { is_32, data }","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":" The data of this memory, starting from 0, explicitly listed\n","sig":null,"attributes":[{"value":"/ The data of this memory, starting from 0, explicitly listed","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9361102,"byte_end":9361165,"line_start":31,"line_end":31,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":6180},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360794,"byte_end":9360804,"line_start":20,"line_end":20,"column_start":10,"column_end":20},"name":"MemoryKind","qualname":"::ast::memory::MemoryKind","value":"pub enum MemoryKind<'a> {\n    Import {\n        import: ast::InlineImport,\n        ty: ast::MemoryType,\n    },\n    Normal(ast::MemoryType),\n    Inline {\n        is_32: bool,\n        data: Vec<DataVal>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6182},{"krate":0,"index":6185},{"krate":0,"index":6188}],"decl_id":null,"docs":" Different syntactical ways a memory can be defined in a module.\n","sig":null,"attributes":[{"value":"/ Different syntactical ways a memory can be defined in a module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9360700,"byte_end":9360767,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6194},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9362987,"byte_end":9362991,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"Data","qualname":"::ast::memory::Data","value":"Data { span, id, kind, data }","parent":null,"children":[{"krate":0,"index":6196},{"krate":0,"index":6197},{"krate":0,"index":6198},{"krate":0,"index":6199}],"decl_id":null,"docs":" A `data` directive in a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ A `data` directive in a WebAssembly module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9362911,"byte_end":9362958,"line_start":88,"line_end":88,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":6196},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363044,"byte_end":9363048,"line_start":92,"line_end":92,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::memory::Data::span","value":"ast::token::Span","parent":{"krate":0,"index":6194},"children":[],"decl_id":null,"docs":" Where this `data` was defined\n","sig":null,"attributes":[{"value":"/ Where this `data` was defined","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363002,"byte_end":9363035,"line_start":91,"line_end":91,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6197},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363117,"byte_end":9363119,"line_start":95,"line_end":95,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::memory::Data::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6194},"children":[],"decl_id":null,"docs":" The optional name of this data segment\n","sig":null,"attributes":[{"value":"/ The optional name of this data segment","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363066,"byte_end":9363108,"line_start":94,"line_end":94,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6198},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363206,"byte_end":9363210,"line_start":98,"line_end":98,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::memory::Data::kind","value":"ast::memory::DataKind<'a>","parent":{"krate":0,"index":6194},"children":[],"decl_id":null,"docs":" Whether this data segment is passive or active\n","sig":null,"attributes":[{"value":"/ Whether this data segment is passive or active","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363147,"byte_end":9363197,"line_start":97,"line_end":97,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":6199},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363339,"byte_end":9363343,"line_start":102,"line_end":102,"column_start":9,"column_end":13},"name":"data","qualname":"::ast::memory::Data::data","value":"std::vec::Vec<ast::memory::DataVal<'a>>","parent":{"krate":0,"index":6194},"children":[],"decl_id":null,"docs":" Bytes for this `Data` segment, viewed as the concatenation of all the\n contained slices.\n","sig":null,"attributes":[{"value":"/ Bytes for this `Data` segment, viewed as the concatenation of all the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363231,"byte_end":9363304,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ contained slices.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363309,"byte_end":9363330,"line_start":101,"line_end":101,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6205},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363596,"byte_end":9363603,"line_start":110,"line_end":110,"column_start":5,"column_end":12},"name":"Passive","qualname":"::ast::memory::DataKind::Passive","value":"DataKind::Passive","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" A passive data segment which isn't associated with a memory and is\n referenced from various instructions.\n","sig":null,"attributes":[{"value":"/ A passive data segment which isn't associated with a memory and is","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363475,"byte_end":9363545,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/ referenced from various instructions.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363550,"byte_end":9363591,"line_start":109,"line_end":109,"column_start":5,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":6207},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363730,"byte_end":9363736,"line_start":114,"line_end":114,"column_start":5,"column_end":11},"name":"Active","qualname":"::ast::memory::DataKind::Active","value":"DataKind::Active { memory, offset }","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" An active data segment which is associated and loaded into a particular\n memory on module instantiation.\n","sig":null,"attributes":[{"value":"/ An active data segment which is associated and loaded into a particular","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363610,"byte_end":9363685,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ memory on module instantiation.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363690,"byte_end":9363725,"line_start":113,"line_end":113,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":6203},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363456,"byte_end":9363464,"line_start":107,"line_end":107,"column_start":10,"column_end":18},"name":"DataKind","qualname":"::ast::memory::DataKind","value":"pub enum DataKind<'a> {\n    Passive,\n    Active {\n        memory: ast::ItemRef,\n        offset: ast::Expression,\n    },\n}","parent":null,"children":[{"krate":0,"index":6205},{"krate":0,"index":6207}],"decl_id":null,"docs":" Different kinds of data segments, either passive or active.\n","sig":null,"attributes":[{"value":"/ Different kinds of data segments, either passive or active.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363366,"byte_end":9363429,"line_start":105,"line_end":105,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6215},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9365683,"byte_end":9365689,"line_start":176,"line_end":176,"column_start":5,"column_end":11},"name":"String","qualname":"::ast::memory::DataVal::String","value":"DataVal::String(&'a [u8])","parent":{"krate":0,"index":6213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6218},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9365705,"byte_end":9365713,"line_start":177,"line_end":177,"column_start":5,"column_end":13},"name":"Integral","qualname":"::ast::memory::DataVal::Integral","value":"DataVal::Integral(Vec<u8>)","parent":{"krate":0,"index":6213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6213},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9365665,"byte_end":9365672,"line_start":175,"line_end":175,"column_start":10,"column_end":17},"name":"DataVal","qualname":"::ast::memory::DataVal","value":"pub enum DataVal<'a> { String(&'a [u8]), Integral(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":6215},{"krate":0,"index":6218}],"decl_id":null,"docs":" Differnet ways the value of a data segment can be defined.\n","sig":null,"attributes":[{"value":"/ Differnet ways the value of a data segment can be defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9365553,"byte_end":9365615,"line_start":172,"line_end":172,"column_start":1,"column_end":63}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9365633,"byte_end":9365655,"line_start":174,"line_end":174,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9365852,"byte_end":9365855,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"len","qualname":"<DataVal>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length, in bytes, of the memory used to represent this data\n value.\n","sig":null,"attributes":[{"value":"/ Returns the length, in bytes, of the memory used to represent this data","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9365750,"byte_end":9365825,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ value.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9365830,"byte_end":9365840,"line_start":182,"line_end":182,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9366088,"byte_end":9366097,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"push_onto","qualname":"<DataVal>::push_onto","value":"pub fn push_onto(&Self, &mut Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the value of this data value onto the provided list of bytes.\n","sig":null,"attributes":[{"value":"/ Pushes the value of this data value onto the provided list of bytes.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9366004,"byte_end":9366076,"line_start":190,"line_end":190,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9368584,"byte_end":9368587,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Wat","qualname":"::ast::module::Wat","value":"Wat { module }","parent":null,"children":[{"krate":0,"index":1704}],"decl_id":null,"docs":" A `*.wat` file parser, or a parser for one parenthesized module.","sig":null,"attributes":[{"value":"/ A `*.wat` file parser, or a parser for one parenthesized module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9368295,"byte_end":9368363,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9368364,"byte_end":9368367,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the top-level type which you'll frequently parse when working with","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9368368,"byte_end":9368446,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ this crate. A `*.wat` file is either one `module` s-expression or a sequence","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9368447,"byte_end":9368527,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ of s-expressions that are module fields.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9368528,"byte_end":9368572,"line_start":10,"line_end":10,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9368629,"byte_end":9368635,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::module::Wat::module","value":"ast::module::Module<'a>","parent":{"krate":0,"index":1702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9368598,"byte_end":9368620,"line_start":12,"line_end":12,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369420,"byte_end":9369426,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"Module","qualname":"::ast::module::Module","value":"Module { span, id, name, kind }","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714}],"decl_id":null,"docs":" A parsed WebAssembly module.\n","sig":null,"attributes":[{"value":"/ A parsed WebAssembly module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369376,"byte_end":9369408,"line_start":38,"line_end":38,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1711},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369481,"byte_end":9369485,"line_start":41,"line_end":41,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::module::Module::span","value":"ast::token::Span","parent":{"krate":0,"index":1709},"children":[],"decl_id":null,"docs":" Where this `module` was defined\n","sig":null,"attributes":[{"value":"/ Where this `module` was defined","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369437,"byte_end":9369472,"line_start":40,"line_end":40,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369561,"byte_end":9369563,"line_start":43,"line_end":43,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::module::Module::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":1709},"children":[],"decl_id":null,"docs":" An optional identifier this module is known by\n","sig":null,"attributes":[{"value":"/ An optional identifier this module is known by","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369502,"byte_end":9369552,"line_start":42,"line_end":42,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369649,"byte_end":9369653,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::module::Module::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":1709},"children":[],"decl_id":null,"docs":" An optional `@name` annotation for this module\n","sig":null,"attributes":[{"value":"/ An optional `@name` annotation for this module","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369590,"byte_end":9369640,"line_start":44,"line_end":44,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369744,"byte_end":9369748,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::module::Module::kind","value":"ast::module::ModuleKind<'a>","parent":{"krate":0,"index":1709},"children":[],"decl_id":null,"docs":" What kind of module this was parsed as.\n","sig":null,"attributes":[{"value":"/ What kind of module this was parsed as.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369692,"byte_end":9369735,"line_start":46,"line_end":46,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1717},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369912,"byte_end":9369916,"line_start":53,"line_end":53,"column_start":5,"column_end":9},"name":"Text","qualname":"::ast::module::ModuleKind::Text","value":"ModuleKind::Text(Vec<ModuleField>)","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" A module defined in the textual s-expression format.\n","sig":null,"attributes":[{"value":"/ A module defined in the textual s-expression format.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369851,"byte_end":9369907,"line_start":52,"line_end":52,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370035,"byte_end":9370041,"line_start":56,"line_end":56,"column_start":5,"column_end":11},"name":"Binary","qualname":"::ast::module::ModuleKind::Binary","value":"ModuleKind::Binary(Vec<&'a [u8]>)","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" A module that had its raw binary bytes defined via the `binary`\n directive.\n","sig":null,"attributes":[{"value":"/ A module that had its raw binary bytes defined via the `binary`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369944,"byte_end":9370011,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ directive.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370016,"byte_end":9370030,"line_start":55,"line_end":55,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369830,"byte_end":9369840,"line_start":51,"line_end":51,"column_start":10,"column_end":20},"name":"ModuleKind","qualname":"::ast::module::ModuleKind","value":"pub enum ModuleKind<'a> { Text(Vec<ModuleField>), Binary(Vec<&'a [u8]>), }","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1720}],"decl_id":null,"docs":" The different kinds of ways to define a module.\n","sig":null,"attributes":[{"value":"/ The different kinds of ways to define a module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9369769,"byte_end":9369820,"line_start":50,"line_end":50,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371334,"byte_end":9371341,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Module>::resolve","value":"pub fn resolve(&mut Self) -> std::result::Result<Names, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Performs a name resolution pass on this [`Module`], resolving all\n symbolic names to indices.","sig":null,"attributes":[{"value":"/ Performs a name resolution pass on this [`Module`], resolving all","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370087,"byte_end":9370156,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ symbolic names to indices.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370161,"byte_end":9370191,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370196,"byte_end":9370199,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The WAT format contains a number of shorthands to make it easier to","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370204,"byte_end":9370275,"line_start":63,"line_end":63,"column_start":5,"column_end":76}},{"value":"/ write, such as inline exports, inline imports, inline type definitions,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370280,"byte_end":9370355,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ etc. Additionally it allows using symbolic names such as `$foo` instead","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370360,"byte_end":9370435,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of using indices. This module will postprocess an AST to remove all of","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370440,"byte_end":9370514,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ this syntactic sugar, preparing the AST for binary emission.  This is","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370519,"byte_end":9370592,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ where expansion and name resolution happens.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370597,"byte_end":9370645,"line_start":68,"line_end":68,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370650,"byte_end":9370653,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This function will mutate the AST of this [`Module`] and replace all","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370658,"byte_end":9370730,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ [`super::Index`] arguments with `Index::Num`. This will also expand inline","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370735,"byte_end":9370813,"line_start":71,"line_end":71,"column_start":5,"column_end":83}},{"value":"/ exports/imports listed on fields and handle various other shorthands of","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370818,"byte_end":9370893,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/ the text format.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370898,"byte_end":9370918,"line_start":73,"line_end":73,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370923,"byte_end":9370926,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ If successful the AST was modified to be ready for binary encoding. A","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370931,"byte_end":9371004,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ [`Names`] structure is also returned so if you'd like to do your own","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371009,"byte_end":9371081,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ name lookups on the result you can do so as well.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371086,"byte_end":9371139,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371144,"byte_end":9371147,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371152,"byte_end":9371164,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371169,"byte_end":9371172,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ If an error happens during resolution, such a name resolution error or","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371177,"byte_end":9371251,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ items are found in the wrong order, then an error is returned.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371256,"byte_end":9371322,"line_start":82,"line_end":82,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372522,"byte_end":9372528,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"encode","qualname":"<Module>::encode","value":"pub fn encode(&mut Self) -> std::result::Result<Vec<u8>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Encodes this [`Module`] to its binary form.","sig":null,"attributes":[{"value":"/ Encodes this [`Module`] to its binary form.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371452,"byte_end":9371499,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371504,"byte_end":9371507,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function will take the textual representation in [`Module`] and","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371512,"byte_end":9371584,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ perform all steps necessary to convert it to a binary WebAssembly","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371589,"byte_end":9371658,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ module, suitable for writing to a `*.wasm` file. This function may","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371663,"byte_end":9371733,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ internally modify the [`Module`], for example:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371738,"byte_end":9371788,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371793,"byte_end":9371796,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ * Name resolution is performed to ensure that `Index::Id` isn't present","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371801,"byte_end":9371876,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/   anywhere in the AST.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371881,"byte_end":9371907,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371912,"byte_end":9371915,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ * Inline shorthands such as imports/exports/types are all expanded to be","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9371920,"byte_end":9371996,"line_start":97,"line_end":97,"column_start":5,"column_end":81}},{"value":"/   dedicated fields of the module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372001,"byte_end":9372038,"line_start":98,"line_end":98,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372043,"byte_end":9372046,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ * Module fields may be shuffled around to preserve index ordering from","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372051,"byte_end":9372125,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"/   expansions.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372130,"byte_end":9372147,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372152,"byte_end":9372155,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ After all of this expansion has happened the module will be converted to","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372160,"byte_end":9372236,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ its binary form and returned as a `Vec<u8>`. This is then suitable to","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372241,"byte_end":9372314,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/ hand off to other wasm runtimes and such.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372319,"byte_end":9372364,"line_start":105,"line_end":105,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372369,"byte_end":9372372,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372377,"byte_end":9372389,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372394,"byte_end":9372397,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This function can return an error for name resolution errors and other","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372402,"byte_end":9372476,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ expansion-related errors.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9372481,"byte_end":9372510,"line_start":110,"line_end":110,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6226},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9373986,"byte_end":9373990,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"Type","qualname":"::ast::module::ModuleField::Type","value":"ModuleField::Type(ast::Type)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6229},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374011,"byte_end":9374017,"line_start":163,"line_end":163,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::module::ModuleField::Import","value":"ModuleField::Import(ast::Import)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6232},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374040,"byte_end":9374044,"line_start":164,"line_end":164,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::module::ModuleField::Func","value":"ModuleField::Func(ast::Func)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6235},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374065,"byte_end":9374070,"line_start":165,"line_end":165,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::module::ModuleField::Table","value":"ModuleField::Table(ast::Table)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6238},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374092,"byte_end":9374098,"line_start":166,"line_end":166,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::module::ModuleField::Memory","value":"ModuleField::Memory(ast::Memory)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6241},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374121,"byte_end":9374127,"line_start":167,"line_end":167,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::module::ModuleField::Global","value":"ModuleField::Global(ast::Global)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6244},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374150,"byte_end":9374156,"line_start":168,"line_end":168,"column_start":5,"column_end":11},"name":"Export","qualname":"::ast::module::ModuleField::Export","value":"ModuleField::Export(ast::Export)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6247},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374179,"byte_end":9374184,"line_start":169,"line_end":169,"column_start":5,"column_end":10},"name":"Start","qualname":"::ast::module::ModuleField::Start","value":"ModuleField::Start(ast::ItemRef)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6250},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374218,"byte_end":9374222,"line_start":170,"line_end":170,"column_start":5,"column_end":9},"name":"Elem","qualname":"::ast::module::ModuleField::Elem","value":"ModuleField::Elem(ast::Elem)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6253},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374243,"byte_end":9374247,"line_start":171,"line_end":171,"column_start":5,"column_end":9},"name":"Data","qualname":"::ast::module::ModuleField::Data","value":"ModuleField::Data(ast::Data)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6256},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374268,"byte_end":9374273,"line_start":172,"line_end":172,"column_start":5,"column_end":10},"name":"Event","qualname":"::ast::module::ModuleField::Event","value":"ModuleField::Event(ast::Event)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6259},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374295,"byte_end":9374301,"line_start":173,"line_end":173,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ast::module::ModuleField::Custom","value":"ModuleField::Custom(ast::Custom)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6262},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374324,"byte_end":9374332,"line_start":174,"line_end":174,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::module::ModuleField::Instance","value":"ModuleField::Instance(ast::Instance)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6265},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374357,"byte_end":9374369,"line_start":175,"line_end":175,"column_start":5,"column_end":17},"name":"NestedModule","qualname":"::ast::module::ModuleField::NestedModule","value":"ModuleField::NestedModule(ast::NestedModule)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6268},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374398,"byte_end":9374403,"line_start":176,"line_end":176,"column_start":5,"column_end":10},"name":"Alias","qualname":"::ast::module::ModuleField::Alias","value":"ModuleField::Alias(ast::Alias)","parent":{"krate":0,"index":6224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6224},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9373964,"byte_end":9373975,"line_start":161,"line_end":161,"column_start":10,"column_end":21},"name":"ModuleField","qualname":"::ast::module::ModuleField","value":"pub enum ModuleField<'a> {\n    Type(ast::Type),\n    Import(ast::Import),\n    Func(ast::Func),\n    Table(ast::Table),\n    Memory(ast::Memory),\n    Global(ast::Global),\n    Export(ast::Export),\n    Start(ast::ItemRef),\n    Elem(ast::Elem),\n    Data(ast::Data),\n    Event(ast::Event),\n    Custom(ast::Custom),\n    Instance(ast::Instance),\n    NestedModule(ast::NestedModule),\n    Alias(ast::Alias),\n}","parent":null,"children":[{"krate":0,"index":6226},{"krate":0,"index":6229},{"krate":0,"index":6232},{"krate":0,"index":6235},{"krate":0,"index":6238},{"krate":0,"index":6241},{"krate":0,"index":6244},{"krate":0,"index":6247},{"krate":0,"index":6250},{"krate":0,"index":6253},{"krate":0,"index":6256},{"krate":0,"index":6259},{"krate":0,"index":6262},{"krate":0,"index":6265},{"krate":0,"index":6268}],"decl_id":null,"docs":" A listing of all possible fields that can make up a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ A listing of all possible fields that can make up a WebAssembly module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9373839,"byte_end":9373914,"line_start":158,"line_end":158,"column_start":1,"column_end":76}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9373915,"byte_end":9373937,"line_start":159,"line_end":159,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6274},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9376784,"byte_end":9376796,"line_start":6,"line_end":6,"column_start":12,"column_end":24},"name":"NestedModule","qualname":"::ast::nested_module::NestedModule","value":"NestedModule { span, id, name, exports, kind }","parent":null,"children":[{"krate":0,"index":6276},{"krate":0,"index":6277},{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6280}],"decl_id":null,"docs":" A nested WebAssembly nested module to be created as part of a module.\n","sig":null,"attributes":[{"value":"/ A nested WebAssembly nested module to be created as part of a module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9376682,"byte_end":9376755,"line_start":4,"line_end":4,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":6276},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9376859,"byte_end":9376863,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::nested_module::NestedModule::span","value":"ast::token::Span","parent":{"krate":0,"index":6274},"children":[],"decl_id":null,"docs":" Where this `nested module` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `nested module` was defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9376807,"byte_end":9376850,"line_start":7,"line_end":7,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":6277},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9376989,"byte_end":9376991,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::nested_module::NestedModule::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6274},"children":[],"decl_id":null,"docs":" An identifier that this nested module is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this nested module is resolved with (optionally) for name","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9376880,"byte_end":9376960,"line_start":9,"line_end":9,"column_start":5,"column_end":85}},{"value":"/ resolution.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9376965,"byte_end":9376980,"line_start":10,"line_end":10,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6278},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9377100,"byte_end":9377104,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::nested_module::NestedModule::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":6274},"children":[],"decl_id":null,"docs":" An optional name for this module stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this module stored in the custom `name` section.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9377018,"byte_end":9377091,"line_start":12,"line_end":12,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":6279},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9377264,"byte_end":9377271,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::nested_module::NestedModule::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6274},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9377143,"byte_end":9377210,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9377215,"byte_end":9377255,"line_start":15,"line_end":15,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6280},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9377389,"byte_end":9377393,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::nested_module::NestedModule::kind","value":"ast::nested_module::NestedModuleKind<'a>","parent":{"krate":0,"index":6274},"children":[],"decl_id":null,"docs":" What kind of nested module this is, be it an inline-defined or imported one.\n","sig":null,"attributes":[{"value":"/ What kind of nested module this is, be it an inline-defined or imported one.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9377300,"byte_end":9377380,"line_start":17,"line_end":17,"column_start":5,"column_end":85}}]},{"kind":"StructVariant","id":{"krate":0,"index":6286},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9377611,"byte_end":9377617,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::nested_module::NestedModuleKind::Import","value":"NestedModuleKind::Import { import, ty }","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" An nested module which is actually defined as an import, such as:\n","sig":null,"attributes":[{"value":"/ An nested module which is actually defined as an import, such as:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9377537,"byte_end":9377606,"line_start":24,"line_end":24,"column_start":5,"column_end":74}}]},{"kind":"StructVariant","id":{"krate":0,"index":6289},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9377894,"byte_end":9377900,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::nested_module::NestedModuleKind::Inline","value":"NestedModuleKind::Inline { fields }","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Nested modules whose instantiation is defined inline.\n","sig":null,"attributes":[{"value":"/ Nested modules whose instantiation is defined inline.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9377832,"byte_end":9377889,"line_start":32,"line_end":32,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":6284},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9377510,"byte_end":9377526,"line_start":23,"line_end":23,"column_start":10,"column_end":26},"name":"NestedModuleKind","qualname":"::ast::nested_module::NestedModuleKind","value":"pub enum NestedModuleKind<'a> {\n    Import {\n        import: ast::InlineImport,\n        ty: ast::TypeUse,\n    },\n    Inline {\n        fields: Vec<ast::ModuleField>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6286},{"krate":0,"index":6289}],"decl_id":null,"docs":" Possible ways to define a nested module in the text format.\n","sig":null,"attributes":[{"value":"/ Possible ways to define a nested module in the text format.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9377420,"byte_end":9377483,"line_start":21,"line_end":21,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6294},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9380788,"byte_end":9380793,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Table","qualname":"::ast::table::Table","value":"Table { span, id, exports, kind }","parent":null,"children":[{"krate":0,"index":6296},{"krate":0,"index":6297},{"krate":0,"index":6298},{"krate":0,"index":6299}],"decl_id":null,"docs":" A WebAssembly `table` directive in a module.\n","sig":null,"attributes":[{"value":"/ A WebAssembly `table` directive in a module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9380711,"byte_end":9380759,"line_start":4,"line_end":4,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6296},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9380846,"byte_end":9380850,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::table::Table::span","value":"ast::token::Span","parent":{"krate":0,"index":6294},"children":[],"decl_id":null,"docs":" Where this table was defined.\n","sig":null,"attributes":[{"value":"/ Where this table was defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9380804,"byte_end":9380837,"line_start":7,"line_end":7,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6297},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9380923,"byte_end":9380925,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::table::Table::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6294},"children":[],"decl_id":null,"docs":" An optional name to refer to this table by.\n","sig":null,"attributes":[{"value":"/ An optional name to refer to this table by.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9380867,"byte_end":9380914,"line_start":9,"line_end":9,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6298},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381073,"byte_end":9381080,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::table::Table::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":6294},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9380952,"byte_end":9381019,"line_start":11,"line_end":11,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381024,"byte_end":9381064,"line_start":12,"line_end":12,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6299},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381172,"byte_end":9381176,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::table::Table::kind","value":"ast::table::TableKind<'a>","parent":{"krate":0,"index":6294},"children":[],"decl_id":null,"docs":" How this table is textually defined in the module.\n","sig":null,"attributes":[{"value":"/ How this table is textually defined in the module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381109,"byte_end":9381163,"line_start":14,"line_end":14,"column_start":5,"column_end":59}}]},{"kind":"StructVariant","id":{"krate":0,"index":6305},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381378,"byte_end":9381384,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::table::TableKind::Import","value":"TableKind::Import { import, ty }","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" This table is actually an inlined import definition.\n","sig":null,"attributes":[{"value":"/ This table is actually an inlined import definition.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381290,"byte_end":9381346,"line_start":21,"line_end":21,"column_start":5,"column_end":61}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381351,"byte_end":9381373,"line_start":22,"line_end":22,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6308},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381548,"byte_end":9381554,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ast::table::TableKind::Normal","value":"TableKind::Normal(ast::TableType)","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" A typical memory definition which simply says the limits of the table\n","sig":null,"attributes":[{"value":"/ A typical memory definition which simply says the limits of the table","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381470,"byte_end":9381543,"line_start":28,"line_end":28,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":6311},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381657,"byte_end":9381663,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::table::TableKind::Inline","value":"TableKind::Inline { elem, payload }","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" The elem segments of this table, starting from 0, explicitly listed\n","sig":null,"attributes":[{"value":"/ The elem segments of this table, starting from 0, explicitly listed","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381581,"byte_end":9381652,"line_start":31,"line_end":31,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":6303},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381270,"byte_end":9381279,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"TableKind","qualname":"::ast::table::TableKind","value":"pub enum TableKind<'a> {\n    Import {\n        import: ast::InlineImport,\n        ty: ast::TableType,\n    },\n    Normal(ast::TableType),\n    Inline {\n        elem: ast::RefType,\n        payload: ElemPayload,\n    },\n}","parent":null,"children":[{"krate":0,"index":6305},{"krate":0,"index":6308},{"krate":0,"index":6311}],"decl_id":null,"docs":" Different ways to textually define a table.\n","sig":null,"attributes":[{"value":"/ Different ways to textually define a table.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381196,"byte_end":9381243,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6317},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383285,"byte_end":9383289,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"Elem","qualname":"::ast::table::Elem","value":"Elem { span, id, kind, payload }","parent":null,"children":[{"krate":0,"index":6319},{"krate":0,"index":6320},{"krate":0,"index":6321},{"krate":0,"index":6322}],"decl_id":null,"docs":" An `elem` segment in a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ An `elem` segment in a WebAssembly module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383210,"byte_end":9383256,"line_start":84,"line_end":84,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6319},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383343,"byte_end":9383347,"line_start":88,"line_end":88,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::table::Elem::span","value":"ast::token::Span","parent":{"krate":0,"index":6317},"children":[],"decl_id":null,"docs":" Where this `elem` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `elem` was defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383300,"byte_end":9383334,"line_start":87,"line_end":87,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6320},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383428,"byte_end":9383430,"line_start":90,"line_end":90,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::table::Elem::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6317},"children":[],"decl_id":null,"docs":" An optional name by which to refer to this segment.\n","sig":null,"attributes":[{"value":"/ An optional name by which to refer to this segment.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383364,"byte_end":9383419,"line_start":89,"line_end":89,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6321},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383517,"byte_end":9383521,"line_start":92,"line_end":92,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::table::Elem::kind","value":"ast::table::ElemKind<'a>","parent":{"krate":0,"index":6317},"children":[],"decl_id":null,"docs":" The way this segment was defined in the module.\n","sig":null,"attributes":[{"value":"/ The way this segment was defined in the module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383457,"byte_end":9383508,"line_start":91,"line_end":91,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":6322},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383621,"byte_end":9383628,"line_start":94,"line_end":94,"column_start":9,"column_end":16},"name":"payload","qualname":"::ast::table::Elem::payload","value":"ast::table::ElemPayload<'a>","parent":{"krate":0,"index":6317},"children":[],"decl_id":null,"docs":" The payload of this element segment, typically a list of functions.\n","sig":null,"attributes":[{"value":"/ The payload of this element segment, typically a list of functions.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383541,"byte_end":9383612,"line_start":93,"line_end":93,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6328},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383879,"byte_end":9383886,"line_start":102,"line_end":102,"column_start":5,"column_end":12},"name":"Passive","qualname":"::ast::table::ElemKind::Passive","value":"ElemKind::Passive","parent":{"krate":0,"index":6326},"children":[],"decl_id":null,"docs":" A passive segment that isn't associated with a table and can be used in\n various bulk-memory instructions.\n","sig":null,"attributes":[{"value":"/ A passive segment that isn't associated with a table and can be used in","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383757,"byte_end":9383832,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ various bulk-memory instructions.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383837,"byte_end":9383874,"line_start":101,"line_end":101,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6330},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383988,"byte_end":9383996,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"Declared","qualname":"::ast::table::ElemKind::Declared","value":"ElemKind::Declared","parent":{"krate":0,"index":6326},"children":[],"decl_id":null,"docs":" A declared element segment that is purely used to declare function\n references.\n","sig":null,"attributes":[{"value":"/ A declared element segment that is purely used to declare function","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383893,"byte_end":9383963,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/ references.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383968,"byte_end":9383983,"line_start":105,"line_end":105,"column_start":5,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":6332},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9384054,"byte_end":9384060,"line_start":109,"line_end":109,"column_start":5,"column_end":11},"name":"Active","qualname":"::ast::table::ElemKind::Active","value":"ElemKind::Active { table, offset }","parent":{"krate":0,"index":6326},"children":[],"decl_id":null,"docs":" An active segment associated with a table.\n","sig":null,"attributes":[{"value":"/ An active segment associated with a table.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9384003,"byte_end":9384049,"line_start":108,"line_end":108,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":6326},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383738,"byte_end":9383746,"line_start":99,"line_end":99,"column_start":10,"column_end":18},"name":"ElemKind","qualname":"::ast::table::ElemKind","value":"pub enum ElemKind<'a> {\n    Passive,\n    Declared,\n    Active {\n        table: ast::ItemRef,\n        offset: ast::Expression,\n    },\n}","parent":null,"children":[{"krate":0,"index":6328},{"krate":0,"index":6330},{"krate":0,"index":6332}],"decl_id":null,"docs":" Different ways to define an element segment in an mdoule.\n","sig":null,"attributes":[{"value":"/ Different ways to define an element segment in an mdoule.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9383650,"byte_end":9383711,"line_start":97,"line_end":97,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6340},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9384465,"byte_end":9384472,"line_start":121,"line_end":121,"column_start":5,"column_end":12},"name":"Indices","qualname":"::ast::table::ElemPayload::Indices","value":"ElemPayload::Indices(Vec<ast::ItemRef>)","parent":{"krate":0,"index":6338},"children":[],"decl_id":null,"docs":" This element segment has a contiguous list of function indices\n","sig":null,"attributes":[{"value":"/ This element segment has a contiguous list of function indices","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9384394,"byte_end":9384460,"line_start":120,"line_end":120,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":6343},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9384650,"byte_end":9384655,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Exprs","qualname":"::ast::table::ElemPayload::Exprs","value":"ElemPayload::Exprs { ty, exprs }","parent":{"krate":0,"index":6338},"children":[],"decl_id":null,"docs":" This element segment has a list of optional function indices,\n represented as expressions using `ref.func` and `ref.null`.\n","sig":null,"attributes":[{"value":"/ This element segment has a list of optional function indices,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9384512,"byte_end":9384577,"line_start":123,"line_end":123,"column_start":5,"column_end":70}},{"value":"/ represented as expressions using `ref.func` and `ref.null`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9384582,"byte_end":9384645,"line_start":124,"line_end":124,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":6338},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9384372,"byte_end":9384383,"line_start":119,"line_end":119,"column_start":10,"column_end":21},"name":"ElemPayload","qualname":"::ast::table::ElemPayload","value":"pub enum ElemPayload<'a> {\n    Indices(Vec<ast::ItemRef>),\n    Exprs {\n        ty: ast::RefType,\n        exprs: Vec<Option<ast::ItemRef>>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6340},{"krate":0,"index":6343}],"decl_id":null,"docs":" Different ways to define the element segment payload in a module.\n","sig":null,"attributes":[{"value":"/ Different ways to define the element segment payload in a module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9384269,"byte_end":9384338,"line_start":117,"line_end":117,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6354},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9388435,"byte_end":9388438,"line_start":9,"line_end":9,"column_start":5,"column_end":8},"name":"I32","qualname":"::ast::types::ValType::I32","value":"ValType::I32","parent":{"krate":0,"index":6352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6356},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9388444,"byte_end":9388447,"line_start":10,"line_end":10,"column_start":5,"column_end":8},"name":"I64","qualname":"::ast::types::ValType::I64","value":"ValType::I64","parent":{"krate":0,"index":6352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6358},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9388453,"byte_end":9388456,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"name":"F32","qualname":"::ast::types::ValType::F32","value":"ValType::F32","parent":{"krate":0,"index":6352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6360},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9388462,"byte_end":9388465,"line_start":12,"line_end":12,"column_start":5,"column_end":8},"name":"F64","qualname":"::ast::types::ValType::F64","value":"ValType::F64","parent":{"krate":0,"index":6352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6362},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9388471,"byte_end":9388475,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"V128","qualname":"::ast::types::ValType::V128","value":"ValType::V128","parent":{"krate":0,"index":6352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6364},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9388481,"byte_end":9388484,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"Ref","qualname":"::ast::types::ValType::Ref","value":"ValType::Ref(RefType)","parent":{"krate":0,"index":6352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6367},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9388503,"byte_end":9388506,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Rtt","qualname":"::ast::types::ValType::Rtt","value":"ValType::Rtt(Option<u32>, ast::Index)","parent":{"krate":0,"index":6352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6352},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9388417,"byte_end":9388424,"line_start":8,"line_end":8,"column_start":10,"column_end":17},"name":"ValType","qualname":"::ast::types::ValType","value":"pub enum ValType<'a> {\n    I32,\n    I64,\n    F32,\n    F64,\n    V128,\n    Ref(RefType),\n    Rtt(Option<u32>, ast::Index),\n}","parent":null,"children":[{"krate":0,"index":6354},{"krate":0,"index":6356},{"krate":0,"index":6358},{"krate":0,"index":6360},{"krate":0,"index":6362},{"krate":0,"index":6364},{"krate":0,"index":6367}],"decl_id":null,"docs":" The value types for a wasm module.\n","sig":null,"attributes":[{"value":"/ The value types for a wasm module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9388295,"byte_end":9388333,"line_start":5,"line_end":5,"column_start":1,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9388334,"byte_end":9388356,"line_start":6,"line_end":6,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6396},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390385,"byte_end":9390389,"line_start":75,"line_end":75,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::types::HeapType::Func","value":"HeapType::Func","parent":{"krate":0,"index":6394},"children":[],"decl_id":null,"docs":" An untyped function reference: funcref. This is part of the reference\n types proposal.\n","sig":null,"attributes":[{"value":"/ An untyped function reference: funcref. This is part of the reference","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390283,"byte_end":9390356,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ types proposal.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390361,"byte_end":9390380,"line_start":74,"line_end":74,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6398},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390499,"byte_end":9390505,"line_start":78,"line_end":78,"column_start":5,"column_end":11},"name":"Extern","qualname":"::ast::types::HeapType::Extern","value":"HeapType::Extern","parent":{"krate":0,"index":6394},"children":[],"decl_id":null,"docs":" A reference to any host value: externref. This is part of the reference\n types proposal.\n","sig":null,"attributes":[{"value":"/ A reference to any host value: externref. This is part of the reference","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390395,"byte_end":9390470,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ types proposal.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390475,"byte_end":9390494,"line_start":77,"line_end":77,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6400},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390604,"byte_end":9390607,"line_start":81,"line_end":81,"column_start":5,"column_end":8},"name":"Any","qualname":"::ast::types::HeapType::Any","value":"HeapType::Any","parent":{"krate":0,"index":6394},"children":[],"decl_id":null,"docs":" A reference to any reference value: anyref. This is part of the GC\n proposal.\n","sig":null,"attributes":[{"value":"/ A reference to any reference value: anyref. This is part of the GC","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390511,"byte_end":9390581,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ proposal.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390586,"byte_end":9390599,"line_start":80,"line_end":80,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6402},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390724,"byte_end":9390726,"line_start":84,"line_end":84,"column_start":5,"column_end":7},"name":"Eq","qualname":"::ast::types::HeapType::Eq","value":"HeapType::Eq","parent":{"krate":0,"index":6394},"children":[],"decl_id":null,"docs":" A reference that has an identity that can be compared: eqref. This is\n part of the GC proposal.\n","sig":null,"attributes":[{"value":"/ A reference that has an identity that can be compared: eqref. This is","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390613,"byte_end":9390686,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ part of the GC proposal.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390691,"byte_end":9390719,"line_start":83,"line_end":83,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6404},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390801,"byte_end":9390805,"line_start":86,"line_end":86,"column_start":5,"column_end":9},"name":"Data","qualname":"::ast::types::HeapType::Data","value":"HeapType::Data","parent":{"krate":0,"index":6394},"children":[],"decl_id":null,"docs":" A reference to a GC object. This is part of the GC proposal.\n","sig":null,"attributes":[{"value":"/ A reference to a GC object. This is part of the GC proposal.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390732,"byte_end":9390796,"line_start":85,"line_end":85,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6406},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390966,"byte_end":9390969,"line_start":89,"line_end":89,"column_start":5,"column_end":8},"name":"I31","qualname":"::ast::types::HeapType::I31","value":"HeapType::I31","parent":{"krate":0,"index":6394},"children":[],"decl_id":null,"docs":" An unboxed 31-bit integer: i31ref. This may be going away if there is no common\n supertype of all reference types. Part of the GC proposal.\n","sig":null,"attributes":[{"value":"/ An unboxed 31-bit integer: i31ref. This may be going away if there is no common","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390811,"byte_end":9390894,"line_start":87,"line_end":87,"column_start":5,"column_end":88}},{"value":"/ supertype of all reference types. Part of the GC proposal.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390899,"byte_end":9390961,"line_start":88,"line_end":88,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6408},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9391076,"byte_end":9391081,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"Index","qualname":"::ast::types::HeapType::Index","value":"HeapType::Index(ast::Index)","parent":{"krate":0,"index":6394},"children":[],"decl_id":null,"docs":" A reference to a function, struct, or array: ref T. This is part of the\n GC proposal.\n","sig":null,"attributes":[{"value":"/ A reference to a function, struct, or array: ref T. This is part of the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390975,"byte_end":9391050,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ GC proposal.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9391055,"byte_end":9391071,"line_start":91,"line_end":91,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":6394},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390264,"byte_end":9390272,"line_start":72,"line_end":72,"column_start":10,"column_end":18},"name":"HeapType","qualname":"::ast::types::HeapType","value":"pub enum HeapType<'a> { Func, Extern, Any, Eq, Data, I31, Index(ast::Index), }","parent":null,"children":[{"krate":0,"index":6396},{"krate":0,"index":6398},{"krate":0,"index":6400},{"krate":0,"index":6402},{"krate":0,"index":6404},{"krate":0,"index":6406},{"krate":0,"index":6408}],"decl_id":null,"docs":" A heap type for a reference type\n","sig":null,"attributes":[{"value":"/ A heap type for a reference type","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390144,"byte_end":9390180,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9390181,"byte_end":9390203,"line_start":70,"line_end":70,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6434},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9392621,"byte_end":9392628,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"RefType","qualname":"::ast::types::RefType","value":"RefType { nullable, heap }","parent":null,"children":[{"krate":0,"index":6436},{"krate":0,"index":6437}],"decl_id":null,"docs":" A reference type in a wasm module.\n","sig":null,"attributes":[{"value":"/ A reference type in a wasm module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9392497,"byte_end":9392535,"line_start":139,"line_end":139,"column_start":1,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9392536,"byte_end":9392558,"line_start":140,"line_end":140,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":6436},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9392643,"byte_end":9392651,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"nullable","qualname":"::ast::types::RefType::nullable","value":"bool","parent":{"krate":0,"index":6434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6437},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9392667,"byte_end":9392671,"line_start":144,"line_end":144,"column_start":9,"column_end":13},"name":"heap","qualname":"::ast::types::RefType::heap","value":"ast::types::HeapType<'a>","parent":{"krate":0,"index":6434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9392786,"byte_end":9392790,"line_start":149,"line_end":149,"column_start":12,"column_end":16},"name":"func","qualname":"<RefType>::func","value":"pub fn func() -> Self","parent":null,"children":[],"decl_id":null,"docs":" A `funcref` as an abbreviation for `(ref null func)`.\n","sig":null,"attributes":[{"value":"/ A `funcref` as an abbreviation for `(ref null func)`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9392717,"byte_end":9392774,"line_start":148,"line_end":148,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9392978,"byte_end":9392986,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"extern","qualname":"<RefType>::extern","value":"pub fn r#extern() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `externref` as an abbreviation for `(ref null extern)`.\n","sig":null,"attributes":[{"value":"/ An `externref` as an abbreviation for `(ref null extern)`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9392904,"byte_end":9392966,"line_start":156,"line_end":156,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9393170,"byte_end":9393173,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"any","qualname":"<RefType>::any","value":"pub fn any() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `anyref` as an abbreviation for `(ref null any)`.\n","sig":null,"attributes":[{"value":"/ An `anyref` as an abbreviation for `(ref null any)`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9393102,"byte_end":9393158,"line_start":164,"line_end":164,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9393352,"byte_end":9393354,"line_start":173,"line_end":173,"column_start":12,"column_end":14},"name":"eq","qualname":"<RefType>::eq","value":"pub fn eq() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `eqref` as an abbreviation for `(ref null eq)`.\n","sig":null,"attributes":[{"value":"/ An `eqref` as an abbreviation for `(ref null eq)`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9393286,"byte_end":9393340,"line_start":172,"line_end":172,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9393536,"byte_end":9393540,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"data","qualname":"<RefType>::data","value":"pub fn data() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `dataref` as an abbreviation for `(ref null data)`.\n","sig":null,"attributes":[{"value":"/ An `dataref` as an abbreviation for `(ref null data)`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9393466,"byte_end":9393524,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1858},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9393722,"byte_end":9393725,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"i31","qualname":"<RefType>::i31","value":"pub fn i31() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `i31ref` as an abbreviation for `(ref null i31)`.\n","sig":null,"attributes":[{"value":"/ An `i31ref` as an abbreviation for `(ref null i31)`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9393654,"byte_end":9393710,"line_start":188,"line_end":188,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6463},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396187,"byte_end":9396189,"line_start":267,"line_end":267,"column_start":5,"column_end":7},"name":"I8","qualname":"::ast::types::StorageType::I8","value":"StorageType::I8","parent":{"krate":0,"index":6461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6465},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396195,"byte_end":9396198,"line_start":268,"line_end":268,"column_start":5,"column_end":8},"name":"I16","qualname":"::ast::types::StorageType::I16","value":"StorageType::I16","parent":{"krate":0,"index":6461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6467},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396204,"byte_end":9396207,"line_start":269,"line_end":269,"column_start":5,"column_end":8},"name":"Val","qualname":"::ast::types::StorageType::Val","value":"StorageType::Val(ValType)","parent":{"krate":0,"index":6461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6461},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396165,"byte_end":9396176,"line_start":266,"line_end":266,"column_start":10,"column_end":21},"name":"StorageType","qualname":"::ast::types::StorageType","value":"pub enum StorageType<'a> { I8, I16, Val(ValType), }","parent":null,"children":[{"krate":0,"index":6463},{"krate":0,"index":6465},{"krate":0,"index":6467}],"decl_id":null,"docs":" The types of values that may be used in a struct or array.\n","sig":null,"attributes":[{"value":"/ The types of values that may be used in a struct or array.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396019,"byte_end":9396081,"line_start":263,"line_end":263,"column_start":1,"column_end":63}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396082,"byte_end":9396104,"line_start":264,"line_end":264,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6493},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396830,"byte_end":9396840,"line_start":291,"line_end":291,"column_start":12,"column_end":22},"name":"GlobalType","qualname":"::ast::types::GlobalType","value":"GlobalType { ty, mutable }","parent":null,"children":[{"krate":0,"index":6495},{"krate":0,"index":6496}],"decl_id":null,"docs":" Type for a `global` in a wasm module\n","sig":null,"attributes":[{"value":"/ Type for a `global` in a wasm module","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396727,"byte_end":9396767,"line_start":289,"line_end":289,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":6495},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396897,"byte_end":9396899,"line_start":293,"line_end":293,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::types::GlobalType::ty","value":"ast::types::ValType<'a>","parent":{"krate":0,"index":6493},"children":[],"decl_id":null,"docs":" The element type of this `global`\n","sig":null,"attributes":[{"value":"/ The element type of this `global`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396851,"byte_end":9396888,"line_start":292,"line_end":292,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6496},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396975,"byte_end":9396982,"line_start":295,"line_end":295,"column_start":9,"column_end":16},"name":"mutable","qualname":"::ast::types::GlobalType::mutable","value":"bool","parent":{"krate":0,"index":6493},"children":[],"decl_id":null,"docs":" Whether or not the global is mutable or not.\n","sig":null,"attributes":[{"value":"/ Whether or not the global is mutable or not.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396918,"byte_end":9396966,"line_start":294,"line_end":294,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":6520},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9397595,"byte_end":9397601,"line_start":319,"line_end":319,"column_start":12,"column_end":18},"name":"Limits","qualname":"::ast::types::Limits","value":"Limits { min, max }","parent":null,"children":[{"krate":0,"index":6521},{"krate":0,"index":6522}],"decl_id":null,"docs":" Min/max limits used for tables/memories.\n","sig":null,"attributes":[{"value":"/ Min/max limits used for tables/memories.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9397488,"byte_end":9397532,"line_start":317,"line_end":317,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6521},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9397663,"byte_end":9397666,"line_start":321,"line_end":321,"column_start":9,"column_end":12},"name":"min","qualname":"::ast::types::Limits::min","value":"u32","parent":{"krate":0,"index":6520},"children":[],"decl_id":null,"docs":" The minimum number of units for this type.\n","sig":null,"attributes":[{"value":"/ The minimum number of units for this type.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9397608,"byte_end":9397654,"line_start":320,"line_end":320,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6522},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9397740,"byte_end":9397743,"line_start":323,"line_end":323,"column_start":9,"column_end":12},"name":"max","qualname":"::ast::types::Limits::max","value":"std::option::Option<u32>","parent":{"krate":0,"index":6520},"children":[],"decl_id":null,"docs":" An optional maximum number of units for this type.\n","sig":null,"attributes":[{"value":"/ An optional maximum number of units for this type.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9397677,"byte_end":9397731,"line_start":322,"line_end":322,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6538},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398149,"byte_end":9398157,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"Limits64","qualname":"::ast::types::Limits64","value":"Limits64 { min, max }","parent":null,"children":[{"krate":0,"index":6539},{"krate":0,"index":6540}],"decl_id":null,"docs":" Min/max limits used for 64-bit memories\n","sig":null,"attributes":[{"value":"/ Min/max limits used for 64-bit memories","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398043,"byte_end":9398086,"line_start":338,"line_end":338,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6539},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398219,"byte_end":9398222,"line_start":342,"line_end":342,"column_start":9,"column_end":12},"name":"min","qualname":"::ast::types::Limits64::min","value":"u64","parent":{"krate":0,"index":6538},"children":[],"decl_id":null,"docs":" The minimum number of units for this type.\n","sig":null,"attributes":[{"value":"/ The minimum number of units for this type.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398164,"byte_end":9398210,"line_start":341,"line_end":341,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6540},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398296,"byte_end":9398299,"line_start":344,"line_end":344,"column_start":9,"column_end":12},"name":"max","qualname":"::ast::types::Limits64::max","value":"std::option::Option<u64>","parent":{"krate":0,"index":6538},"children":[],"decl_id":null,"docs":" An optional maximum number of units for this type.\n","sig":null,"attributes":[{"value":"/ An optional maximum number of units for this type.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398233,"byte_end":9398287,"line_start":343,"line_end":343,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6556},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398712,"byte_end":9398721,"line_start":361,"line_end":361,"column_start":12,"column_end":21},"name":"TableType","qualname":"::ast::types::TableType","value":"TableType { limits, elem }","parent":null,"children":[{"krate":0,"index":6558},{"krate":0,"index":6559}],"decl_id":null,"docs":" Configuration for a table of a wasm mdoule\n","sig":null,"attributes":[{"value":"/ Configuration for a table of a wasm mdoule","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398603,"byte_end":9398649,"line_start":359,"line_end":359,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6558},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398786,"byte_end":9398792,"line_start":363,"line_end":363,"column_start":9,"column_end":15},"name":"limits","qualname":"::ast::types::TableType::limits","value":"ast::types::Limits","parent":{"krate":0,"index":6556},"children":[],"decl_id":null,"docs":" Limits on the element sizes of this table\n","sig":null,"attributes":[{"value":"/ Limits on the element sizes of this table","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398732,"byte_end":9398777,"line_start":362,"line_end":362,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6559},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398859,"byte_end":9398863,"line_start":365,"line_end":365,"column_start":9,"column_end":13},"name":"elem","qualname":"::ast::types::TableType::elem","value":"ast::types::RefType<'a>","parent":{"krate":0,"index":6556},"children":[],"decl_id":null,"docs":" The type of element stored in this table\n","sig":null,"attributes":[{"value":"/ The type of element stored in this table","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398806,"byte_end":9398850,"line_start":364,"line_end":364,"column_start":5,"column_end":49}}]},{"kind":"StructVariant","id":{"krate":0,"index":6584},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9399235,"byte_end":9399238,"line_start":381,"line_end":381,"column_start":5,"column_end":8},"name":"B32","qualname":"::ast::types::MemoryType::B32","value":"MemoryType::B32 { limits, shared }","parent":{"krate":0,"index":6583},"children":[],"decl_id":null,"docs":" A 32-bit memory\n","sig":null,"attributes":[{"value":"/ A 32-bit memory","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9399211,"byte_end":9399230,"line_start":380,"line_end":380,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":6587},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9399439,"byte_end":9399442,"line_start":388,"line_end":388,"column_start":5,"column_end":8},"name":"B64","qualname":"::ast::types::MemoryType::B64","value":"MemoryType::B64 { limits, shared }","parent":{"krate":0,"index":6583},"children":[],"decl_id":null,"docs":" A 64-bit memory\n","sig":null,"attributes":[{"value":"/ A 64-bit memory","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9399415,"byte_end":9399434,"line_start":387,"line_end":387,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":6583},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9399194,"byte_end":9399204,"line_start":379,"line_end":379,"column_start":10,"column_end":20},"name":"MemoryType","qualname":"::ast::types::MemoryType","value":"pub enum MemoryType {\n    B32 {\n        limits: Limits,\n        shared: bool,\n    },\n    B64 {\n        limits: Limits64,\n        shared: bool,\n    },\n}","parent":null,"children":[{"krate":0,"index":6584},{"krate":0,"index":6587}],"decl_id":null,"docs":" Configuration for a memory of a wasm module\n","sig":null,"attributes":[{"value":"/ Configuration for a memory of a wasm module","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9399086,"byte_end":9399133,"line_start":377,"line_end":377,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6605},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9400296,"byte_end":9400308,"line_start":414,"line_end":414,"column_start":12,"column_end":24},"name":"FunctionType","qualname":"::ast::types::FunctionType","value":"FunctionType { params, results }","parent":null,"children":[{"krate":0,"index":6607},{"krate":0,"index":6608}],"decl_id":null,"docs":" A function type with parameters and results.\n","sig":null,"attributes":[{"value":"/ A function type with parameters and results.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9400203,"byte_end":9400251,"line_start":412,"line_end":412,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6607},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9400468,"byte_end":9400474,"line_start":417,"line_end":417,"column_start":9,"column_end":15},"name":"params","qualname":"::ast::types::FunctionType::params","value":"std::boxed::Box<[(std::option::Option<ast::token::Id<'a>>, std::option::Option<ast::token::NameAnnotation<'a>>, ast::types::ValType<'a>)]>","parent":{"krate":0,"index":6605},"children":[],"decl_id":null,"docs":" The parameters of a function, optionally each having an identifier for\n name resolution and a name for the custom `name` section.\n","sig":null,"attributes":[{"value":"/ The parameters of a function, optionally each having an identifier for","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9400319,"byte_end":9400393,"line_start":415,"line_end":415,"column_start":5,"column_end":79}},{"value":"/ name resolution and a name for the custom `name` section.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9400398,"byte_end":9400459,"line_start":416,"line_end":416,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":6608},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9400663,"byte_end":9400670,"line_start":425,"line_end":425,"column_start":9,"column_end":16},"name":"results","qualname":"::ast::types::FunctionType::results","value":"std::boxed::Box<[ast::types::ValType<'a>]>","parent":{"krate":0,"index":6605},"children":[],"decl_id":null,"docs":" The results types of a function.\n","sig":null,"attributes":[{"value":"/ The results types of a function.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9400618,"byte_end":9400654,"line_start":424,"line_end":424,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6618},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9403264,"byte_end":9403283,"line_start":504,"line_end":504,"column_start":12,"column_end":31},"name":"FunctionTypeNoNames","qualname":"::ast::types::FunctionTypeNoNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" A function type with parameters and results.\n","sig":null,"attributes":[{"value":"/ A function type with parameters and results.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9403171,"byte_end":9403219,"line_start":502,"line_end":502,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6621},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9403288,"byte_end":9403308,"line_start":504,"line_end":504,"column_start":36,"column_end":56},"name":"0","qualname":"::ast::types::FunctionTypeNoNames::0","value":"ast::types::FunctionType<'a>","parent":{"krate":0,"index":6618},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6631},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9404034,"byte_end":9404044,"line_start":535,"line_end":535,"column_start":12,"column_end":22},"name":"StructType","qualname":"::ast::types::StructType","value":"StructType { fields }","parent":null,"children":[{"krate":0,"index":6633}],"decl_id":null,"docs":" A struct type with fields.\n","sig":null,"attributes":[{"value":"/ A struct type with fields.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9403968,"byte_end":9403998,"line_start":533,"line_end":533,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6633},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9404092,"byte_end":9404098,"line_start":537,"line_end":537,"column_start":9,"column_end":15},"name":"fields","qualname":"::ast::types::StructType::fields","value":"std::vec::Vec<ast::types::StructField<'a>>","parent":{"krate":0,"index":6631},"children":[],"decl_id":null,"docs":" The fields of the struct\n","sig":null,"attributes":[{"value":"/ The fields of the struct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9404055,"byte_end":9404083,"line_start":536,"line_end":536,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6640},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9404751,"byte_end":9404762,"line_start":560,"line_end":560,"column_start":12,"column_end":23},"name":"StructField","qualname":"::ast::types::StructField","value":"StructField { id, mutable, ty }","parent":null,"children":[{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":6644}],"decl_id":null,"docs":" A field of a struct type.\n","sig":null,"attributes":[{"value":"/ A field of a struct type.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9404686,"byte_end":9404715,"line_start":558,"line_end":558,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6642},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9404829,"byte_end":9404831,"line_start":562,"line_end":562,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::types::StructField::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6640},"children":[],"decl_id":null,"docs":" An optional identifier for name resolution.\n","sig":null,"attributes":[{"value":"/ An optional identifier for name resolution.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9404773,"byte_end":9404820,"line_start":561,"line_end":561,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6643},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9404912,"byte_end":9404919,"line_start":564,"line_end":564,"column_start":9,"column_end":16},"name":"mutable","qualname":"::ast::types::StructField::mutable","value":"bool","parent":{"krate":0,"index":6640},"children":[],"decl_id":null,"docs":" Whether this field may be mutated or not.\n","sig":null,"attributes":[{"value":"/ Whether this field may be mutated or not.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9404858,"byte_end":9404903,"line_start":563,"line_end":563,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6644},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9404982,"byte_end":9404984,"line_start":566,"line_end":566,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::types::StructField::ty","value":"ast::types::StorageType<'a>","parent":{"krate":0,"index":6640},"children":[],"decl_id":null,"docs":" The storage type stored in this field.\n","sig":null,"attributes":[{"value":"/ The storage type stored in this field.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9404931,"byte_end":9404973,"line_start":565,"line_end":565,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6651},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9405589,"byte_end":9405598,"line_start":587,"line_end":587,"column_start":12,"column_end":21},"name":"ArrayType","qualname":"::ast::types::ArrayType","value":"ArrayType { mutable, ty }","parent":null,"children":[{"krate":0,"index":6653},{"krate":0,"index":6654}],"decl_id":null,"docs":" An array type with fields.\n","sig":null,"attributes":[{"value":"/ An array type with fields.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9405523,"byte_end":9405553,"line_start":585,"line_end":585,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6653},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9405663,"byte_end":9405670,"line_start":589,"line_end":589,"column_start":9,"column_end":16},"name":"mutable","qualname":"::ast::types::ArrayType::mutable","value":"bool","parent":{"krate":0,"index":6651},"children":[],"decl_id":null,"docs":" Whether this field may be mutated or not.\n","sig":null,"attributes":[{"value":"/ Whether this field may be mutated or not.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9405609,"byte_end":9405654,"line_start":588,"line_end":588,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6654},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9405733,"byte_end":9405735,"line_start":591,"line_end":591,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::types::ArrayType::ty","value":"ast::types::StorageType<'a>","parent":{"krate":0,"index":6651},"children":[],"decl_id":null,"docs":" The storage type stored in this field.\n","sig":null,"attributes":[{"value":"/ The storage type stored in this field.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9405682,"byte_end":9405724,"line_start":590,"line_end":590,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6661},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9406277,"byte_end":9406287,"line_start":611,"line_end":611,"column_start":12,"column_end":22},"name":"ModuleType","qualname":"::ast::types::ModuleType","value":"ModuleType { imports, exports }","parent":null,"children":[{"krate":0,"index":6663},{"krate":0,"index":6664}],"decl_id":null,"docs":" A type for a nested module\n","sig":null,"attributes":[{"value":"/ A type for a nested module","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9406202,"byte_end":9406232,"line_start":609,"line_end":609,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6663},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9406362,"byte_end":9406369,"line_start":613,"line_end":613,"column_start":9,"column_end":16},"name":"imports","qualname":"::ast::types::ModuleType::imports","value":"std::vec::Vec<ast::import::Import<'a>>","parent":{"krate":0,"index":6661},"children":[],"decl_id":null,"docs":" The imports that are expected for this module type.\n","sig":null,"attributes":[{"value":"/ The imports that are expected for this module type.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9406298,"byte_end":9406353,"line_start":612,"line_end":612,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6664},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9406464,"byte_end":9406471,"line_start":615,"line_end":615,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::types::ModuleType::exports","value":"std::vec::Vec<ast::types::ExportType<'a>>","parent":{"krate":0,"index":6661},"children":[],"decl_id":null,"docs":" The exports that this module type is expected to have.\n","sig":null,"attributes":[{"value":"/ The exports that this module type is expected to have.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9406397,"byte_end":9406455,"line_start":614,"line_end":614,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":6674},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9407443,"byte_end":9407455,"line_start":654,"line_end":654,"column_start":12,"column_end":24},"name":"InstanceType","qualname":"::ast::types::InstanceType","value":"InstanceType { exports }","parent":null,"children":[{"krate":0,"index":6676}],"decl_id":null,"docs":" A type for a nested instance\n","sig":null,"attributes":[{"value":"/ A type for a nested instance","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9407366,"byte_end":9407398,"line_start":652,"line_end":652,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6676},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9407516,"byte_end":9407523,"line_start":656,"line_end":656,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::types::InstanceType::exports","value":"std::vec::Vec<ast::types::ExportType<'a>>","parent":{"krate":0,"index":6674},"children":[],"decl_id":null,"docs":" The exported types from this instance\n","sig":null,"attributes":[{"value":"/ The exported types from this instance","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9407466,"byte_end":9407507,"line_start":655,"line_end":655,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":6686},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408273,"byte_end":9408283,"line_start":688,"line_end":688,"column_start":12,"column_end":22},"name":"ExportType","qualname":"::ast::types::ExportType","value":"ExportType { span, name, item }","parent":null,"children":[{"krate":0,"index":6688},{"krate":0,"index":6689},{"krate":0,"index":6690}],"decl_id":null,"docs":" The type of an exported item from a module or instance.\n","sig":null,"attributes":[{"value":"/ The type of an exported item from a module or instance.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408178,"byte_end":9408237,"line_start":686,"line_end":686,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6688},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408337,"byte_end":9408341,"line_start":690,"line_end":690,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::types::ExportType::span","value":"ast::token::Span","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" Where this export was defined.\n","sig":null,"attributes":[{"value":"/ Where this export was defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408294,"byte_end":9408328,"line_start":689,"line_end":689,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6689},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408395,"byte_end":9408399,"line_start":692,"line_end":692,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::types::ExportType::name","value":"&'a str","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" The name of this export.\n","sig":null,"attributes":[{"value":"/ The name of this export.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408358,"byte_end":9408386,"line_start":691,"line_end":691,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6690},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408469,"byte_end":9408473,"line_start":694,"line_end":694,"column_start":9,"column_end":13},"name":"item","qualname":"::ast::types::ExportType::item","value":"ast::import::ItemSig<'a>","parent":{"krate":0,"index":6686},"children":[],"decl_id":null,"docs":" The signature of the item that's exported.\n","sig":null,"attributes":[{"value":"/ The signature of the item that's exported.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408414,"byte_end":9408460,"line_start":693,"line_end":693,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6699},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408886,"byte_end":9408890,"line_start":710,"line_end":710,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::types::TypeDef::Func","value":"TypeDef::Func(FunctionType)","parent":{"krate":0,"index":6697},"children":[],"decl_id":null,"docs":" A function type definition.\n","sig":null,"attributes":[{"value":"/ A function type definition.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408850,"byte_end":9408881,"line_start":709,"line_end":709,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6702},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408948,"byte_end":9408954,"line_start":712,"line_end":712,"column_start":5,"column_end":11},"name":"Struct","qualname":"::ast::types::TypeDef::Struct","value":"TypeDef::Struct(StructType)","parent":{"krate":0,"index":6697},"children":[],"decl_id":null,"docs":" A struct type definition.\n","sig":null,"attributes":[{"value":"/ A struct type definition.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408914,"byte_end":9408943,"line_start":711,"line_end":711,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6705},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409010,"byte_end":9409015,"line_start":714,"line_end":714,"column_start":5,"column_end":10},"name":"Array","qualname":"::ast::types::TypeDef::Array","value":"TypeDef::Array(ArrayType)","parent":{"krate":0,"index":6697},"children":[],"decl_id":null,"docs":" An array type definition.\n","sig":null,"attributes":[{"value":"/ An array type definition.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408976,"byte_end":9409005,"line_start":713,"line_end":713,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6708},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409070,"byte_end":9409076,"line_start":716,"line_end":716,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::types::TypeDef::Module","value":"TypeDef::Module(ModuleType)","parent":{"krate":0,"index":6697},"children":[],"decl_id":null,"docs":" A module type definition.\n","sig":null,"attributes":[{"value":"/ A module type definition.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409036,"byte_end":9409065,"line_start":715,"line_end":715,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6711},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409135,"byte_end":9409143,"line_start":718,"line_end":718,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::types::TypeDef::Instance","value":"TypeDef::Instance(InstanceType)","parent":{"krate":0,"index":6697},"children":[],"decl_id":null,"docs":" An instance type definition.\n","sig":null,"attributes":[{"value":"/ An instance type definition.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409098,"byte_end":9409130,"line_start":717,"line_end":717,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":6697},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408832,"byte_end":9408839,"line_start":708,"line_end":708,"column_start":10,"column_end":17},"name":"TypeDef","qualname":"::ast::types::TypeDef","value":"pub enum TypeDef<'a> {\n    Func(FunctionType),\n    Struct(StructType),\n    Array(ArrayType),\n    Module(ModuleType),\n    Instance(InstanceType),\n}","parent":null,"children":[{"krate":0,"index":6699},{"krate":0,"index":6702},{"krate":0,"index":6705},{"krate":0,"index":6708},{"krate":0,"index":6711}],"decl_id":null,"docs":" A definition of a type.\n","sig":null,"attributes":[{"value":"/ A definition of a type.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408778,"byte_end":9408805,"line_start":706,"line_end":706,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6717},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409229,"byte_end":9409233,"line_start":723,"line_end":723,"column_start":12,"column_end":16},"name":"Type","qualname":"::ast::types::Type","value":"Type { span, id, def }","parent":null,"children":[{"krate":0,"index":6719},{"krate":0,"index":6720},{"krate":0,"index":6721}],"decl_id":null,"docs":" A type declaration in a module\n","sig":null,"attributes":[{"value":"/ A type declaration in a module","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409166,"byte_end":9409200,"line_start":721,"line_end":721,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6719},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409285,"byte_end":9409289,"line_start":725,"line_end":725,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::types::Type::span","value":"ast::token::Span","parent":{"krate":0,"index":6717},"children":[],"decl_id":null,"docs":" Where this type was defined.\n","sig":null,"attributes":[{"value":"/ Where this type was defined.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409244,"byte_end":9409276,"line_start":724,"line_end":724,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6720},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409403,"byte_end":9409405,"line_start":728,"line_end":728,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::types::Type::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":6717},"children":[],"decl_id":null,"docs":" An optional identifer to refer to this `type` by as part of name\n resolution.\n","sig":null,"attributes":[{"value":"/ An optional identifer to refer to this `type` by as part of name","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409306,"byte_end":9409374,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/ resolution.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409379,"byte_end":9409394,"line_start":727,"line_end":727,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6721},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409475,"byte_end":9409478,"line_start":730,"line_end":730,"column_start":9,"column_end":12},"name":"def","qualname":"::ast::types::Type::def","value":"ast::types::TypeDef<'a>","parent":{"krate":0,"index":6717},"children":[],"decl_id":null,"docs":" The type that we're declaring.\n","sig":null,"attributes":[{"value":"/ The type that we're declaring.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409432,"byte_end":9409466,"line_start":729,"line_end":729,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":6725},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9410692,"byte_end":9410699,"line_start":764,"line_end":764,"column_start":12,"column_end":19},"name":"TypeUse","qualname":"::ast::types::TypeUse","value":"TypeUse { index, inline }","parent":null,"children":[{"krate":0,"index":6728},{"krate":0,"index":6729}],"decl_id":null,"docs":" A reference to a type defined in this module.\n","sig":null,"attributes":[{"value":"/ A reference to a type defined in this module.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9410607,"byte_end":9410656,"line_start":762,"line_end":762,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6728},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9410777,"byte_end":9410782,"line_start":766,"line_end":766,"column_start":9,"column_end":14},"name":"index","qualname":"::ast::types::TypeUse::index","value":"std::option::Option<ast::token::ItemRef<'a, ast::kw::r#type>>","parent":{"krate":0,"index":6725},"children":[],"decl_id":null,"docs":" The type that we're referencing, if it was present.\n","sig":null,"attributes":[{"value":"/ The type that we're referencing, if it was present.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9410713,"byte_end":9410768,"line_start":765,"line_end":765,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6729},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9410867,"byte_end":9410873,"line_start":768,"line_end":768,"column_start":9,"column_end":15},"name":"inline","qualname":"::ast::types::TypeUse::inline","value":"std::option::Option<T>","parent":{"krate":0,"index":6725},"children":[],"decl_id":null,"docs":" The inline type, if present.\n","sig":null,"attributes":[{"value":"/ The inline type, if present.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9410826,"byte_end":9410858,"line_start":767,"line_end":767,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9411042,"byte_end":9411056,"line_start":774,"line_end":774,"column_start":12,"column_end":26},"name":"new_with_index","qualname":"<TypeUse>::new_with_index","value":"pub fn new_with_index(ast::Index) -> TypeUse","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new instance of `TypeUse` without an inline definition but\n with an index specified.\n","sig":null,"attributes":[{"value":"/ Constructs a new instance of `TypeUse` without an inline definition but","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9410922,"byte_end":9410997,"line_start":772,"line_end":772,"column_start":5,"column_end":80}},{"value":"/ with an index specified.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9411002,"byte_end":9411030,"line_start":773,"line_end":773,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9412377,"byte_end":9412381,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Wast","qualname":"::ast::wast::Wast","value":"Wast { directives }","parent":null,"children":[{"krate":0,"index":1993}],"decl_id":null,"docs":" A parsed representation of a `*.wast` file.","sig":null,"attributes":[{"value":"/ A parsed representation of a `*.wast` file.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9412094,"byte_end":9412141,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9412142,"byte_end":9412145,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ WAST files are not officially specified but are used in the official test","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9412146,"byte_end":9412223,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ suite to write official spec tests for wasm. This type represents a parsed","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9412224,"byte_end":9412302,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ `*.wast` file which parses a list of directives in a file.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9412303,"byte_end":9412365,"line_start":9,"line_end":9,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1993},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9412423,"byte_end":9412433,"line_start":12,"line_end":12,"column_start":9,"column_end":19},"name":"directives","qualname":"::ast::wast::Wast::directives","value":"std::vec::Vec<ast::wast::WastDirective<'a>>","parent":{"krate":0,"index":1991},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9412392,"byte_end":9412414,"line_start":11,"line_end":11,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9413744,"byte_end":9413750,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::wast::WastDirective::Module","value":"WastDirective::Module(ast::Module)","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9413773,"byte_end":9413784,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"QuoteModule","qualname":"::ast::wast::WastDirective::QuoteModule","value":"WastDirective::QuoteModule { span, source }","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9413854,"byte_end":9413869,"line_start":60,"line_end":60,"column_start":5,"column_end":20},"name":"AssertMalformed","qualname":"::ast::wast::WastDirective::AssertMalformed","value":"WastDirective::AssertMalformed { span, module, message }","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9413967,"byte_end":9413980,"line_start":65,"line_end":65,"column_start":5,"column_end":18},"name":"AssertInvalid","qualname":"::ast::wast::WastDirective::AssertInvalid","value":"WastDirective::AssertInvalid { span, module, message }","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9414078,"byte_end":9414086,"line_start":70,"line_end":70,"column_start":5,"column_end":13},"name":"Register","qualname":"::ast::wast::WastDirective::Register","value":"WastDirective::Register { span, name, module }","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2023},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9414185,"byte_end":9414191,"line_start":75,"line_end":75,"column_start":5,"column_end":11},"name":"Invoke","qualname":"::ast::wast::WastDirective::Invoke","value":"WastDirective::Invoke(WastInvoke)","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2026},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9414213,"byte_end":9414223,"line_start":76,"line_end":76,"column_start":5,"column_end":15},"name":"AssertTrap","qualname":"::ast::wast::WastDirective::AssertTrap","value":"WastDirective::AssertTrap { span, exec, message }","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2030},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9414319,"byte_end":9414331,"line_start":81,"line_end":81,"column_start":5,"column_end":17},"name":"AssertReturn","qualname":"::ast::wast::WastDirective::AssertReturn","value":"WastDirective::AssertReturn { span, exec, results }","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2034},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9414450,"byte_end":9414466,"line_start":86,"line_end":86,"column_start":5,"column_end":21},"name":"AssertExhaustion","qualname":"::ast::wast::WastDirective::AssertExhaustion","value":"WastDirective::AssertExhaustion { span, call, message }","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9414561,"byte_end":9414577,"line_start":91,"line_end":91,"column_start":5,"column_end":21},"name":"AssertUnlinkable","qualname":"::ast::wast::WastDirective::AssertUnlinkable","value":"WastDirective::AssertUnlinkable { span, module, message }","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9413720,"byte_end":9413733,"line_start":54,"line_end":54,"column_start":10,"column_end":23},"name":"WastDirective","qualname":"::ast::wast::WastDirective","value":"pub enum WastDirective<'a> {\n    Module(ast::Module),\n    QuoteModule {\n        span: ast::Span,\n        source: Vec<&'a [u8]>,\n    },\n    AssertMalformed {\n        span: ast::Span,\n        module: QuoteModule,\n        message: &'a str,\n    },\n    AssertInvalid {\n        span: ast::Span,\n        module: ast::Module,\n        message: &'a str,\n    },\n    Register {\n        span: ast::Span,\n        name: &'a str,\n        module: Option<ast::Id>,\n    },\n    Invoke(WastInvoke),\n    AssertTrap {\n        span: ast::Span,\n        exec: WastExecute,\n        message: &'a str,\n    },\n    AssertReturn {\n        span: ast::Span,\n        exec: WastExecute,\n        results: Vec<ast::AssertExpression>,\n    },\n    AssertExhaustion {\n        span: ast::Span,\n        call: WastInvoke,\n        message: &'a str,\n    },\n    AssertUnlinkable {\n        span: ast::Span,\n        module: ast::Module,\n        message: &'a str,\n    },\n}","parent":null,"children":[{"krate":0,"index":2005},{"krate":0,"index":2008},{"krate":0,"index":2011},{"krate":0,"index":2015},{"krate":0,"index":2019},{"krate":0,"index":2023},{"krate":0,"index":2026},{"krate":0,"index":2030},{"krate":0,"index":2034},{"krate":0,"index":2038}],"decl_id":null,"docs":" The different kinds of directives found in a `*.wast` file.","sig":null,"attributes":[{"value":"/ The different kinds of directives found in a `*.wast` file.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9413490,"byte_end":9413553,"line_start":49,"line_end":49,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9413554,"byte_end":9413557,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ It's not entirely clear to me what all of these are per se, but they're only","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9413558,"byte_end":9413638,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ really interesting to test harnesses mostly.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9413639,"byte_end":9413687,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9413688,"byte_end":9413710,"line_start":53,"line_end":53,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9414788,"byte_end":9414792,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"span","qualname":"<WastDirective>::span","value":"pub fn span(&Self) -> ast::Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the location in the source that this directive was defined at\n","sig":null,"attributes":[{"value":"/ Returns the location in the source that this directive was defined at","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9414703,"byte_end":9414776,"line_start":99,"line_end":99,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2063},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9421516,"byte_end":9421522,"line_start":258,"line_end":258,"column_start":5,"column_end":11},"name":"Invoke","qualname":"::ast::wast::WastExecute::Invoke","value":"WastExecute::Invoke(WastInvoke)","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2066},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9421544,"byte_end":9421550,"line_start":259,"line_end":259,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::wast::WastExecute::Module","value":"WastExecute::Module(ast::Module)","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2069},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9421573,"byte_end":9421576,"line_start":260,"line_end":260,"column_start":5,"column_end":8},"name":"Get","qualname":"::ast::wast::WastExecute::Get","value":"WastExecute::Get { module, global }","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9421494,"byte_end":9421505,"line_start":257,"line_end":257,"column_start":10,"column_end":21},"name":"WastExecute","qualname":"::ast::wast::WastExecute","value":"pub enum WastExecute<'a> {\n    Invoke(WastInvoke),\n    Module(ast::Module),\n    Get {\n        module: Option<ast::Id>,\n        global: &'a str,\n    },\n}","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2066},{"krate":0,"index":2069}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9421462,"byte_end":9421484,"line_start":256,"line_end":256,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9422277,"byte_end":9422287,"line_start":286,"line_end":286,"column_start":12,"column_end":22},"name":"WastInvoke","qualname":"::ast::wast::WastInvoke","value":"WastInvoke { span, module, name, args }","parent":null,"children":[{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9422243,"byte_end":9422265,"line_start":285,"line_end":285,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2077},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9422302,"byte_end":9422306,"line_start":287,"line_end":287,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::wast::WastInvoke::span","value":"ast::token::Span","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9422327,"byte_end":9422333,"line_start":288,"line_end":288,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::wast::WastInvoke::module","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2079},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9422364,"byte_end":9422368,"line_start":289,"line_end":289,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::wast::WastInvoke::name","value":"&'a str","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2080},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9422387,"byte_end":9422391,"line_start":290,"line_end":290,"column_start":9,"column_end":13},"name":"args","qualname":"::ast::wast::WastInvoke::args","value":"std::vec::Vec<ast::expr::Expression<'a>>","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2087},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9422945,"byte_end":9422951,"line_start":313,"line_end":313,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::wast::QuoteModule::Module","value":"QuoteModule::Module(ast::Module)","parent":{"krate":0,"index":2085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2090},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9422974,"byte_end":9422979,"line_start":314,"line_end":314,"column_start":5,"column_end":10},"name":"Quote","qualname":"::ast::wast::QuoteModule::Quote","value":"QuoteModule::Quote(Vec<&'a [u8]>)","parent":{"krate":0,"index":2085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9422923,"byte_end":9422934,"line_start":312,"line_end":312,"column_start":10,"column_end":21},"name":"QuoteModule","qualname":"::ast::wast::QuoteModule","value":"pub enum QuoteModule<'a> { Module(ast::Module), Quote(Vec<&'a [u8]>), }","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2090}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9422891,"byte_end":9422913,"line_start":311,"line_end":311,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":487},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129565,"byte_end":129567,"line_start":325,"line_end":325,"column_start":9,"column_end":11},"name":"kw","qualname":"::ast::kw","value":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","parent":null,"children":[{"krate":0,"index":6745},{"krate":0,"index":6748},{"krate":0,"index":6750},{"krate":0,"index":6751},{"krate":0,"index":6738},{"krate":0,"index":6742},{"krate":0,"index":6760},{"krate":0,"index":6763},{"krate":0,"index":6765},{"krate":0,"index":6766},{"krate":0,"index":6753},{"krate":0,"index":6757},{"krate":0,"index":6775},{"krate":0,"index":6778},{"krate":0,"index":6780},{"krate":0,"index":6781},{"krate":0,"index":6768},{"krate":0,"index":6772},{"krate":0,"index":6790},{"krate":0,"index":6793},{"krate":0,"index":6795},{"krate":0,"index":6796},{"krate":0,"index":6783},{"krate":0,"index":6787},{"krate":0,"index":6805},{"krate":0,"index":6808},{"krate":0,"index":6810},{"krate":0,"index":6811},{"krate":0,"index":6798},{"krate":0,"index":6802},{"krate":0,"index":6820},{"krate":0,"index":6823},{"krate":0,"index":6825},{"krate":0,"index":6826},{"krate":0,"index":6813},{"krate":0,"index":6817},{"krate":0,"index":6835},{"krate":0,"index":6838},{"krate":0,"index":6840},{"krate":0,"index":6841},{"krate":0,"index":6828},{"krate":0,"index":6832},{"krate":0,"index":6850},{"krate":0,"index":6853},{"krate":0,"index":6855},{"krate":0,"index":6856},{"krate":0,"index":6843},{"krate":0,"index":6847},{"krate":0,"index":6865},{"krate":0,"index":6868},{"krate":0,"index":6870},{"krate":0,"index":6871},{"krate":0,"index":6858},{"krate":0,"index":6862},{"krate":0,"index":6880},{"krate":0,"index":6883},{"krate":0,"index":6885},{"krate":0,"index":6886},{"krate":0,"index":6873},{"krate":0,"index":6877},{"krate":0,"index":6895},{"krate":0,"index":6898},{"krate":0,"index":6900},{"krate":0,"index":6901},{"krate":0,"index":6888},{"krate":0,"index":6892},{"krate":0,"index":6910},{"krate":0,"index":6913},{"krate":0,"index":6915},{"krate":0,"index":6916},{"krate":0,"index":6903},{"krate":0,"index":6907},{"krate":0,"index":6925},{"krate":0,"index":6928},{"krate":0,"index":6930},{"krate":0,"index":6931},{"krate":0,"index":6918},{"krate":0,"index":6922},{"krate":0,"index":6940},{"krate":0,"index":6943},{"krate":0,"index":6945},{"krate":0,"index":6946},{"krate":0,"index":6933},{"krate":0,"index":6937},{"krate":0,"index":6955},{"krate":0,"index":6958},{"krate":0,"index":6960},{"krate":0,"index":6961},{"krate":0,"index":6948},{"krate":0,"index":6952},{"krate":0,"index":6970},{"krate":0,"index":6973},{"krate":0,"index":6975},{"krate":0,"index":6976},{"krate":0,"index":6963},{"krate":0,"index":6967},{"krate":0,"index":6985},{"krate":0,"index":6988},{"krate":0,"index":6990},{"krate":0,"index":6991},{"krate":0,"index":6978},{"krate":0,"index":6982},{"krate":0,"index":7000},{"krate":0,"index":7003},{"krate":0,"index":7005},{"krate":0,"index":7006},{"krate":0,"index":6993},{"krate":0,"index":6997},{"krate":0,"index":7015},{"krate":0,"index":7018},{"krate":0,"index":7020},{"krate":0,"index":7021},{"krate":0,"index":7008},{"krate":0,"index":7012},{"krate":0,"index":7030},{"krate":0,"index":7033},{"krate":0,"index":7035},{"krate":0,"index":7036},{"krate":0,"index":7023},{"krate":0,"index":7027},{"krate":0,"index":7045},{"krate":0,"index":7048},{"krate":0,"index":7050},{"krate":0,"index":7051},{"krate":0,"index":7038},{"krate":0,"index":7042},{"krate":0,"index":7060},{"krate":0,"index":7063},{"krate":0,"index":7065},{"krate":0,"index":7066},{"krate":0,"index":7053},{"krate":0,"index":7057},{"krate":0,"index":7075},{"krate":0,"index":7078},{"krate":0,"index":7080},{"krate":0,"index":7081},{"krate":0,"index":7068},{"krate":0,"index":7072},{"krate":0,"index":7090},{"krate":0,"index":7093},{"krate":0,"index":7095},{"krate":0,"index":7096},{"krate":0,"index":7083},{"krate":0,"index":7087},{"krate":0,"index":7105},{"krate":0,"index":7108},{"krate":0,"index":7110},{"krate":0,"index":7111},{"krate":0,"index":7098},{"krate":0,"index":7102},{"krate":0,"index":7120},{"krate":0,"index":7123},{"krate":0,"index":7125},{"krate":0,"index":7126},{"krate":0,"index":7113},{"krate":0,"index":7117},{"krate":0,"index":7135},{"krate":0,"index":7138},{"krate":0,"index":7140},{"krate":0,"index":7141},{"krate":0,"index":7128},{"krate":0,"index":7132},{"krate":0,"index":7150},{"krate":0,"index":7153},{"krate":0,"index":7155},{"krate":0,"index":7156},{"krate":0,"index":7143},{"krate":0,"index":7147},{"krate":0,"index":7165},{"krate":0,"index":7168},{"krate":0,"index":7170},{"krate":0,"index":7171},{"krate":0,"index":7158},{"krate":0,"index":7162},{"krate":0,"index":7180},{"krate":0,"index":7183},{"krate":0,"index":7185},{"krate":0,"index":7186},{"krate":0,"index":7173},{"krate":0,"index":7177},{"krate":0,"index":7195},{"krate":0,"index":7198},{"krate":0,"index":7200},{"krate":0,"index":7201},{"krate":0,"index":7188},{"krate":0,"index":7192},{"krate":0,"index":7210},{"krate":0,"index":7213},{"krate":0,"index":7215},{"krate":0,"index":7216},{"krate":0,"index":7203},{"krate":0,"index":7207},{"krate":0,"index":7225},{"krate":0,"index":7228},{"krate":0,"index":7230},{"krate":0,"index":7231},{"krate":0,"index":7218},{"krate":0,"index":7222},{"krate":0,"index":7240},{"krate":0,"index":7243},{"krate":0,"index":7245},{"krate":0,"index":7246},{"krate":0,"index":7233},{"krate":0,"index":7237},{"krate":0,"index":7255},{"krate":0,"index":7258},{"krate":0,"index":7260},{"krate":0,"index":7261},{"krate":0,"index":7248},{"krate":0,"index":7252},{"krate":0,"index":7270},{"krate":0,"index":7273},{"krate":0,"index":7275},{"krate":0,"index":7276},{"krate":0,"index":7263},{"krate":0,"index":7267},{"krate":0,"index":7285},{"krate":0,"index":7288},{"krate":0,"index":7290},{"krate":0,"index":7291},{"krate":0,"index":7278},{"krate":0,"index":7282},{"krate":0,"index":7300},{"krate":0,"index":7303},{"krate":0,"index":7305},{"krate":0,"index":7306},{"krate":0,"index":7293},{"krate":0,"index":7297},{"krate":0,"index":7315},{"krate":0,"index":7318},{"krate":0,"index":7320},{"krate":0,"index":7321},{"krate":0,"index":7308},{"krate":0,"index":7312},{"krate":0,"index":7330},{"krate":0,"index":7333},{"krate":0,"index":7335},{"krate":0,"index":7336},{"krate":0,"index":7323},{"krate":0,"index":7327},{"krate":0,"index":7345},{"krate":0,"index":7348},{"krate":0,"index":7350},{"krate":0,"index":7351},{"krate":0,"index":7338},{"krate":0,"index":7342},{"krate":0,"index":7360},{"krate":0,"index":7363},{"krate":0,"index":7365},{"krate":0,"index":7366},{"krate":0,"index":7353},{"krate":0,"index":7357},{"krate":0,"index":7375},{"krate":0,"index":7378},{"krate":0,"index":7380},{"krate":0,"index":7381},{"krate":0,"index":7368},{"krate":0,"index":7372},{"krate":0,"index":7390},{"krate":0,"index":7393},{"krate":0,"index":7395},{"krate":0,"index":7396},{"krate":0,"index":7383},{"krate":0,"index":7387},{"krate":0,"index":7405},{"krate":0,"index":7408},{"krate":0,"index":7410},{"krate":0,"index":7411},{"krate":0,"index":7398},{"krate":0,"index":7402},{"krate":0,"index":7420},{"krate":0,"index":7423},{"krate":0,"index":7425},{"krate":0,"index":7426},{"krate":0,"index":7413},{"krate":0,"index":7417},{"krate":0,"index":7435},{"krate":0,"index":7438},{"krate":0,"index":7440},{"krate":0,"index":7441},{"krate":0,"index":7428},{"krate":0,"index":7432},{"krate":0,"index":7450},{"krate":0,"index":7453},{"krate":0,"index":7455},{"krate":0,"index":7456},{"krate":0,"index":7443},{"krate":0,"index":7447},{"krate":0,"index":7465},{"krate":0,"index":7468},{"krate":0,"index":7470},{"krate":0,"index":7471},{"krate":0,"index":7458},{"krate":0,"index":7462},{"krate":0,"index":7480},{"krate":0,"index":7483},{"krate":0,"index":7485},{"krate":0,"index":7486},{"krate":0,"index":7473},{"krate":0,"index":7477},{"krate":0,"index":7495},{"krate":0,"index":7498},{"krate":0,"index":7500},{"krate":0,"index":7501},{"krate":0,"index":7488},{"krate":0,"index":7492},{"krate":0,"index":7510},{"krate":0,"index":7513},{"krate":0,"index":7515},{"krate":0,"index":7516},{"krate":0,"index":7503},{"krate":0,"index":7507},{"krate":0,"index":7525},{"krate":0,"index":7528},{"krate":0,"index":7530},{"krate":0,"index":7531},{"krate":0,"index":7518},{"krate":0,"index":7522},{"krate":0,"index":7540},{"krate":0,"index":7543},{"krate":0,"index":7545},{"krate":0,"index":7546},{"krate":0,"index":7533},{"krate":0,"index":7537},{"krate":0,"index":7555},{"krate":0,"index":7558},{"krate":0,"index":7560},{"krate":0,"index":7561},{"krate":0,"index":7548},{"krate":0,"index":7552},{"krate":0,"index":7570},{"krate":0,"index":7573},{"krate":0,"index":7575},{"krate":0,"index":7576},{"krate":0,"index":7563},{"krate":0,"index":7567},{"krate":0,"index":7585},{"krate":0,"index":7588},{"krate":0,"index":7590},{"krate":0,"index":7591},{"krate":0,"index":7578},{"krate":0,"index":7582},{"krate":0,"index":7600},{"krate":0,"index":7603},{"krate":0,"index":7605},{"krate":0,"index":7606},{"krate":0,"index":7593},{"krate":0,"index":7597},{"krate":0,"index":7615},{"krate":0,"index":7618},{"krate":0,"index":7620},{"krate":0,"index":7621},{"krate":0,"index":7608},{"krate":0,"index":7612},{"krate":0,"index":7630},{"krate":0,"index":7633},{"krate":0,"index":7635},{"krate":0,"index":7636},{"krate":0,"index":7623},{"krate":0,"index":7627},{"krate":0,"index":7645},{"krate":0,"index":7648},{"krate":0,"index":7650},{"krate":0,"index":7651},{"krate":0,"index":7638},{"krate":0,"index":7642},{"krate":0,"index":7660},{"krate":0,"index":7663},{"krate":0,"index":7665},{"krate":0,"index":7666},{"krate":0,"index":7653},{"krate":0,"index":7657},{"krate":0,"index":7675},{"krate":0,"index":7678},{"krate":0,"index":7680},{"krate":0,"index":7681},{"krate":0,"index":7668},{"krate":0,"index":7672},{"krate":0,"index":7690},{"krate":0,"index":7693},{"krate":0,"index":7695},{"krate":0,"index":7696},{"krate":0,"index":7683},{"krate":0,"index":7687},{"krate":0,"index":7705},{"krate":0,"index":7708},{"krate":0,"index":7710},{"krate":0,"index":7711},{"krate":0,"index":7698},{"krate":0,"index":7702},{"krate":0,"index":7720},{"krate":0,"index":7723},{"krate":0,"index":7725},{"krate":0,"index":7726},{"krate":0,"index":7713},{"krate":0,"index":7717},{"krate":0,"index":7735},{"krate":0,"index":7738},{"krate":0,"index":7740},{"krate":0,"index":7741},{"krate":0,"index":7728},{"krate":0,"index":7732},{"krate":0,"index":7750},{"krate":0,"index":7753},{"krate":0,"index":7755},{"krate":0,"index":7756},{"krate":0,"index":7743},{"krate":0,"index":7747},{"krate":0,"index":7765},{"krate":0,"index":7768},{"krate":0,"index":7770},{"krate":0,"index":7771},{"krate":0,"index":7758},{"krate":0,"index":7762},{"krate":0,"index":7780},{"krate":0,"index":7783},{"krate":0,"index":7785},{"krate":0,"index":7786},{"krate":0,"index":7773},{"krate":0,"index":7777},{"krate":0,"index":7795},{"krate":0,"index":7798},{"krate":0,"index":7800},{"krate":0,"index":7801},{"krate":0,"index":7788},{"krate":0,"index":7792},{"krate":0,"index":7810},{"krate":0,"index":7813},{"krate":0,"index":7815},{"krate":0,"index":7816},{"krate":0,"index":7803},{"krate":0,"index":7807},{"krate":0,"index":7825},{"krate":0,"index":7828},{"krate":0,"index":7830},{"krate":0,"index":7831},{"krate":0,"index":7818},{"krate":0,"index":7822},{"krate":0,"index":7840},{"krate":0,"index":7843},{"krate":0,"index":7845},{"krate":0,"index":7846},{"krate":0,"index":7833},{"krate":0,"index":7837},{"krate":0,"index":7855},{"krate":0,"index":7858},{"krate":0,"index":7860},{"krate":0,"index":7861},{"krate":0,"index":7848},{"krate":0,"index":7852},{"krate":0,"index":7870},{"krate":0,"index":7873},{"krate":0,"index":7875},{"krate":0,"index":7876},{"krate":0,"index":7863},{"krate":0,"index":7867},{"krate":0,"index":7885},{"krate":0,"index":7888},{"krate":0,"index":7890},{"krate":0,"index":7891},{"krate":0,"index":7878},{"krate":0,"index":7882},{"krate":0,"index":7900},{"krate":0,"index":7903},{"krate":0,"index":7905},{"krate":0,"index":7906},{"krate":0,"index":7893},{"krate":0,"index":7897},{"krate":0,"index":7915},{"krate":0,"index":7918},{"krate":0,"index":7920},{"krate":0,"index":7921},{"krate":0,"index":7908},{"krate":0,"index":7912},{"krate":0,"index":7930},{"krate":0,"index":7933},{"krate":0,"index":7935},{"krate":0,"index":7936},{"krate":0,"index":7923},{"krate":0,"index":7927},{"krate":0,"index":7945},{"krate":0,"index":7948},{"krate":0,"index":7950},{"krate":0,"index":7951},{"krate":0,"index":7938},{"krate":0,"index":7942},{"krate":0,"index":7960},{"krate":0,"index":7963},{"krate":0,"index":7965},{"krate":0,"index":7966},{"krate":0,"index":7953},{"krate":0,"index":7957},{"krate":0,"index":7975},{"krate":0,"index":7978},{"krate":0,"index":7980},{"krate":0,"index":7981},{"krate":0,"index":7968},{"krate":0,"index":7972},{"krate":0,"index":7990},{"krate":0,"index":7993},{"krate":0,"index":7995},{"krate":0,"index":7996},{"krate":0,"index":7983},{"krate":0,"index":7987},{"krate":0,"index":8005},{"krate":0,"index":8008},{"krate":0,"index":8010},{"krate":0,"index":8011},{"krate":0,"index":7998},{"krate":0,"index":8002},{"krate":0,"index":8020},{"krate":0,"index":8023},{"krate":0,"index":8025},{"krate":0,"index":8026},{"krate":0,"index":8013},{"krate":0,"index":8017},{"krate":0,"index":8035},{"krate":0,"index":8038},{"krate":0,"index":8040},{"krate":0,"index":8041},{"krate":0,"index":8028},{"krate":0,"index":8032},{"krate":0,"index":8050},{"krate":0,"index":8053},{"krate":0,"index":8055},{"krate":0,"index":8056},{"krate":0,"index":8043},{"krate":0,"index":8047},{"krate":0,"index":8065},{"krate":0,"index":8068},{"krate":0,"index":8070},{"krate":0,"index":8071},{"krate":0,"index":8058},{"krate":0,"index":8062},{"krate":0,"index":8080},{"krate":0,"index":8083},{"krate":0,"index":8085},{"krate":0,"index":8086},{"krate":0,"index":8073},{"krate":0,"index":8077},{"krate":0,"index":8095},{"krate":0,"index":8098},{"krate":0,"index":8100},{"krate":0,"index":8101},{"krate":0,"index":8088},{"krate":0,"index":8092},{"krate":0,"index":8110},{"krate":0,"index":8113},{"krate":0,"index":8115},{"krate":0,"index":8116},{"krate":0,"index":8103},{"krate":0,"index":8107},{"krate":0,"index":8125},{"krate":0,"index":8128},{"krate":0,"index":8130},{"krate":0,"index":8131},{"krate":0,"index":8118},{"krate":0,"index":8122},{"krate":0,"index":8140},{"krate":0,"index":8143},{"krate":0,"index":8145},{"krate":0,"index":8146},{"krate":0,"index":8133},{"krate":0,"index":8137},{"krate":0,"index":8155},{"krate":0,"index":8158},{"krate":0,"index":8160},{"krate":0,"index":8161},{"krate":0,"index":8148},{"krate":0,"index":8152},{"krate":0,"index":8170},{"krate":0,"index":8173},{"krate":0,"index":8175},{"krate":0,"index":8176},{"krate":0,"index":8163},{"krate":0,"index":8167},{"krate":0,"index":8185},{"krate":0,"index":8188},{"krate":0,"index":8190},{"krate":0,"index":8191},{"krate":0,"index":8178},{"krate":0,"index":8182},{"krate":0,"index":8200},{"krate":0,"index":8203},{"krate":0,"index":8205},{"krate":0,"index":8206},{"krate":0,"index":8193},{"krate":0,"index":8197}],"decl_id":null,"docs":" Common keyword used to parse WebAssembly text files.\n","sig":null,"attributes":[{"value":"/ Common keyword used to parse WebAssembly text files.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129500,"byte_end":129556,"line_start":324,"line_end":324,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":6745},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129590,"byte_end":129595,"line_start":326,"line_end":326,"column_start":21,"column_end":26},"name":"after","qualname":"::ast::kw::after","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6760},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129618,"byte_end":129623,"line_start":327,"line_end":327,"column_start":21,"column_end":26},"name":"alias","qualname":"::ast::kw::alias","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6775},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129646,"byte_end":129649,"line_start":328,"line_end":328,"column_start":21,"column_end":24},"name":"any","qualname":"::ast::kw::any","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6790},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129672,"byte_end":129679,"line_start":329,"line_end":329,"column_start":21,"column_end":28},"name":"anyfunc","qualname":"::ast::kw::anyfunc","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6805},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129702,"byte_end":129708,"line_start":330,"line_end":330,"column_start":21,"column_end":27},"name":"anyref","qualname":"::ast::kw::anyref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6820},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129731,"byte_end":129734,"line_start":331,"line_end":331,"column_start":21,"column_end":24},"name":"arg","qualname":"::ast::kw::arg","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6835},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129757,"byte_end":129762,"line_start":332,"line_end":332,"column_start":21,"column_end":26},"name":"array","qualname":"::ast::kw::array","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6850},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129785,"byte_end":129802,"line_start":333,"line_end":333,"column_start":21,"column_end":38},"name":"assert_exhaustion","qualname":"::ast::kw::assert_exhaustion","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6865},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129825,"byte_end":129839,"line_start":334,"line_end":334,"column_start":21,"column_end":35},"name":"assert_invalid","qualname":"::ast::kw::assert_invalid","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6880},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129862,"byte_end":129878,"line_start":335,"line_end":335,"column_start":21,"column_end":37},"name":"assert_malformed","qualname":"::ast::kw::assert_malformed","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6895},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129901,"byte_end":129914,"line_start":336,"line_end":336,"column_start":21,"column_end":34},"name":"assert_return","qualname":"::ast::kw::assert_return","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6910},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129937,"byte_end":129965,"line_start":337,"line_end":337,"column_start":21,"column_end":49},"name":"assert_return_arithmetic_nan","qualname":"::ast::kw::assert_return_arithmetic_nan","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6925},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":129988,"byte_end":130022,"line_start":338,"line_end":338,"column_start":21,"column_end":55},"name":"assert_return_arithmetic_nan_f32x4","qualname":"::ast::kw::assert_return_arithmetic_nan_f32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6940},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130045,"byte_end":130079,"line_start":339,"line_end":339,"column_start":21,"column_end":55},"name":"assert_return_arithmetic_nan_f64x2","qualname":"::ast::kw::assert_return_arithmetic_nan_f64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6955},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130102,"byte_end":130129,"line_start":340,"line_end":340,"column_start":21,"column_end":48},"name":"assert_return_canonical_nan","qualname":"::ast::kw::assert_return_canonical_nan","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6970},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130152,"byte_end":130185,"line_start":341,"line_end":341,"column_start":21,"column_end":54},"name":"assert_return_canonical_nan_f32x4","qualname":"::ast::kw::assert_return_canonical_nan_f32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6985},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130208,"byte_end":130241,"line_start":342,"line_end":342,"column_start":21,"column_end":54},"name":"assert_return_canonical_nan_f64x2","qualname":"::ast::kw::assert_return_canonical_nan_f64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7000},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130264,"byte_end":130282,"line_start":343,"line_end":343,"column_start":21,"column_end":39},"name":"assert_return_func","qualname":"::ast::kw::assert_return_func","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7015},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130305,"byte_end":130316,"line_start":344,"line_end":344,"column_start":21,"column_end":32},"name":"assert_trap","qualname":"::ast::kw::assert_trap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7030},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130339,"byte_end":130356,"line_start":345,"line_end":345,"column_start":21,"column_end":38},"name":"assert_unlinkable","qualname":"::ast::kw::assert_unlinkable","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7045},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130379,"byte_end":130385,"line_start":346,"line_end":346,"column_start":21,"column_end":27},"name":"before","qualname":"::ast::kw::before","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7060},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130408,"byte_end":130414,"line_start":347,"line_end":347,"column_start":21,"column_end":27},"name":"binary","qualname":"::ast::kw::binary","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7075},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130437,"byte_end":130442,"line_start":348,"line_end":348,"column_start":21,"column_end":26},"name":"block","qualname":"::ast::kw::block","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7090},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130465,"byte_end":130470,"line_start":349,"line_end":349,"column_start":21,"column_end":26},"name":"catch","qualname":"::ast::kw::catch","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7105},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130493,"byte_end":130502,"line_start":350,"line_end":350,"column_start":21,"column_end":30},"name":"catch_all","qualname":"::ast::kw::catch_all","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7120},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130525,"byte_end":130529,"line_start":351,"line_end":351,"column_start":21,"column_end":25},"name":"code","qualname":"::ast::kw::code","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7135},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130552,"byte_end":130556,"line_start":352,"line_end":352,"column_start":21,"column_end":25},"name":"data","qualname":"::ast::kw::data","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7150},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130579,"byte_end":130586,"line_start":353,"line_end":353,"column_start":21,"column_end":28},"name":"dataref","qualname":"::ast::kw::dataref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7165},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130609,"byte_end":130616,"line_start":354,"line_end":354,"column_start":21,"column_end":28},"name":"declare","qualname":"::ast::kw::declare","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7180},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130639,"byte_end":130647,"line_start":355,"line_end":355,"column_start":21,"column_end":29},"name":"delegate","qualname":"::ast::kw::delegate","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7195},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130670,"byte_end":130674,"line_start":356,"line_end":356,"column_start":21,"column_end":25},"name":"r#do","qualname":"::ast::kw::r#do","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7210},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130704,"byte_end":130708,"line_start":357,"line_end":357,"column_start":21,"column_end":25},"name":"elem","qualname":"::ast::kw::elem","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7225},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130731,"byte_end":130734,"line_start":358,"line_end":358,"column_start":21,"column_end":24},"name":"end","qualname":"::ast::kw::end","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7240},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130757,"byte_end":130762,"line_start":359,"line_end":359,"column_start":21,"column_end":26},"name":"event","qualname":"::ast::kw::event","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7255},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130785,"byte_end":130791,"line_start":360,"line_end":360,"column_start":21,"column_end":27},"name":"export","qualname":"::ast::kw::export","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7270},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130814,"byte_end":130822,"line_start":361,"line_end":361,"column_start":21,"column_end":29},"name":"r#extern","qualname":"::ast::kw::r#extern","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7285},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130856,"byte_end":130865,"line_start":362,"line_end":362,"column_start":21,"column_end":30},"name":"externref","qualname":"::ast::kw::externref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7300},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130888,"byte_end":130890,"line_start":363,"line_end":363,"column_start":21,"column_end":23},"name":"eq","qualname":"::ast::kw::eq","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7315},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130913,"byte_end":130918,"line_start":364,"line_end":364,"column_start":21,"column_end":26},"name":"eqref","qualname":"::ast::kw::eqref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7330},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130941,"byte_end":130944,"line_start":365,"line_end":365,"column_start":21,"column_end":24},"name":"f32","qualname":"::ast::kw::f32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7345},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130967,"byte_end":130972,"line_start":366,"line_end":366,"column_start":21,"column_end":26},"name":"f32x4","qualname":"::ast::kw::f32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7360},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":130995,"byte_end":130998,"line_start":367,"line_end":367,"column_start":21,"column_end":24},"name":"f64","qualname":"::ast::kw::f64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7375},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131021,"byte_end":131026,"line_start":368,"line_end":368,"column_start":21,"column_end":26},"name":"f64x2","qualname":"::ast::kw::f64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7390},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131049,"byte_end":131054,"line_start":369,"line_end":369,"column_start":21,"column_end":26},"name":"field","qualname":"::ast::kw::field","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7405},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131077,"byte_end":131082,"line_start":370,"line_end":370,"column_start":21,"column_end":26},"name":"first","qualname":"::ast::kw::first","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7420},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131105,"byte_end":131109,"line_start":371,"line_end":371,"column_start":21,"column_end":25},"name":"func","qualname":"::ast::kw::func","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7435},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131132,"byte_end":131139,"line_start":372,"line_end":372,"column_start":21,"column_end":28},"name":"funcref","qualname":"::ast::kw::funcref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7450},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131162,"byte_end":131165,"line_start":373,"line_end":373,"column_start":21,"column_end":24},"name":"get","qualname":"::ast::kw::get","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7465},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131188,"byte_end":131194,"line_start":374,"line_end":374,"column_start":21,"column_end":27},"name":"global","qualname":"::ast::kw::global","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7480},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131217,"byte_end":131220,"line_start":375,"line_end":375,"column_start":21,"column_end":24},"name":"i16","qualname":"::ast::kw::i16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7495},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131243,"byte_end":131248,"line_start":376,"line_end":376,"column_start":21,"column_end":26},"name":"i16x8","qualname":"::ast::kw::i16x8","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7510},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131271,"byte_end":131274,"line_start":377,"line_end":377,"column_start":21,"column_end":24},"name":"i31","qualname":"::ast::kw::i31","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7525},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131297,"byte_end":131303,"line_start":378,"line_end":378,"column_start":21,"column_end":27},"name":"i31ref","qualname":"::ast::kw::i31ref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7540},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131326,"byte_end":131329,"line_start":379,"line_end":379,"column_start":21,"column_end":24},"name":"i32","qualname":"::ast::kw::i32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7555},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131352,"byte_end":131357,"line_start":380,"line_end":380,"column_start":21,"column_end":26},"name":"i32x4","qualname":"::ast::kw::i32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7570},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131380,"byte_end":131383,"line_start":381,"line_end":381,"column_start":21,"column_end":24},"name":"i64","qualname":"::ast::kw::i64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7585},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131406,"byte_end":131411,"line_start":382,"line_end":382,"column_start":21,"column_end":26},"name":"i64x2","qualname":"::ast::kw::i64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7600},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131434,"byte_end":131436,"line_start":383,"line_end":383,"column_start":21,"column_end":23},"name":"i8","qualname":"::ast::kw::i8","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7615},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131459,"byte_end":131464,"line_start":384,"line_end":384,"column_start":21,"column_end":26},"name":"i8x16","qualname":"::ast::kw::i8x16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7630},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131487,"byte_end":131493,"line_start":385,"line_end":385,"column_start":21,"column_end":27},"name":"import","qualname":"::ast::kw::import","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7645},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131516,"byte_end":131524,"line_start":386,"line_end":386,"column_start":21,"column_end":29},"name":"instance","qualname":"::ast::kw::instance","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7660},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131547,"byte_end":131558,"line_start":387,"line_end":387,"column_start":21,"column_end":32},"name":"instantiate","qualname":"::ast::kw::instantiate","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7675},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131581,"byte_end":131587,"line_start":388,"line_end":388,"column_start":21,"column_end":27},"name":"invoke","qualname":"::ast::kw::invoke","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7690},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131610,"byte_end":131614,"line_start":389,"line_end":389,"column_start":21,"column_end":25},"name":"item","qualname":"::ast::kw::item","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7705},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131637,"byte_end":131641,"line_start":390,"line_end":390,"column_start":21,"column_end":25},"name":"last","qualname":"::ast::kw::last","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7720},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131664,"byte_end":131669,"line_start":391,"line_end":391,"column_start":21,"column_end":26},"name":"local","qualname":"::ast::kw::local","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7735},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131692,"byte_end":131698,"line_start":392,"line_end":392,"column_start":21,"column_end":27},"name":"memory","qualname":"::ast::kw::memory","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7750},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131721,"byte_end":131727,"line_start":393,"line_end":393,"column_start":21,"column_end":27},"name":"module","qualname":"::ast::kw::module","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7765},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131750,"byte_end":131760,"line_start":394,"line_end":394,"column_start":21,"column_end":31},"name":"modulecode","qualname":"::ast::kw::modulecode","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7780},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131783,"byte_end":131797,"line_start":395,"line_end":395,"column_start":21,"column_end":35},"name":"nan_arithmetic","qualname":"::ast::kw::nan_arithmetic","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7795},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131839,"byte_end":131852,"line_start":396,"line_end":396,"column_start":21,"column_end":34},"name":"nan_canonical","qualname":"::ast::kw::nan_canonical","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7810},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131893,"byte_end":131897,"line_start":397,"line_end":397,"column_start":21,"column_end":25},"name":"null","qualname":"::ast::kw::null","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7825},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131920,"byte_end":131927,"line_start":398,"line_end":398,"column_start":21,"column_end":28},"name":"nullref","qualname":"::ast::kw::nullref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7840},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131950,"byte_end":131956,"line_start":399,"line_end":399,"column_start":21,"column_end":27},"name":"offset","qualname":"::ast::kw::offset","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7855},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":131979,"byte_end":131984,"line_start":400,"line_end":400,"column_start":21,"column_end":26},"name":"outer","qualname":"::ast::kw::outer","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7870},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132007,"byte_end":132012,"line_start":401,"line_end":401,"column_start":21,"column_end":26},"name":"param","qualname":"::ast::kw::param","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7885},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132035,"byte_end":132041,"line_start":402,"line_end":402,"column_start":21,"column_end":27},"name":"parent","qualname":"::ast::kw::parent","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7900},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132064,"byte_end":132071,"line_start":403,"line_end":403,"column_start":21,"column_end":28},"name":"passive","qualname":"::ast::kw::passive","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7915},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132094,"byte_end":132099,"line_start":404,"line_end":404,"column_start":21,"column_end":26},"name":"quote","qualname":"::ast::kw::quote","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7930},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132122,"byte_end":132128,"line_start":405,"line_end":405,"column_start":21,"column_end":27},"name":"r#else","qualname":"::ast::kw::r#else","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7945},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132160,"byte_end":132164,"line_start":406,"line_end":406,"column_start":21,"column_end":25},"name":"r#if","qualname":"::ast::kw::r#if","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7960},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132194,"byte_end":132200,"line_start":407,"line_end":407,"column_start":21,"column_end":27},"name":"r#loop","qualname":"::ast::kw::r#loop","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7975},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132232,"byte_end":132237,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"name":"r#mut","qualname":"::ast::kw::r#mut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7990},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132268,"byte_end":132274,"line_start":409,"line_end":409,"column_start":21,"column_end":27},"name":"r#type","qualname":"::ast::kw::r#type","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8005},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132306,"byte_end":132311,"line_start":410,"line_end":410,"column_start":21,"column_end":26},"name":"r#ref","qualname":"::ast::kw::r#ref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8020},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132342,"byte_end":132350,"line_start":411,"line_end":411,"column_start":21,"column_end":29},"name":"ref_func","qualname":"::ast::kw::ref_func","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8035},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132386,"byte_end":132394,"line_start":412,"line_end":412,"column_start":21,"column_end":29},"name":"ref_null","qualname":"::ast::kw::ref_null","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8050},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132430,"byte_end":132438,"line_start":413,"line_end":413,"column_start":21,"column_end":29},"name":"register","qualname":"::ast::kw::register","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8065},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132461,"byte_end":132467,"line_start":414,"line_end":414,"column_start":21,"column_end":27},"name":"result","qualname":"::ast::kw::result","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8080},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132490,"byte_end":132493,"line_start":415,"line_end":415,"column_start":21,"column_end":24},"name":"rtt","qualname":"::ast::kw::rtt","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8095},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132516,"byte_end":132522,"line_start":416,"line_end":416,"column_start":21,"column_end":27},"name":"shared","qualname":"::ast::kw::shared","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8110},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132545,"byte_end":132550,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"name":"start","qualname":"::ast::kw::start","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8125},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132573,"byte_end":132581,"line_start":418,"line_end":418,"column_start":21,"column_end":29},"name":"r#struct","qualname":"::ast::kw::r#struct","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8140},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132615,"byte_end":132620,"line_start":419,"line_end":419,"column_start":21,"column_end":26},"name":"table","qualname":"::ast::kw::table","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8155},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132643,"byte_end":132647,"line_start":420,"line_end":420,"column_start":21,"column_end":25},"name":"then","qualname":"::ast::kw::then","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8170},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132670,"byte_end":132675,"line_start":421,"line_end":421,"column_start":21,"column_end":26},"name":"r#try","qualname":"::ast::kw::r#try","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8185},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132706,"byte_end":132712,"line_start":422,"line_end":422,"column_start":21,"column_end":27},"name":"unwind","qualname":"::ast::kw::unwind","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8200},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132735,"byte_end":132739,"line_start":423,"line_end":423,"column_start":21,"column_end":25},"name":"v128","qualname":"::ast::kw::v128","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120783,"byte_end":120813,"line_start":46,"line_end":46,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":120822,"byte_end":120844,"line_start":47,"line_end":47,"column_start":9,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":488},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132814,"byte_end":132824,"line_start":427,"line_end":427,"column_start":9,"column_end":19},"name":"annotation","qualname":"::ast::annotation","value":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","parent":null,"children":[{"krate":0,"index":8215},{"krate":0,"index":8218},{"krate":0,"index":8208},{"krate":0,"index":8212},{"krate":0,"index":8227},{"krate":0,"index":8230},{"krate":0,"index":8220},{"krate":0,"index":8224}],"decl_id":null,"docs":" Common annotations used to parse WebAssembly text files.\n","sig":null,"attributes":[{"value":"/ Common annotations used to parse WebAssembly text files.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132745,"byte_end":132805,"line_start":426,"line_end":426,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":8215},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132843,"byte_end":132849,"line_start":428,"line_end":428,"column_start":17,"column_end":23},"name":"custom","qualname":"::ast::annotation::custom","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":127976,"byte_end":128006,"line_start":262,"line_end":262,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":128015,"byte_end":128037,"line_start":263,"line_end":263,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8227},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":132868,"byte_end":132872,"line_start":429,"line_end":429,"column_start":17,"column_end":21},"name":"name","qualname":"::ast::annotation::name","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":127976,"byte_end":128006,"line_start":262,"line_end":262,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/mod.rs","byte_start":128015,"byte_end":128037,"line_start":263,"line_end":263,"column_start":9,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":490},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lexer","qualname":"::lexer","value":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":8232},{"krate":0,"index":8236},{"krate":0,"index":8239},{"krate":0,"index":8274},{"krate":0,"index":8277},{"krate":0,"index":8279},{"krate":0,"index":8283},{"krate":0,"index":8315},{"krate":0,"index":8317},{"krate":0,"index":8319},{"krate":0,"index":8320},{"krate":0,"index":8323},{"krate":0,"index":8328},{"krate":0,"index":8330},{"krate":0,"index":8331},{"krate":0,"index":8333},{"krate":0,"index":8334},{"krate":0,"index":8336},{"krate":0,"index":8340},{"krate":0,"index":8343},{"krate":0,"index":8345},{"krate":0,"index":8349},{"krate":0,"index":8355},{"krate":0,"index":8358},{"krate":0,"index":8360},{"krate":0,"index":8364},{"krate":0,"index":8368},{"krate":0,"index":8371},{"krate":0,"index":8373},{"krate":0,"index":8377},{"krate":0,"index":8381},{"krate":0,"index":8384},{"krate":0,"index":8386},{"krate":0,"index":8390},{"krate":0,"index":8394},{"krate":0,"index":8397},{"krate":0,"index":8399},{"krate":0,"index":8403},{"krate":0,"index":8407},{"krate":0,"index":8410},{"krate":0,"index":8412},{"krate":0,"index":8416},{"krate":0,"index":8428},{"krate":0,"index":8431},{"krate":0,"index":8433},{"krate":0,"index":513},{"krate":0,"index":554},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":566},{"krate":0,"index":570},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"decl_id":null,"docs":" Definition of a lexer for the WebAssembly text format.","sig":null,"attributes":[{"value":"/ Definition of a lexer for the WebAssembly text format.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":132878,"byte_end":132936,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":132937,"byte_end":132940,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a [`Lexer`][] type which is an iterate over the raw","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":132941,"byte_end":133017,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ tokens of a WebAssembly text file. A [`Lexer`][] accounts for every single","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133018,"byte_end":133096,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ byte in a WebAssembly text field, returning tokens even for comments and","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133097,"byte_end":133173,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ whitespace. Typically you'll ignore comments and whitespace, however.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133174,"byte_end":133247,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133248,"byte_end":133251,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you'd like to iterate over the tokens in a file you can do so via:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133252,"byte_end":133325,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133326,"byte_end":133329,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133330,"byte_end":133337,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133338,"byte_end":133381,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/ use wast::lexer::Lexer;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133382,"byte_end":133409,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133410,"byte_end":133413,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let wat = \"(module (func $foo))\";","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133414,"byte_end":133451,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/ for token in Lexer::new(wat) {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133452,"byte_end":133486,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/     println!(\"{:?}\", token?);","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133487,"byte_end":133520,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133521,"byte_end":133526,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ # Ok(())","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133527,"byte_end":133539,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133540,"byte_end":133547,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133548,"byte_end":133555,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133556,"byte_end":133559,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that you'll typically not use this module but will rather use","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133560,"byte_end":133630,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ [`ParseBuffer`](crate::parser::ParseBuffer) instead.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133631,"byte_end":133687,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133688,"byte_end":133691,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`Lexer`]: crate::lexer::Lexer","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133692,"byte_end":133726,"line_start":25,"line_end":25,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8232},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134130,"byte_end":134135,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Lexer","qualname":"::lexer::Lexer","value":"Lexer {  }","parent":null,"children":[{"krate":0,"index":8234},{"krate":0,"index":8235}],"decl_id":null,"docs":" A structure used to lex the s-expression syntax of WAT files.","sig":null,"attributes":[{"value":"/ A structure used to lex the s-expression syntax of WAT files.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133835,"byte_end":133900,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133901,"byte_end":133904,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This structure is used to generate [`Source`] items, which should account for","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133905,"byte_end":133986,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ every single byte of the input as we iterate over it. A [`LexError`] is","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":133987,"byte_end":134062,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/ returned for any non-lexable text.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134063,"byte_end":134101,"line_start":38,"line_end":38,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8241},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134532,"byte_end":134543,"line_start":53,"line_end":53,"column_start":5,"column_end":16},"name":"LineComment","qualname":"::lexer::Token::LineComment","value":"Token::LineComment(&'a str)","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" A line comment, preceded with `;;`\n","sig":null,"attributes":[{"value":"/ A line comment, preceded with `;;`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134489,"byte_end":134527,"line_start":52,"line_end":52,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8244},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134652,"byte_end":134664,"line_start":57,"line_end":57,"column_start":5,"column_end":17},"name":"BlockComment","qualname":"::lexer::Token::BlockComment","value":"Token::BlockComment(&'a str)","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" A block comment, surrounded by `(;` and `;)`. Note that these can be\n nested.\n","sig":null,"attributes":[{"value":"/ A block comment, surrounded by `(;` and `;)`. Note that these can be","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134559,"byte_end":134631,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ nested.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134636,"byte_end":134647,"line_start":56,"line_end":56,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8247},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134737,"byte_end":134747,"line_start":60,"line_end":60,"column_start":5,"column_end":15},"name":"Whitespace","qualname":"::lexer::Token::Whitespace","value":"Token::Whitespace(&'a str)","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" A fragment of source that represents whitespace.\n","sig":null,"attributes":[{"value":"/ A fragment of source that represents whitespace.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134680,"byte_end":134732,"line_start":59,"line_end":59,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8250},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134842,"byte_end":134848,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"LParen","qualname":"::lexer::Token::LParen","value":"Token::LParen(&'a str)","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" A left-parenthesis, including the source text for where it comes from.\n","sig":null,"attributes":[{"value":"/ A left-parenthesis, including the source text for where it comes from.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134763,"byte_end":134837,"line_start":62,"line_end":62,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8253},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134943,"byte_end":134949,"line_start":65,"line_end":65,"column_start":5,"column_end":11},"name":"RParen","qualname":"::lexer::Token::RParen","value":"Token::RParen(&'a str)","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" A right-parenthesis, including the source text for where it comes from.\n","sig":null,"attributes":[{"value":"/ A right-parenthesis, including the source text for where it comes from.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134863,"byte_end":134938,"line_start":64,"line_end":64,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8256},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135026,"byte_end":135032,"line_start":68,"line_end":68,"column_start":5,"column_end":11},"name":"String","qualname":"::lexer::Token::String","value":"Token::String(WasmString)","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" A string literal, which is actually a list of bytes.\n","sig":null,"attributes":[{"value":"/ A string literal, which is actually a list of bytes.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134965,"byte_end":135021,"line_start":67,"line_end":67,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8259},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135197,"byte_end":135199,"line_start":74,"line_end":74,"column_start":5,"column_end":7},"name":"Id","qualname":"::lexer::Token::Id","value":"Token::Id(&'a str)","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" An identifier (like `$foo`).","sig":null,"attributes":[{"value":"/ An identifier (like `$foo`).","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135055,"byte_end":135087,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135092,"byte_end":135095,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ All identifiers start with `$` and the payload here is the original","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135100,"byte_end":135171,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ source text.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135176,"byte_end":135192,"line_start":73,"line_end":73,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8262},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135351,"byte_end":135358,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"Keyword","qualname":"::lexer::Token::Keyword","value":"Token::Keyword(&'a str)","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" A keyword, or something that starts with an alphabetic character.","sig":null,"attributes":[{"value":"/ A keyword, or something that starts with an alphabetic character.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135215,"byte_end":135284,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135289,"byte_end":135292,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The payload here is the original source text.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135297,"byte_end":135346,"line_start":78,"line_end":78,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8265},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135533,"byte_end":135541,"line_start":83,"line_end":83,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::lexer::Token::Reserved","value":"Token::Reserved(&'a str)","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" A reserved series of `idchar` symbols. Unknown what this is meant to be\n used for, you'll probably generate an error about an unexpected token.\n","sig":null,"attributes":[{"value":"/ A reserved series of `idchar` symbols. Unknown what this is meant to be","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135374,"byte_end":135449,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ used for, you'll probably generate an error about an unexpected token.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135454,"byte_end":135528,"line_start":82,"line_end":82,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8268},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135577,"byte_end":135584,"line_start":86,"line_end":86,"column_start":5,"column_end":12},"name":"Integer","qualname":"::lexer::Token::Integer","value":"Token::Integer(Integer)","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" An integer.\n","sig":null,"attributes":[{"value":"/ An integer.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135557,"byte_end":135572,"line_start":85,"line_end":85,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8271},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135621,"byte_end":135626,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"Float","qualname":"::lexer::Token::Float","value":"Token::Float(Float)","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":" A float.\n","sig":null,"attributes":[{"value":"/ A float.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135604,"byte_end":135616,"line_start":88,"line_end":88,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":8239},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134473,"byte_end":134478,"line_start":51,"line_end":51,"column_start":10,"column_end":15},"name":"Token","qualname":"::lexer::Token","value":"pub enum Token<'a> {\n    LineComment(&'a str),\n    BlockComment(&'a str),\n    Whitespace(&'a str),\n    LParen(&'a str),\n    RParen(&'a str),\n    String(WasmString),\n    Id(&'a str),\n    Keyword(&'a str),\n    Reserved(&'a str),\n    Integer(Integer),\n    Float(Float),\n}","parent":null,"children":[{"krate":0,"index":8241},{"krate":0,"index":8244},{"krate":0,"index":8247},{"krate":0,"index":8250},{"krate":0,"index":8253},{"krate":0,"index":8256},{"krate":0,"index":8259},{"krate":0,"index":8262},{"krate":0,"index":8265},{"krate":0,"index":8268},{"krate":0,"index":8271}],"decl_id":null,"docs":" A fragment of source lex'd from an input string.","sig":null,"attributes":[{"value":"/ A fragment of source lex'd from an input string.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134211,"byte_end":134263,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134264,"byte_end":134267,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This enumeration contains all kinds of fragments, including comments and","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134268,"byte_end":134344,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ whitespace. For most cases you'll probably ignore these and simply look at","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134345,"byte_end":134423,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ tokens.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":134424,"byte_end":134435,"line_start":49,"line_end":49,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8284},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136007,"byte_end":136027,"line_start":100,"line_end":100,"column_start":5,"column_end":25},"name":"DanglingBlockComment","qualname":"::lexer::LexError::DanglingBlockComment","value":"LexError::DanglingBlockComment","parent":{"krate":0,"index":8283},"children":[],"decl_id":null,"docs":" A dangling block comment was found with an unbalanced `(;` which was\n never terminated in the file.\n","sig":null,"attributes":[{"value":"/ A dangling block comment was found with an unbalanced `(;` which was","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135892,"byte_end":135964,"line_start":98,"line_end":98,"column_start":5,"column_end":77}},{"value":"/ never terminated in the file.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135969,"byte_end":136002,"line_start":99,"line_end":99,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8286},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136145,"byte_end":136155,"line_start":104,"line_end":104,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::lexer::LexError::Unexpected","value":"LexError::Unexpected(char)","parent":{"krate":0,"index":8283},"children":[],"decl_id":null,"docs":" An unexpected character was encountered when generally parsing and\n looking for something else.\n","sig":null,"attributes":[{"value":"/ An unexpected character was encountered when generally parsing and","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136034,"byte_end":136104,"line_start":102,"line_end":102,"column_start":5,"column_end":75}},{"value":"/ looking for something else.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136109,"byte_end":136140,"line_start":103,"line_end":103,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8289},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136225,"byte_end":136245,"line_start":107,"line_end":107,"column_start":5,"column_end":25},"name":"InvalidStringElement","qualname":"::lexer::LexError::InvalidStringElement","value":"LexError::InvalidStringElement(char)","parent":{"krate":0,"index":8283},"children":[],"decl_id":null,"docs":" An invalid `char` in a string literal was found.\n","sig":null,"attributes":[{"value":"/ An invalid `char` in a string literal was found.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136168,"byte_end":136220,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8292},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136361,"byte_end":136380,"line_start":111,"line_end":111,"column_start":5,"column_end":24},"name":"InvalidStringEscape","qualname":"::lexer::LexError::InvalidStringEscape","value":"LexError::InvalidStringEscape(char)","parent":{"krate":0,"index":8283},"children":[],"decl_id":null,"docs":" An invalid string escape letter was found (the thing after the `\\` in\n string literals)\n","sig":null,"attributes":[{"value":"/ An invalid string escape letter was found (the thing after the `\\` in","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136258,"byte_end":136331,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ string literals)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136336,"byte_end":136356,"line_start":110,"line_end":110,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8295},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136441,"byte_end":136456,"line_start":114,"line_end":114,"column_start":5,"column_end":20},"name":"InvalidHexDigit","qualname":"::lexer::LexError::InvalidHexDigit","value":"LexError::InvalidHexDigit(char)","parent":{"krate":0,"index":8283},"children":[],"decl_id":null,"docs":" An invalid hexadecimal digit was found.\n","sig":null,"attributes":[{"value":"/ An invalid hexadecimal digit was found.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136393,"byte_end":136436,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8298},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136513,"byte_end":136525,"line_start":117,"line_end":117,"column_start":5,"column_end":17},"name":"InvalidDigit","qualname":"::lexer::LexError::InvalidDigit","value":"LexError::InvalidDigit(char)","parent":{"krate":0,"index":8283},"children":[],"decl_id":null,"docs":" An invalid base-10 digit was found.\n","sig":null,"attributes":[{"value":"/ An invalid base-10 digit was found.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136469,"byte_end":136508,"line_start":116,"line_end":116,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":8301},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136659,"byte_end":136667,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"name":"Expected","qualname":"::lexer::LexError::Expected","value":"LexError::Expected { wanted, found }","parent":{"krate":0,"index":8283},"children":[],"decl_id":null,"docs":" Parsing expected `wanted` but ended up finding `found` instead where the\n two characters aren't the same.\n","sig":null,"attributes":[{"value":"/ Parsing expected `wanted` but ended up finding `found` instead where the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136538,"byte_end":136614,"line_start":119,"line_end":119,"column_start":5,"column_end":81}},{"value":"/ two characters aren't the same.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136619,"byte_end":136654,"line_start":120,"line_end":120,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8304},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136911,"byte_end":136924,"line_start":129,"line_end":129,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::lexer::LexError::UnexpectedEof","value":"LexError::UnexpectedEof","parent":{"krate":0,"index":8283},"children":[],"decl_id":null,"docs":" We needed to parse more but EOF (or end of the string) was encountered.\n","sig":null,"attributes":[{"value":"/ We needed to parse more but EOF (or end of the string) was encountered.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136831,"byte_end":136906,"line_start":128,"line_end":128,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8306},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137026,"byte_end":137038,"line_start":133,"line_end":133,"column_start":5,"column_end":17},"name":"NumberTooBig","qualname":"::lexer::LexError::NumberTooBig","value":"LexError::NumberTooBig","parent":{"krate":0,"index":8283},"children":[],"decl_id":null,"docs":" A number failed to parse because it was too big to fit within the target\n type.\n","sig":null,"attributes":[{"value":"/ A number failed to parse because it was too big to fit within the target","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":136931,"byte_end":137007,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137012,"byte_end":137021,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8308},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137183,"byte_end":137202,"line_start":137,"line_end":137,"column_start":5,"column_end":24},"name":"InvalidUnicodeValue","qualname":"::lexer::LexError::InvalidUnicodeValue","value":"LexError::InvalidUnicodeValue(u32)","parent":{"krate":0,"index":8283},"children":[],"decl_id":null,"docs":" An invalid unicode value was found in a `\\u{...}` escape in a string,\n only valid unicode scalars can be escaped that way.\n","sig":null,"attributes":[{"value":"/ An invalid unicode value was found in a `\\u{...}` escape in a string,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137045,"byte_end":137118,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ only valid unicode scalars can be escaped that way.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137123,"byte_end":137178,"line_start":136,"line_end":136,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8311},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137366,"byte_end":137380,"line_start":141,"line_end":141,"column_start":5,"column_end":19},"name":"LoneUnderscore","qualname":"::lexer::LexError::LoneUnderscore","value":"LexError::LoneUnderscore","parent":{"krate":0,"index":8283},"children":[],"decl_id":null,"docs":" A lone underscore was found when parsing a number, since underscores\n should always be preceded and succeeded with a digit of some form.\n","sig":null,"attributes":[{"value":"/ A lone underscore was found when parsing a number, since underscores","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137214,"byte_end":137286,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ should always be preceded and succeeded with a digit of some form.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137291,"byte_end":137361,"line_start":140,"line_end":140,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8313},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137406,"byte_end":137421,"line_start":144,"line_end":144,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::lexer::LexError::__Nonexhaustive","value":"LexError::__Nonexhaustive","parent":{"krate":0,"index":8283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8283},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135877,"byte_end":135885,"line_start":97,"line_end":97,"column_start":10,"column_end":18},"name":"LexError","qualname":"::lexer::LexError","value":"pub enum LexError {\n    DanglingBlockComment,\n    Unexpected(char),\n    InvalidStringElement(char),\n    InvalidStringEscape(char),\n    InvalidHexDigit(char),\n    InvalidDigit(char),\n    Expected {\n        wanted: char,\n        found: char,\n    },\n    UnexpectedEof,\n    NumberTooBig,\n    InvalidUnicodeValue(u32),\n    LoneUnderscore,\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":8284},{"krate":0,"index":8286},{"krate":0,"index":8289},{"krate":0,"index":8292},{"krate":0,"index":8295},{"krate":0,"index":8298},{"krate":0,"index":8301},{"krate":0,"index":8304},{"krate":0,"index":8306},{"krate":0,"index":8308},{"krate":0,"index":8311},{"krate":0,"index":8313}],"decl_id":null,"docs":" Errors that can be generated while lexing.","sig":null,"attributes":[{"value":"/ Errors that can be generated while lexing.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135642,"byte_end":135688,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135689,"byte_end":135692,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ All lexing errors have line/colum/position information as well as a","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135693,"byte_end":135764,"line_start":94,"line_end":94,"column_start":1,"column_end":72}},{"value":"/ `LexError` indicating what kind of error happened while lexing.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":135765,"byte_end":135832,"line_start":95,"line_end":95,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8324},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137549,"byte_end":137553,"line_start":151,"line_end":151,"column_start":5,"column_end":9},"name":"Plus","qualname":"::lexer::SignToken::Plus","value":"SignToken::Plus","parent":{"krate":0,"index":8323},"children":[],"decl_id":null,"docs":" Plus sign: \"+\",\n","sig":null,"attributes":[{"value":"/ Plus sign: \"+\",","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137525,"byte_end":137544,"line_start":150,"line_end":150,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8326},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137584,"byte_end":137589,"line_start":153,"line_end":153,"column_start":5,"column_end":10},"name":"Minus","qualname":"::lexer::SignToken::Minus","value":"SignToken::Minus","parent":{"krate":0,"index":8323},"children":[],"decl_id":null,"docs":" Minus sign: \"-\",\n","sig":null,"attributes":[{"value":"/ Minus sign: \"-\",","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137559,"byte_end":137579,"line_start":152,"line_end":152,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":8323},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137509,"byte_end":137518,"line_start":149,"line_end":149,"column_start":10,"column_end":19},"name":"SignToken","qualname":"::lexer::SignToken","value":"pub enum SignToken { Plus, Minus, }","parent":null,"children":[{"krate":0,"index":8324},{"krate":0,"index":8326}],"decl_id":null,"docs":" A sign token for an integer.\n","sig":null,"attributes":[{"value":"/ A sign token for an integer.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137426,"byte_end":137458,"line_start":147,"line_end":147,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":8336},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137738,"byte_end":137745,"line_start":160,"line_end":160,"column_start":12,"column_end":19},"name":"Integer","qualname":"::lexer::Integer","value":"","parent":null,"children":[],"decl_id":null,"docs":" A parsed integer, signed or unsigned.","sig":null,"attributes":[{"value":"/ A parsed integer, signed or unsigned.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137594,"byte_end":137635,"line_start":156,"line_end":156,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137636,"byte_end":137639,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Methods can be use to access the value of the integer.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137640,"byte_end":137698,"line_start":158,"line_end":158,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8364},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":138037,"byte_end":138042,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"Float","qualname":"::lexer::Float","value":"","parent":null,"children":[],"decl_id":null,"docs":" A parsed float.","sig":null,"attributes":[{"value":"/ A parsed float.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137917,"byte_end":137936,"line_start":170,"line_end":170,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137937,"byte_end":137940,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Methods can be use to access the value of the float.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":137941,"byte_end":137997,"line_start":172,"line_end":172,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":8390},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":138226,"byte_end":138236,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"WasmString","qualname":"::lexer::WasmString","value":"","parent":null,"children":[],"decl_id":null,"docs":" A parsed string.\n","sig":null,"attributes":[{"value":"/ A parsed string.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":138166,"byte_end":138186,"line_start":182,"line_end":182,"column_start":1,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":8418},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":138497,"byte_end":138500,"line_start":196,"line_end":196,"column_start":5,"column_end":8},"name":"Nan","qualname":"::lexer::FloatVal::Nan","value":"FloatVal::Nan { val, negative }","parent":{"krate":0,"index":8416},"children":[],"decl_id":null,"docs":" A float `NaN` representation\n","sig":null,"attributes":[{"value":"/ A float `NaN` representation","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":138460,"byte_end":138492,"line_start":195,"line_end":195,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":8421},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":138733,"byte_end":138736,"line_start":203,"line_end":203,"column_start":5,"column_end":8},"name":"Inf","qualname":"::lexer::FloatVal::Inf","value":"FloatVal::Inf { negative }","parent":{"krate":0,"index":8416},"children":[],"decl_id":null,"docs":" An float infinite representation,\n","sig":null,"attributes":[{"value":"/ An float infinite representation,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":138691,"byte_end":138728,"line_start":202,"line_end":202,"column_start":5,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":8423},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":138857,"byte_end":138860,"line_start":208,"line_end":208,"column_start":5,"column_end":8},"name":"Val","qualname":"::lexer::FloatVal::Val","value":"FloatVal::Val { hex, integral, decimal, exponent }","parent":{"krate":0,"index":8416},"children":[],"decl_id":null,"docs":" A parsed and separated floating point value\n","sig":null,"attributes":[{"value":"/ A parsed and separated floating point value","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":138805,"byte_end":138852,"line_start":207,"line_end":207,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":8416},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":138441,"byte_end":138449,"line_start":194,"line_end":194,"column_start":10,"column_end":18},"name":"FloatVal","qualname":"::lexer::FloatVal","value":"pub enum FloatVal<'a> {\n    Nan {\n        val: Option<u64>,\n        negative: bool,\n    },\n    Inf {\n        negative: bool,\n    },\n    Val {\n        hex: bool,\n        integral: Cow,\n        decimal: Option<Cow>,\n        exponent: Option<Cow>,\n    },\n}","parent":null,"children":[{"krate":0,"index":8418},{"krate":0,"index":8421},{"krate":0,"index":8423}],"decl_id":null,"docs":" Possible parsed float values\n","sig":null,"attributes":[{"value":"/ Possible parsed float values","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":138371,"byte_end":138403,"line_start":192,"line_end":192,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139448,"byte_end":139451,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"new","qualname":"<Lexer>::new","value":"pub fn new(&str) -> Lexer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lexer which will lex the `input` source string.\n","sig":null,"attributes":[{"value":"/ Creates a new lexer which will lex the `input` source string.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139371,"byte_end":139436,"line_start":223,"line_end":223,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139653,"byte_end":139658,"line_start":232,"line_end":232,"column_start":12,"column_end":17},"name":"input","qualname":"<Lexer>::input","value":"pub fn input(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source input that we're lexing.\n","sig":null,"attributes":[{"value":"/ Returns the original source input that we're lexing.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139585,"byte_end":139641,"line_start":231,"line_end":231,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139922,"byte_end":139927,"line_start":243,"line_end":243,"column_start":12,"column_end":17},"name":"parse","qualname":"<Lexer>::parse","value":"pub fn parse(&mut Self) -> Result<Option<Token>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Lexes the next token in the input.","sig":null,"attributes":[{"value":"/ Lexes the next token in the input.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139709,"byte_end":139747,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139752,"byte_end":139755,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Returns `Some` if a token is found or `None` if we're at EOF.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139760,"byte_end":139825,"line_start":238,"line_end":238,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139830,"byte_end":139833,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139838,"byte_end":139850,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139855,"byte_end":139858,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the input is malformed.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139863,"byte_end":139910,"line_start":242,"line_end":242,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":156012,"byte_end":156015,"line_start":708,"line_end":708,"column_start":12,"column_end":15},"name":"src","qualname":"<Token>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this token.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this token.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":155948,"byte_end":156000,"line_start":707,"line_end":707,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":156576,"byte_end":156580,"line_start":727,"line_end":727,"column_start":12,"column_end":16},"name":"sign","qualname":"<Integer>::sign","value":"pub fn sign(&Self) -> Option<SignToken>","parent":null,"children":[],"decl_id":null,"docs":" Returns the sign token for this integer.\n","sig":null,"attributes":[{"value":"/ Returns the sign token for this integer.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":156520,"byte_end":156564,"line_start":726,"line_end":726,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":156708,"byte_end":156711,"line_start":732,"line_end":732,"column_start":12,"column_end":15},"name":"src","qualname":"<Integer>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this integer.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this integer.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":156642,"byte_end":156696,"line_start":731,"line_end":731,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":156895,"byte_end":156898,"line_start":738,"line_end":738,"column_start":12,"column_end":15},"name":"val","qualname":"<Integer>::val","value":"pub fn val(&Self) -> (&str, u32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the value string that can be parsed for this integer, as well as\n the base that it should be parsed in\n","sig":null,"attributes":[{"value":"/ Returns the value string that can be parsed for this integer, as well as","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":156762,"byte_end":156838,"line_start":736,"line_end":736,"column_start":5,"column_end":81}},{"value":"/ the base that it should be parsed in","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":156843,"byte_end":156883,"line_start":737,"line_end":737,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":157079,"byte_end":157082,"line_start":745,"line_end":745,"column_start":12,"column_end":15},"name":"src","qualname":"<Float>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this integer.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this integer.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":157013,"byte_end":157067,"line_start":744,"line_end":744,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":157245,"byte_end":157248,"line_start":751,"line_end":751,"column_start":12,"column_end":15},"name":"val","qualname":"<Float>::val","value":"pub fn val(&Self) -> &FloatVal","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed value of this float with all of the components still\n listed as strings.\n","sig":null,"attributes":[{"value":"/ Returns a parsed value of this float with all of the components still","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":157133,"byte_end":157206,"line_start":749,"line_end":749,"column_start":5,"column_end":78}},{"value":"/ listed as strings.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":157211,"byte_end":157233,"line_start":750,"line_end":750,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":157399,"byte_end":157402,"line_start":758,"line_end":758,"column_start":12,"column_end":15},"name":"src","qualname":"<WasmString>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this string.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this string.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":157334,"byte_end":157387,"line_start":757,"line_end":757,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":157529,"byte_end":157532,"line_start":763,"line_end":763,"column_start":12,"column_end":15},"name":"val","qualname":"<WasmString>::val","value":"pub fn val(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed value, as a list of bytes, for this string.\n","sig":null,"attributes":[{"value":"/ Returns a parsed value, as a list of bytes, for this string.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":157453,"byte_end":157517,"line_start":762,"line_end":762,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":580},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":8437},{"krate":0,"index":8445},{"krate":0,"index":8446},{"krate":0,"index":8448},{"krate":0,"index":8450},{"krate":0,"index":8453},{"krate":0,"index":8455},{"krate":0,"index":636},{"krate":0,"index":8458},{"krate":0,"index":8462},{"krate":0,"index":8464},{"krate":0,"index":640},{"krate":0,"index":654},{"krate":0,"index":690},{"krate":0,"index":712},{"krate":0,"index":716}],"decl_id":null,"docs":" Traits for parsing the WebAssembly Text format","sig":null,"attributes":[{"value":"/ Traits for parsing the WebAssembly Text format","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168358,"byte_end":168408,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168409,"byte_end":168412,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the traits, abstractions, and utilities needed to","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168413,"byte_end":168487,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ define custom parsers for WebAssembly text format items. This module exposes","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168488,"byte_end":168568,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ a recursive descent parsing strategy and centers around the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168569,"byte_end":168632,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"/ [`Parse`](crate::parser::Parse) trait for defining new fragments of","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168633,"byte_end":168704,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ WebAssembly text syntax.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168705,"byte_end":168733,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168734,"byte_end":168737,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The top-level [`parse`](crate::parser::parse) function can be used to fully parse AST fragments:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168738,"byte_end":168838,"line_start":9,"line_end":9,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168839,"byte_end":168842,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168843,"byte_end":168850,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use wast::Wat;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168851,"byte_end":168869,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/ use wast::parser::{self, ParseBuffer};","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168870,"byte_end":168912,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168913,"byte_end":168916,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168917,"byte_end":168960,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/ let wat = \"(module (func))\";","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168961,"byte_end":168993,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/ let buf = ParseBuffer::new(wat)?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":168994,"byte_end":169031,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/ let module = parser::parse::<Wat>(&buf)?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169032,"byte_end":169077,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169078,"byte_end":169090,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169091,"byte_end":169098,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169099,"byte_end":169106,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169107,"byte_end":169110,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ and you can also define your own new syntax with the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169111,"byte_end":169167,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/ [`Parse`](crate::parser::Parse) trait:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169168,"byte_end":169210,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169211,"byte_end":169214,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169215,"byte_end":169222,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use wast::{kw, Import, Func};","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169223,"byte_end":169256,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/ use wast::parser::{Parser, Parse, Result};","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169257,"byte_end":169303,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169304,"byte_end":169307,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Fields of a WebAssembly which only allow imports and functions, and all","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169308,"byte_end":169386,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ // imports must come before all the functions","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169387,"byte_end":169436,"line_start":31,"line_end":31,"column_start":1,"column_end":50}},{"value":"/ struct OnlyImportsAndFunctions<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169437,"byte_end":169477,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/     imports: Vec<Import<'a>>,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169478,"byte_end":169511,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/     functions: Vec<Func<'a>>,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169512,"byte_end":169545,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169546,"byte_end":169551,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169552,"byte_end":169555,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Parse<'a> for OnlyImportsAndFunctions<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169556,"byte_end":169612,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169613,"byte_end":169667,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/         // While the second token is `import` (the first is `(`, so we care","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169668,"byte_end":169747,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/         // about the second) we parse an `ast::ModuleImport` inside of","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169748,"byte_end":169822,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/         // parentheses. The `parens` function here ensures that what we","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169823,"byte_end":169898,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/         // parse inside of it is surrounded by `(` and `)`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169899,"byte_end":169962,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/         let mut imports = Vec::new();","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":169963,"byte_end":170004,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/         while parser.peek2::<kw::import>() {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170005,"byte_end":170053,"line_start":44,"line_end":44,"column_start":1,"column_end":49}},{"value":"/             let import = parser.parens(|p| p.parse())?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170054,"byte_end":170113,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/             imports.push(import);","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170114,"byte_end":170151,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170152,"byte_end":170165,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170166,"byte_end":170169,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/         // Afterwards we assume everything else is a function. Note that","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170170,"byte_end":170246,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/         // `parse` here is a generic function and type inference figures out","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170247,"byte_end":170327,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/         // that we're parsing functions here and imports above.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170328,"byte_end":170395,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/         let mut functions = Vec::new();","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170396,"byte_end":170439,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170440,"byte_end":170478,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/             let func = parser.parens(|p| p.parse())?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170479,"byte_end":170536,"line_start":54,"line_end":54,"column_start":1,"column_end":58}},{"value":"/             functions.push(func);","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170537,"byte_end":170574,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170575,"byte_end":170588,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170589,"byte_end":170592,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/         Ok(OnlyImportsAndFunctions { imports, functions })","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170593,"byte_end":170655,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170656,"byte_end":170665,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170666,"byte_end":170671,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170672,"byte_end":170679,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170680,"byte_end":170683,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This module is heavily inspired by [`syn`](https://docs.rs/syn) so you can","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170684,"byte_end":170762,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ likely also draw inspiration from the excellent examples in the `syn` crate.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":170763,"byte_end":170843,"line_start":64,"line_end":64,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":617},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171891,"byte_end":171896,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::parse","value":"pub fn parse<'a, T: Parse>(&'a ParseBuffer) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" A top-level convenience parseing function that parss a `T` from `buf` and\n requires that all tokens in `buf` are consume.","sig":null,"attributes":[{"value":"/ A top-level convenience parseing function that parss a `T` from `buf` and","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171015,"byte_end":171092,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ requires that all tokens in `buf` are consume.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171093,"byte_end":171143,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171144,"byte_end":171147,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ This generic parsing function can be used to parse any `T` implementing the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171148,"byte_end":171227,"line_start":76,"line_end":76,"column_start":1,"column_end":80}},{"value":"/ [`Parse`] trait. It is not used from [`Parse`] trait implementations.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171228,"byte_end":171301,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171302,"byte_end":171305,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171306,"byte_end":171320,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171321,"byte_end":171324,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171325,"byte_end":171332,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ use wast::Wat;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171333,"byte_end":171351,"line_start":82,"line_end":82,"column_start":1,"column_end":19}},{"value":"/ use wast::parser::{self, ParseBuffer};","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171352,"byte_end":171394,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171395,"byte_end":171398,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171399,"byte_end":171442,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/ let wat = \"(module (func))\";","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171443,"byte_end":171475,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/ let buf = ParseBuffer::new(wat)?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171476,"byte_end":171513,"line_start":87,"line_end":87,"column_start":1,"column_end":38}},{"value":"/ let module = parser::parse::<Wat>(&buf)?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171514,"byte_end":171559,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171560,"byte_end":171572,"line_start":89,"line_end":89,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171573,"byte_end":171580,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171581,"byte_end":171588,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171589,"byte_end":171592,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ or parsing simply a fragment","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171593,"byte_end":171625,"line_start":93,"line_end":93,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171626,"byte_end":171629,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171630,"byte_end":171637,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ use wast::parser::{self, ParseBuffer};","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171638,"byte_end":171680,"line_start":96,"line_end":96,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171681,"byte_end":171684,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171685,"byte_end":171728,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/ let wat = \"12\";","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171729,"byte_end":171748,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/ let buf = ParseBuffer::new(wat)?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171749,"byte_end":171786,"line_start":100,"line_end":100,"column_start":1,"column_end":38}},{"value":"/ let val = parser::parse::<u32>(&buf)?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171787,"byte_end":171829,"line_start":101,"line_end":101,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(val, 12);","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171830,"byte_end":171854,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/ # Ok(())","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171855,"byte_end":171867,"line_start":103,"line_end":103,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171868,"byte_end":171875,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":171876,"byte_end":171883,"line_start":105,"line_end":105,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":620},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175897,"byte_end":175902,"line_start":208,"line_end":208,"column_start":11,"column_end":16},"name":"Parse","qualname":"::parser::Parse","value":"Parse<'a>: Sized","parent":null,"children":[{"krate":0,"index":622}],"decl_id":null,"docs":" A trait for parsing a fragment of syntax in a recursive descent fashion.","sig":null,"attributes":[{"value":"/ A trait for parsing a fragment of syntax in a recursive descent fashion.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172177,"byte_end":172253,"line_start":116,"line_end":116,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172254,"byte_end":172257,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The [`Parse`] trait is main abstraction you'll be working with when defining","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172258,"byte_end":172338,"line_start":118,"line_end":118,"column_start":1,"column_end":81}},{"value":"/ custom parser or custom syntax for your WebAssembly text format (or when","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172339,"byte_end":172415,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ using the official format items). Almost all items in the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172416,"byte_end":172477,"line_start":120,"line_end":120,"column_start":1,"column_end":62}},{"value":"/ [`ast`](crate::ast) module implement the [`Parse`] trait, and you'll","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172478,"byte_end":172550,"line_start":121,"line_end":121,"column_start":1,"column_end":73}},{"value":"/ commonly use this with:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172551,"byte_end":172578,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172579,"byte_end":172582,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ * The top-level [`parse`] function to parse an entire input.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172583,"byte_end":172647,"line_start":124,"line_end":124,"column_start":1,"column_end":65}},{"value":"/ * The intermediate [`Parser::parse`] function to parse an item out of an","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172648,"byte_end":172724,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"/   input stream and then parse remaining items.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172725,"byte_end":172775,"line_start":126,"line_end":126,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172776,"byte_end":172779,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Implementation of [`Parse`] take a [`Parser`] as input and will mutate the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172780,"byte_end":172858,"line_start":128,"line_end":128,"column_start":1,"column_end":79}},{"value":"/ parser as they parse syntax. Once a token is consume it cannot be","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172859,"byte_end":172928,"line_start":129,"line_end":129,"column_start":1,"column_end":70}},{"value":"/ \"un-consumed\". Utilities such as [`Parser::peek`] and [`Parser::lookahead1`]","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":172929,"byte_end":173009,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/ can be used to determine what to parse next.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173010,"byte_end":173058,"line_start":131,"line_end":131,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173059,"byte_end":173062,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ## When to parse `(` and `)`?","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173063,"byte_end":173096,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173097,"byte_end":173100,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Conventionally types are not responsible for parsing their own `(` and `)`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173101,"byte_end":173179,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ tokens which surround the type. For example WebAssembly imports look like:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173180,"byte_end":173258,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173259,"byte_end":173262,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173263,"byte_end":173274,"line_start":138,"line_end":138,"column_start":1,"column_end":12}},{"value":"/ (import \"foo\" \"bar\" (func (type 0)))","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173275,"byte_end":173315,"line_start":139,"line_end":139,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173316,"byte_end":173323,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173324,"byte_end":173327,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ but the [`Import`](crate::ast::Import) type parser looks like:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173328,"byte_end":173394,"line_start":142,"line_end":142,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173395,"byte_end":173398,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173399,"byte_end":173406,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # use wast::kw;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173407,"byte_end":173426,"line_start":145,"line_end":145,"column_start":1,"column_end":20}},{"value":"/ # use wast::parser::{Parser, Parse, Result};","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173427,"byte_end":173475,"line_start":146,"line_end":146,"column_start":1,"column_end":49}},{"value":"/ # struct Import<'a>(&'a str);","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173476,"byte_end":173509,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"/ impl<'a> Parse<'a> for Import<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173510,"byte_end":173549,"line_start":148,"line_end":148,"column_start":1,"column_end":40}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173550,"byte_end":173604,"line_start":149,"line_end":149,"column_start":1,"column_end":55}},{"value":"/         parser.parse::<kw::import>()?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173605,"byte_end":173647,"line_start":150,"line_end":150,"column_start":1,"column_end":43}},{"value":"/         // ...","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173648,"byte_end":173666,"line_start":151,"line_end":151,"column_start":1,"column_end":19}},{"value":"/ # panic!()","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173667,"byte_end":173681,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173682,"byte_end":173691,"line_start":153,"line_end":153,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173692,"byte_end":173697,"line_start":154,"line_end":154,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173698,"byte_end":173705,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173706,"byte_end":173709,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ It is assumed here that the `(` and `)` tokens which surround an `import`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173710,"byte_end":173787,"line_start":157,"line_end":157,"column_start":1,"column_end":78}},{"value":"/ statement in the WebAssembly text format are parsed by the parent item","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173788,"byte_end":173862,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ parsing `Import`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173863,"byte_end":173884,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173885,"byte_end":173888,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Note that this is just a convention, so it's not necessarily required for","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173889,"byte_end":173966,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ all types. It's recommended that your types stick to this convention where","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":173967,"byte_end":174045,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ possible to avoid nested calls to [`Parser::parens`] or accidentally trying","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174046,"byte_end":174125,"line_start":163,"line_end":163,"column_start":1,"column_end":80}},{"value":"/ to parse too many parenthesis.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174126,"byte_end":174160,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174161,"byte_end":174164,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174165,"byte_end":174179,"line_start":166,"line_end":166,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174180,"byte_end":174183,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Let's say you want to define your own WebAssembly text format which only","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174184,"byte_end":174260,"line_start":168,"line_end":168,"column_start":1,"column_end":77}},{"value":"/ contains imports and functions. You also require all imports to be listed","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174261,"byte_end":174338,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ before all functions. An example [`Parse`] implementation might look like:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174339,"byte_end":174417,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174418,"byte_end":174421,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174422,"byte_end":174429,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use wast::{Import, Func, kw};","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174430,"byte_end":174463,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/ use wast::parser::{Parser, Parse, Result};","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174464,"byte_end":174510,"line_start":174,"line_end":174,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174511,"byte_end":174514,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ // Fields of a WebAssembly which only allow imports and functions, and all","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174515,"byte_end":174593,"line_start":176,"line_end":176,"column_start":1,"column_end":79}},{"value":"/ // imports must come before all the functions","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174594,"byte_end":174643,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/ struct OnlyImportsAndFunctions<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174644,"byte_end":174684,"line_start":178,"line_end":178,"column_start":1,"column_end":41}},{"value":"/     imports: Vec<Import<'a>>,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174685,"byte_end":174718,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"/     functions: Vec<Func<'a>>,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174719,"byte_end":174752,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174753,"byte_end":174758,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174759,"byte_end":174762,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Parse<'a> for OnlyImportsAndFunctions<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174763,"byte_end":174819,"line_start":183,"line_end":183,"column_start":1,"column_end":57}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174820,"byte_end":174874,"line_start":184,"line_end":184,"column_start":1,"column_end":55}},{"value":"/         // While the second token is `import` (the first is `(`, so we care","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174875,"byte_end":174954,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/         // about the second) we parse an `ast::ModuleImport` inside of","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":174955,"byte_end":175029,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/         // parentheses. The `parens` function here ensures that what we","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175030,"byte_end":175105,"line_start":187,"line_end":187,"column_start":1,"column_end":76}},{"value":"/         // parse inside of it is surrounded by `(` and `)`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175106,"byte_end":175169,"line_start":188,"line_end":188,"column_start":1,"column_end":64}},{"value":"/         let mut imports = Vec::new();","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175170,"byte_end":175211,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/         while parser.peek2::<kw::import>() {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175212,"byte_end":175260,"line_start":190,"line_end":190,"column_start":1,"column_end":49}},{"value":"/             let import = parser.parens(|p| p.parse())?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175261,"byte_end":175320,"line_start":191,"line_end":191,"column_start":1,"column_end":60}},{"value":"/             imports.push(import);","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175321,"byte_end":175358,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175359,"byte_end":175372,"line_start":193,"line_end":193,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175373,"byte_end":175376,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/         // Afterwards we assume everything else is a function. Note that","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175377,"byte_end":175453,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/         // `parse` here is a generic function and type inference figures out","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175454,"byte_end":175534,"line_start":196,"line_end":196,"column_start":1,"column_end":81}},{"value":"/         // that we're parsing functions here and imports above.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175535,"byte_end":175602,"line_start":197,"line_end":197,"column_start":1,"column_end":68}},{"value":"/         let mut functions = Vec::new();","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175603,"byte_end":175646,"line_start":198,"line_end":198,"column_start":1,"column_end":44}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175647,"byte_end":175685,"line_start":199,"line_end":199,"column_start":1,"column_end":39}},{"value":"/             let func = parser.parens(|p| p.parse())?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175686,"byte_end":175743,"line_start":200,"line_end":200,"column_start":1,"column_end":58}},{"value":"/             functions.push(func);","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175744,"byte_end":175781,"line_start":201,"line_end":201,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175782,"byte_end":175795,"line_start":202,"line_end":202,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175796,"byte_end":175799,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/         Ok(OnlyImportsAndFunctions { imports, functions })","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175800,"byte_end":175862,"line_start":204,"line_end":204,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175863,"byte_end":175872,"line_start":205,"line_end":205,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175873,"byte_end":175878,"line_start":206,"line_end":206,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175879,"byte_end":175886,"line_start":207,"line_end":207,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176870,"byte_end":176875,"line_start":228,"line_end":228,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::Parse::parse","value":"pub fn parse(Parser) -> Result<Self>","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" Attempts to parse `Self` from `parser`, returning an error if it could\n not be parsed.","sig":null,"attributes":[{"value":"/ Attempts to parse `Self` from `parser`, returning an error if it could","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175920,"byte_end":175994,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ not be parsed.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175999,"byte_end":176017,"line_start":210,"line_end":210,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176022,"byte_end":176025,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This method will mutate the state of `parser` after attempting to parse","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176030,"byte_end":176105,"line_start":212,"line_end":212,"column_start":5,"column_end":80}},{"value":"/ an instance of `Self`. If an error happens then it is likely fatal and","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176110,"byte_end":176184,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ there is no guarantee of how many tokens have been consumed from","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176189,"byte_end":176257,"line_start":214,"line_end":214,"column_start":5,"column_end":73}},{"value":"/ `parser`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176262,"byte_end":176275,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176280,"byte_end":176283,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ As recommended in the documentation of [`Parse`], implementations of","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176288,"byte_end":176360,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ this function should not start out by parsing `(` and `)` tokens, but","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176365,"byte_end":176438,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ rather parents calling recursive parsers should parse the `(` and `)`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176443,"byte_end":176516,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ tokens for their child item that's being parsed.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176521,"byte_end":176573,"line_start":220,"line_end":220,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176578,"byte_end":176581,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176586,"byte_end":176598,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176603,"byte_end":176606,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if `Self` could not be parsed. Note","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176611,"byte_end":176685,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ that creating an [`Error`] is not exactly a cheap operation, so","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176690,"byte_end":176757,"line_start":225,"line_end":225,"column_start":5,"column_end":72}},{"value":"/ [`Error`] is typically fatal and propagated all the way back to the top","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176762,"byte_end":176837,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ parse call site.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176842,"byte_end":176862,"line_start":227,"line_end":227,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":623},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177633,"byte_end":177637,"line_start":245,"line_end":245,"column_start":11,"column_end":15},"name":"Peek","qualname":"::parser::Peek","value":"Peek","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"decl_id":null,"docs":" A trait for types which be used to \"peek\" to see if they're the next token\n in an input stream of [`Parser`].","sig":null,"attributes":[{"value":"/ A trait for types which be used to \"peek\" to see if they're the next token","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176916,"byte_end":176994,"line_start":231,"line_end":231,"column_start":1,"column_end":79}},{"value":"/ in an input stream of [`Parser`].","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":176995,"byte_end":177032,"line_start":232,"line_end":232,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177033,"byte_end":177036,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Often when implementing [`Parse`] you'll need to query what the next token","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177037,"byte_end":177115,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ in the stream is to figure out what to parse next. This [`Peek`] trait","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177116,"byte_end":177190,"line_start":235,"line_end":235,"column_start":1,"column_end":75}},{"value":"/ defines the set of types that can be tested whether they're the next token","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177191,"byte_end":177269,"line_start":236,"line_end":236,"column_start":1,"column_end":79}},{"value":"/ in the input stream.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177270,"byte_end":177294,"line_start":237,"line_end":237,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177295,"byte_end":177298,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ Implementations of [`Peek`] should only be present on types that consume","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177299,"byte_end":177375,"line_start":239,"line_end":239,"column_start":1,"column_end":77}},{"value":"/ exactly one token (not zero, not more, exactly one). Types implementing","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177376,"byte_end":177451,"line_start":240,"line_end":240,"column_start":1,"column_end":76}},{"value":"/ [`Peek`] should also typically implement [`Parse`] should also typically","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177452,"byte_end":177528,"line_start":241,"line_end":241,"column_start":1,"column_end":77}},{"value":"/ implement [`Parse`].","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177529,"byte_end":177553,"line_start":242,"line_end":242,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177554,"byte_end":177557,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ See the documentation of [`Parser::peek`] for example usage.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177558,"byte_end":177622,"line_start":244,"line_end":244,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177934,"byte_end":177938,"line_start":252,"line_end":252,"column_start":8,"column_end":12},"name":"peek","qualname":"::parser::Peek::peek","value":"pub fn peek(Cursor) -> bool","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Tests to see whether this token is the first token within the [`Cursor`]\n specified.","sig":null,"attributes":[{"value":"/ Tests to see whether this token is the first token within the [`Cursor`]","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177644,"byte_end":177720,"line_start":246,"line_end":246,"column_start":5,"column_end":81}},{"value":"/ specified.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177725,"byte_end":177739,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177744,"byte_end":177747,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if [`Parse`] for this type is highly likely to succeed","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177752,"byte_end":177825,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ failing no other error conditions happening (like an integer literal","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177830,"byte_end":177902,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ being too big).","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177907,"byte_end":177926,"line_start":251,"line_end":251,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178080,"byte_end":178085,"line_start":256,"line_end":256,"column_start":8,"column_end":13},"name":"peek2","qualname":"::parser::Peek::peek2","value":"pub fn peek2(Cursor) -> bool","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" The same as `peek`, except it checks the token immediately following\n the current token.\n","sig":null,"attributes":[{"value":"/ The same as `peek`, except it checks the token immediately following","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":177973,"byte_end":178045,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ the current token.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178050,"byte_end":178072,"line_start":255,"line_end":255,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178376,"byte_end":178383,"line_start":266,"line_end":266,"column_start":8,"column_end":15},"name":"display","qualname":"::parser::Peek::display","value":"pub fn display() -> &'static str","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Returns a human-readable name of this token to display when generating\n errors about this token missing.\n","sig":null,"attributes":[{"value":"/ Returns a human-readable name of this token to display when generating","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178253,"byte_end":178327,"line_start":264,"line_end":264,"column_start":5,"column_end":79}},{"value":"/ errors about this token missing.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178332,"byte_end":178368,"line_start":265,"line_end":265,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":627},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178509,"byte_end":178515,"line_start":271,"line_end":271,"column_start":10,"column_end":16},"name":"Result","qualname":"::parser::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A convenience type definition for `Result` where the error is hardwired to\n [`Error`].\n","sig":null,"attributes":[{"value":"/ A convenience type definition for `Result` where the error is hardwired to","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178406,"byte_end":178484,"line_start":269,"line_end":269,"column_start":1,"column_end":79}},{"value":"/ [`Error`].","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178485,"byte_end":178499,"line_start":270,"line_end":270,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":629},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178816,"byte_end":178827,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"ParseBuffer","qualname":"::parser::ParseBuffer","value":"ParseBuffer {  }","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635}],"decl_id":null,"docs":" A low-level buffer of tokens which represents a completely lexed file.","sig":null,"attributes":[{"value":"/ A low-level buffer of tokens which represents a completely lexed file.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178553,"byte_end":178627,"line_start":273,"line_end":273,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178628,"byte_end":178631,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ A `ParseBuffer` will immediately lex an entire file and then store all","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178632,"byte_end":178706,"line_start":275,"line_end":275,"column_start":1,"column_end":75}},{"value":"/ tokens internally. A `ParseBuffer` only used to pass to the top-level","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178707,"byte_end":178780,"line_start":276,"line_end":276,"column_start":1,"column_end":74}},{"value":"/ [`parse`] function.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":178781,"byte_end":178804,"line_start":277,"line_end":277,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8450},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":179877,"byte_end":179883,"line_start":308,"line_end":308,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":8452}],"decl_id":null,"docs":" An in-progress parser for the tokens of a WebAssembly text file.","sig":null,"attributes":[{"value":"/ An in-progress parser for the tokens of a WebAssembly text file.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":179440,"byte_end":179508,"line_start":299,"line_end":299,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":179509,"byte_end":179512,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ A `Parser` is argument to the [`Parse`] trait and is now the input stream is","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":179513,"byte_end":179593,"line_start":301,"line_end":301,"column_start":1,"column_end":81}},{"value":"/ interacted with to parse new items. Cloning [`Parser`] or copying a parser","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":179594,"byte_end":179672,"line_start":302,"line_end":302,"column_start":1,"column_end":79}},{"value":"/ refers to the same stream of tokens to parse, you cannot clone a [`Parser`]","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":179673,"byte_end":179752,"line_start":303,"line_end":303,"column_start":1,"column_end":80}},{"value":"/ and clone two items.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":179753,"byte_end":179777,"line_start":304,"line_end":304,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":179778,"byte_end":179781,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ For more information about a [`Parser`] see its methods.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":179782,"byte_end":179842,"line_start":306,"line_end":306,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":636},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180094,"byte_end":180104,"line_start":316,"line_end":316,"column_start":12,"column_end":22},"name":"Lookahead1","qualname":"::parser::Lookahead1","value":"Lookahead1 {  }","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639}],"decl_id":null,"docs":" A helpful structure to perform a lookahead of one token to determine what to\n parse.","sig":null,"attributes":[{"value":"/ A helpful structure to perform a lookahead of one token to determine what to","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":179923,"byte_end":180003,"line_start":312,"line_end":312,"column_start":1,"column_end":81}},{"value":"/ parse.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180004,"byte_end":180014,"line_start":313,"line_end":313,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180015,"byte_end":180018,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ For more information see the [`Parser::lookahead1`] method.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180019,"byte_end":180082,"line_start":315,"line_end":315,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":8458},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180487,"byte_end":180493,"line_start":327,"line_end":327,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::parser::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":8460},{"krate":0,"index":8461}],"decl_id":null,"docs":" An immutable cursor into a list of tokens.","sig":null,"attributes":[{"value":"/ An immutable cursor into a list of tokens.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180171,"byte_end":180217,"line_start":321,"line_end":321,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180218,"byte_end":180221,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ This cursor cannot be mutated but can be used to parse more tokens in a list","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180222,"byte_end":180302,"line_start":323,"line_end":323,"column_start":1,"column_end":81}},{"value":"/ of tokens. Cursors are created from the [`Parser::step`] method. This is a","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180303,"byte_end":180381,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/ very low-level parsing structure and you likely won't use it much.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180382,"byte_end":180452,"line_start":325,"line_end":325,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180738,"byte_end":180741,"line_start":338,"line_end":338,"column_start":12,"column_end":15},"name":"new","qualname":"<ParseBuffer>::new","value":"pub fn new(&str) -> Result<ParseBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`ParseBuffer`] by lexing the given `input` completely.","sig":null,"attributes":[{"value":"/ Creates a new [`ParseBuffer`] by lexing the given `input` completely.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180570,"byte_end":180643,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180648,"byte_end":180651,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180656,"byte_end":180668,"line_start":335,"line_end":335,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180673,"byte_end":180676,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Returns an error if `input` fails to lex.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180681,"byte_end":180726,"line_start":337,"line_end":337,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":184170,"byte_end":184178,"line_start":425,"line_end":425,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Parser>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are no more `Token` tokens to parse from this\n [`Parser`].","sig":null,"attributes":[{"value":"/ Returns whether there are no more `Token` tokens to parse from this","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":183716,"byte_end":183787,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/ [`Parser`].","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":183792,"byte_end":183807,"line_start":417,"line_end":417,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":183812,"byte_end":183815,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This indicates that either we've reached the end of the input, or we're","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":183820,"byte_end":183895,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ a sub-[`Parser`] inside of a parenthesized expression and we've hit the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":183900,"byte_end":183975,"line_start":420,"line_end":420,"column_start":5,"column_end":80}},{"value":"/ `)` token.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":183980,"byte_end":183994,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":183999,"byte_end":184002,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Note that if `false` is returned there *may* be more comments. Comments","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":184007,"byte_end":184082,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ and whitespace are not considered for whether this parser is empty.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":184087,"byte_end":184158,"line_start":424,"line_end":424,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186380,"byte_end":186385,"line_start":489,"line_end":489,"column_start":12,"column_end":17},"name":"parse","qualname":"<Parser>::parse","value":"pub fn parse<T: Parse>(Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses a `T` from this [`Parser`].","sig":null,"attributes":[{"value":"/ Parses a `T` from this [`Parser`].","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":184670,"byte_end":184708,"line_start":441,"line_end":441,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":184713,"byte_end":184716,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This method has a trivial definition (it simply calls","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":184721,"byte_end":184778,"line_start":443,"line_end":443,"column_start":5,"column_end":62}},{"value":"/ [`T::parse`](Parse::parse)) but is here for syntactic purposes. This is","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":184783,"byte_end":184858,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ what you'll call 99% of the time in a [`Parse`] implementation in order","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":184863,"byte_end":184938,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ to parse sub-items.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":184943,"byte_end":184966,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":184971,"byte_end":184974,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Typically you always want to use `?` with the result of this method, you","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":184979,"byte_end":185055,"line_start":448,"line_end":448,"column_start":5,"column_end":81}},{"value":"/ should not handle errors and decide what else to parse. To handle","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185060,"byte_end":185129,"line_start":449,"line_end":449,"column_start":5,"column_end":74}},{"value":"/ branches in parsing, use [`Parser::peek`].","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185134,"byte_end":185180,"line_start":450,"line_end":450,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185185,"byte_end":185188,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185193,"byte_end":185207,"line_start":452,"line_end":452,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185212,"byte_end":185215,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A good example of using `parse` is to see how the [`TableType`] type is","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185220,"byte_end":185295,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ parsed in this crate. A [`TableType`] is defined in the official","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185300,"byte_end":185368,"line_start":455,"line_end":455,"column_start":5,"column_end":73}},{"value":"/ specification as [`tabletype`][spec] and is defined as:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185373,"byte_end":185432,"line_start":456,"line_end":456,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185437,"byte_end":185440,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://webassembly.github.io/spec/core/text/types.html#table-types","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185445,"byte_end":185524,"line_start":458,"line_end":458,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185529,"byte_end":185532,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185537,"byte_end":185548,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ tabletype ::= lim:limits et:reftype","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185553,"byte_end":185592,"line_start":461,"line_end":461,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185597,"byte_end":185604,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185609,"byte_end":185612,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ so to parse a [`TableType`] we recursively need to parse a [`Limits`]","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185617,"byte_end":185690,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/ and a [`RefType`]","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185695,"byte_end":185716,"line_start":465,"line_end":465,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185721,"byte_end":185724,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185729,"byte_end":185736,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185741,"byte_end":185759,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185764,"byte_end":185790,"line_start":469,"line_end":469,"column_start":5,"column_end":31}},{"value":"/ struct TableType<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185795,"byte_end":185821,"line_start":470,"line_end":470,"column_start":5,"column_end":31}},{"value":"/     limits: Limits,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185826,"byte_end":185849,"line_start":471,"line_end":471,"column_start":5,"column_end":28}},{"value":"/     elem: RefType<'a>,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185854,"byte_end":185880,"line_start":472,"line_end":472,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185885,"byte_end":185890,"line_start":473,"line_end":473,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185895,"byte_end":185898,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for TableType<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185903,"byte_end":185945,"line_start":475,"line_end":475,"column_start":5,"column_end":47}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":185950,"byte_end":186004,"line_start":476,"line_end":476,"column_start":5,"column_end":59}},{"value":"/         // parse the `lim` then `et` in sequence","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186009,"byte_end":186061,"line_start":477,"line_end":477,"column_start":5,"column_end":57}},{"value":"/         Ok(TableType {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186066,"byte_end":186092,"line_start":478,"line_end":478,"column_start":5,"column_end":31}},{"value":"/             limits: parser.parse()?,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186097,"byte_end":186137,"line_start":479,"line_end":479,"column_start":5,"column_end":45}},{"value":"/             elem: parser.parse()?,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186142,"byte_end":186180,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/         })","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186185,"byte_end":186199,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186204,"byte_end":186213,"line_start":482,"line_end":482,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186218,"byte_end":186223,"line_start":483,"line_end":483,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186228,"byte_end":186235,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186240,"byte_end":186243,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ [`Limits`]: crate::ast::Limits","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186248,"byte_end":186282,"line_start":486,"line_end":486,"column_start":5,"column_end":39}},{"value":"/ [`TableType`]: crate::ast::TableType","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186287,"byte_end":186327,"line_start":487,"line_end":487,"column_start":5,"column_end":45}},{"value":"/ [`RefType`]: crate::ast::RefType","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186332,"byte_end":186368,"line_start":488,"line_end":488,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188323,"byte_end":188327,"line_start":546,"line_end":546,"column_start":12,"column_end":16},"name":"peek","qualname":"<Parser>::peek","value":"pub fn peek<T: Peek>(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Performs a cheap test to see whether the current token in this stream is\n `T`.","sig":null,"attributes":[{"value":"/ Performs a cheap test to see whether the current token in this stream is","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186455,"byte_end":186531,"line_start":493,"line_end":493,"column_start":5,"column_end":81}},{"value":"/ `T`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186536,"byte_end":186544,"line_start":494,"line_end":494,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186549,"byte_end":186552,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This method can be used to efficiently determine what next to parse. The","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186557,"byte_end":186633,"line_start":496,"line_end":496,"column_start":5,"column_end":81}},{"value":"/ [`Peek`] trait is defined for types which can be used to test if they're","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186638,"byte_end":186714,"line_start":497,"line_end":497,"column_start":5,"column_end":81}},{"value":"/ the next item in the input stream.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186719,"byte_end":186757,"line_start":498,"line_end":498,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186762,"byte_end":186765,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ Nothing is actually parsed in this method, nor does this mutate the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186770,"byte_end":186841,"line_start":500,"line_end":500,"column_start":5,"column_end":76}},{"value":"/ state of this [`Parser`]. Instead, this simply performs a check.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186846,"byte_end":186914,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186919,"byte_end":186922,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This method is frequently combined with the [`Parser::lookahead1`]","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":186927,"byte_end":186997,"line_start":503,"line_end":503,"column_start":5,"column_end":75}},{"value":"/ method to automatically produce nice error messages if some tokens","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187002,"byte_end":187072,"line_start":504,"line_end":504,"column_start":5,"column_end":75}},{"value":"/ aren't found.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187077,"byte_end":187094,"line_start":505,"line_end":505,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187099,"byte_end":187102,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187107,"byte_end":187121,"line_start":507,"line_end":507,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187126,"byte_end":187129,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ For an example of using the `peek` method let's take a look at parsing","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187134,"byte_end":187208,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"/ the [`Limits`] type. This is [defined in the official spec][spec] as:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187213,"byte_end":187286,"line_start":510,"line_end":510,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187291,"byte_end":187294,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187299,"byte_end":187310,"line_start":512,"line_end":512,"column_start":5,"column_end":16}},{"value":"/ limits ::= n:u32","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187315,"byte_end":187335,"line_start":513,"line_end":513,"column_start":5,"column_end":25}},{"value":"/          | n:u32 m:u32","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187340,"byte_end":187366,"line_start":514,"line_end":514,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187371,"byte_end":187378,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187383,"byte_end":187386,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ which means that it's either one `u32` token or two, so we need to know","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187391,"byte_end":187466,"line_start":517,"line_end":517,"column_start":5,"column_end":80}},{"value":"/ whether to consume two tokens or one:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187471,"byte_end":187512,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187517,"byte_end":187520,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187525,"byte_end":187532,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187537,"byte_end":187563,"line_start":521,"line_end":521,"column_start":5,"column_end":31}},{"value":"/ struct Limits {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187568,"byte_end":187587,"line_start":522,"line_end":522,"column_start":5,"column_end":24}},{"value":"/     min: u32,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187592,"byte_end":187609,"line_start":523,"line_end":523,"column_start":5,"column_end":22}},{"value":"/     max: Option<u32>,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187614,"byte_end":187639,"line_start":524,"line_end":524,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187644,"byte_end":187649,"line_start":525,"line_end":525,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187654,"byte_end":187657,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Limits {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187662,"byte_end":187697,"line_start":527,"line_end":527,"column_start":5,"column_end":40}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187702,"byte_end":187756,"line_start":528,"line_end":528,"column_start":5,"column_end":59}},{"value":"/         // Always parse the first number...","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187761,"byte_end":187808,"line_start":529,"line_end":529,"column_start":5,"column_end":52}},{"value":"/         let min = parser.parse()?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187813,"byte_end":187851,"line_start":530,"line_end":530,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187856,"byte_end":187859,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/         // ... and then test if there's a second number before parsing","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187864,"byte_end":187938,"line_start":532,"line_end":532,"column_start":5,"column_end":79}},{"value":"/         let max = if parser.peek::<u32>() {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187943,"byte_end":187990,"line_start":533,"line_end":533,"column_start":5,"column_end":52}},{"value":"/             Some(parser.parse()?)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":187995,"byte_end":188032,"line_start":534,"line_end":534,"column_start":5,"column_end":42}},{"value":"/         } else {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188037,"byte_end":188057,"line_start":535,"line_end":535,"column_start":5,"column_end":25}},{"value":"/             None","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188062,"byte_end":188082,"line_start":536,"line_end":536,"column_start":5,"column_end":25}},{"value":"/         };","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188087,"byte_end":188101,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188106,"byte_end":188109,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/         Ok(Limits { min, max })","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188114,"byte_end":188149,"line_start":539,"line_end":539,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188154,"byte_end":188163,"line_start":540,"line_end":540,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188168,"byte_end":188173,"line_start":541,"line_end":541,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188178,"byte_end":188185,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188190,"byte_end":188193,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://webassembly.github.io/spec/core/text/types.html#limits","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188198,"byte_end":188272,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ [`Limits`]: crate::ast::Limits","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188277,"byte_end":188311,"line_start":545,"line_end":545,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188508,"byte_end":188513,"line_start":552,"line_end":552,"column_start":12,"column_end":17},"name":"peek2","qualname":"<Parser>::peek2","value":"pub fn peek2<T: Peek>(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Same as the [`Parser::peek`] method, except checks the next token, not\n the current token.\n","sig":null,"attributes":[{"value":"/ Same as the [`Parser::peek`] method, except checks the next token, not","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188395,"byte_end":188469,"line_start":550,"line_end":550,"column_start":5,"column_end":79}},{"value":"/ the current token.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188474,"byte_end":188496,"line_start":551,"line_end":551,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190505,"byte_end":190515,"line_start":610,"line_end":610,"column_start":12,"column_end":22},"name":"lookahead1","qualname":"<Parser>::lookahead1","value":"pub fn lookahead1(Self) -> Lookahead1","parent":null,"children":[],"decl_id":null,"docs":" A helper structure to perform a sequence of `peek` operations and if\n they all fail produce a nice error message.","sig":null,"attributes":[{"value":"/ A helper structure to perform a sequence of `peek` operations and if","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188709,"byte_end":188781,"line_start":561,"line_end":561,"column_start":5,"column_end":77}},{"value":"/ they all fail produce a nice error message.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188786,"byte_end":188833,"line_start":562,"line_end":562,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188838,"byte_end":188841,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ This method purely exists for conveniently producing error messages and","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188846,"byte_end":188921,"line_start":564,"line_end":564,"column_start":5,"column_end":80}},{"value":"/ provides no functionality that [`Parser::peek`] doesn't already give.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":188926,"byte_end":188999,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ The [`Lookahead1`] structure has one main method [`Lookahead1::peek`],","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189004,"byte_end":189078,"line_start":566,"line_end":566,"column_start":5,"column_end":79}},{"value":"/ which is the same method as [`Parser::peek`]. The difference is that the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189083,"byte_end":189159,"line_start":567,"line_end":567,"column_start":5,"column_end":81}},{"value":"/ [`Lookahead1::error`] method needs no arguments.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189164,"byte_end":189216,"line_start":568,"line_end":568,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189221,"byte_end":189224,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189229,"byte_end":189243,"line_start":570,"line_end":570,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189248,"byte_end":189251,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ Let's look at the parsing of [`Index`]. This type is either a `u32` or","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189256,"byte_end":189330,"line_start":572,"line_end":572,"column_start":5,"column_end":79}},{"value":"/ an [`Id`] and is used in name resolution primarily. The [official","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189335,"byte_end":189404,"line_start":573,"line_end":573,"column_start":5,"column_end":74}},{"value":"/ grammar for an index][spec] is:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189409,"byte_end":189444,"line_start":574,"line_end":574,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189449,"byte_end":189452,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189457,"byte_end":189468,"line_start":576,"line_end":576,"column_start":5,"column_end":16}},{"value":"/ idx ::= x:u32","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189473,"byte_end":189490,"line_start":577,"line_end":577,"column_start":5,"column_end":22}},{"value":"/       | v:id","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189495,"byte_end":189511,"line_start":578,"line_end":578,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189516,"byte_end":189523,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189528,"byte_end":189531,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ Which is to say that an index is either a `u32` or an [`Id`]. When","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189536,"byte_end":189606,"line_start":581,"line_end":581,"column_start":5,"column_end":75}},{"value":"/ parsing an [`Index`] we can do:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189611,"byte_end":189646,"line_start":582,"line_end":582,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189651,"byte_end":189654,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189659,"byte_end":189666,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189671,"byte_end":189689,"line_start":585,"line_end":585,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189694,"byte_end":189720,"line_start":586,"line_end":586,"column_start":5,"column_end":31}},{"value":"/ enum Index<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189725,"byte_end":189745,"line_start":587,"line_end":587,"column_start":5,"column_end":25}},{"value":"/     Num(u32),","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189750,"byte_end":189767,"line_start":588,"line_end":588,"column_start":5,"column_end":22}},{"value":"/     Id(Id<'a>),","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189772,"byte_end":189791,"line_start":589,"line_end":589,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189796,"byte_end":189801,"line_start":590,"line_end":590,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189806,"byte_end":189809,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Index<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189814,"byte_end":189852,"line_start":592,"line_end":592,"column_start":5,"column_end":43}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189857,"byte_end":189911,"line_start":593,"line_end":593,"column_start":5,"column_end":59}},{"value":"/         let mut l = parser.lookahead1();","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189916,"byte_end":189960,"line_start":594,"line_end":594,"column_start":5,"column_end":49}},{"value":"/         if l.peek::<Id>() {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":189965,"byte_end":189996,"line_start":595,"line_end":595,"column_start":5,"column_end":36}},{"value":"/             Ok(Index::Id(parser.parse()?))","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190001,"byte_end":190047,"line_start":596,"line_end":596,"column_start":5,"column_end":51}},{"value":"/         } else if l.peek::<u32>() {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190052,"byte_end":190091,"line_start":597,"line_end":597,"column_start":5,"column_end":44}},{"value":"/             Ok(Index::Num(parser.parse()?))","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190096,"byte_end":190143,"line_start":598,"line_end":598,"column_start":5,"column_end":52}},{"value":"/         } else {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190148,"byte_end":190168,"line_start":599,"line_end":599,"column_start":5,"column_end":25}},{"value":"/             // produces error message of `expected identifier or u32`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190173,"byte_end":190246,"line_start":600,"line_end":600,"column_start":5,"column_end":78}},{"value":"/             Err(l.error())","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190251,"byte_end":190281,"line_start":601,"line_end":601,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190286,"byte_end":190299,"line_start":602,"line_end":602,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190304,"byte_end":190313,"line_start":603,"line_end":603,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190318,"byte_end":190323,"line_start":604,"line_end":604,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190328,"byte_end":190335,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190340,"byte_end":190343,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://webassembly.github.io/spec/core/text/modules.html#indices","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190348,"byte_end":190425,"line_start":607,"line_end":607,"column_start":5,"column_end":82}},{"value":"/ [`Index`]: crate::ast::Index","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190430,"byte_end":190462,"line_start":608,"line_end":608,"column_start":5,"column_end":37}},{"value":"/ [`Id`]: crate::ast::Id","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190467,"byte_end":190493,"line_start":609,"line_end":609,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":192474,"byte_end":192480,"line_start":660,"line_end":660,"column_start":12,"column_end":18},"name":"parens","qualname":"<Parser>::parens","value":"pub fn parens<T, impl FnOnce(Parser<'a>) -> Result<T>: FnOnce(Parser) ->\n              Result<T>>(Self, impl FnOnce(Parser<'a>) -> Result<T>)\n-> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse an item surrounded by parentheses.","sig":null,"attributes":[{"value":"/ Parse an item surrounded by parentheses.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190644,"byte_end":190688,"line_start":617,"line_end":617,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190693,"byte_end":190696,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ WebAssembly's text format is all based on s-expressions, so naturally","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190701,"byte_end":190774,"line_start":619,"line_end":619,"column_start":5,"column_end":78}},{"value":"/ you're going to want to parse a lot of parenthesized things! As noted in","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190779,"byte_end":190855,"line_start":620,"line_end":620,"column_start":5,"column_end":81}},{"value":"/ the documentation of [`Parse`] you typically don't parse your own","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190860,"byte_end":190929,"line_start":621,"line_end":621,"column_start":5,"column_end":74}},{"value":"/ surrounding `(` and `)` tokens, but the parser above you parsed them for","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":190934,"byte_end":191010,"line_start":622,"line_end":622,"column_start":5,"column_end":81}},{"value":"/ you. This is method method the parser above you uses.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191015,"byte_end":191072,"line_start":623,"line_end":623,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191077,"byte_end":191080,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ This method will parse a `(` token, and then call `f` on a sub-parser","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191085,"byte_end":191158,"line_start":625,"line_end":625,"column_start":5,"column_end":78}},{"value":"/ which when finished asserts that a `)` token is the next token. This","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191163,"byte_end":191235,"line_start":626,"line_end":626,"column_start":5,"column_end":77}},{"value":"/ requires that `f` consumes all tokens leading up to the paired `)`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191240,"byte_end":191311,"line_start":627,"line_end":627,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191316,"byte_end":191319,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Usage will often simply be `parser.parens(|p| p.parse())?` to","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191324,"byte_end":191389,"line_start":629,"line_end":629,"column_start":5,"column_end":70}},{"value":"/ automatically parse a type within parentheses, but you can, as always,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191394,"byte_end":191468,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/ go crazy and do whatever you'd like too.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191473,"byte_end":191517,"line_start":631,"line_end":631,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191522,"byte_end":191525,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191530,"byte_end":191544,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191549,"byte_end":191552,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ A good example of this is to see how a `Module` is parsed. This isn't","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191557,"byte_end":191630,"line_start":635,"line_end":635,"column_start":5,"column_end":78}},{"value":"/ the exact definition, but it's close enough!","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191635,"byte_end":191683,"line_start":636,"line_end":636,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191688,"byte_end":191691,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191696,"byte_end":191703,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191708,"byte_end":191726,"line_start":639,"line_end":639,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191731,"byte_end":191757,"line_start":640,"line_end":640,"column_start":5,"column_end":31}},{"value":"/ struct Module<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191762,"byte_end":191785,"line_start":641,"line_end":641,"column_start":5,"column_end":28}},{"value":"/     fields: Vec<ModuleField<'a>>,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191790,"byte_end":191827,"line_start":642,"line_end":642,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191832,"byte_end":191837,"line_start":643,"line_end":643,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191842,"byte_end":191845,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Module<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191850,"byte_end":191889,"line_start":645,"line_end":645,"column_start":5,"column_end":44}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191894,"byte_end":191948,"line_start":646,"line_end":646,"column_start":5,"column_end":59}},{"value":"/         // Modules start out with a `module` keyword","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":191953,"byte_end":192009,"line_start":647,"line_end":647,"column_start":5,"column_end":61}},{"value":"/         parser.parse::<kw::module>()?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":192014,"byte_end":192056,"line_start":648,"line_end":648,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":192061,"byte_end":192064,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/         // And then everything else is `(field ...)`, so while we've got","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":192069,"byte_end":192145,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/         // items left we continuously parse parenthesized items.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":192150,"byte_end":192218,"line_start":651,"line_end":651,"column_start":5,"column_end":73}},{"value":"/         let mut fields = Vec::new();","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":192223,"byte_end":192263,"line_start":652,"line_end":652,"column_start":5,"column_end":45}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":192268,"byte_end":192306,"line_start":653,"line_end":653,"column_start":5,"column_end":43}},{"value":"/             fields.push(parser.parens(|p| p.parse())?);","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":192311,"byte_end":192370,"line_start":654,"line_end":654,"column_start":5,"column_end":64}},{"value":"/         }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":192375,"byte_end":192388,"line_start":655,"line_end":655,"column_start":5,"column_end":18}},{"value":"/         Ok(Module { fields })","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":192393,"byte_end":192426,"line_start":656,"line_end":656,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":192431,"byte_end":192440,"line_start":657,"line_end":657,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":192445,"byte_end":192450,"line_start":658,"line_end":658,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":192455,"byte_end":192462,"line_start":659,"line_end":659,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":193523,"byte_end":193535,"line_start":687,"line_end":687,"column_start":12,"column_end":24},"name":"parens_depth","qualname":"<Parser>::parens_depth","value":"pub fn parens_depth(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the depth of nested parens we've parsed so far.","sig":null,"attributes":[{"value":"/ Return the depth of nested parens we've parsed so far.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":193329,"byte_end":193387,"line_start":683,"line_end":683,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":193392,"byte_end":193395,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This is a low-level method that is only useful for implementing","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":193400,"byte_end":193467,"line_start":685,"line_end":685,"column_start":5,"column_end":72}},{"value":"/ recursion limits in custom parsers.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":193472,"byte_end":193511,"line_start":686,"line_end":686,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":194048,"byte_end":194052,"line_start":704,"line_end":704,"column_start":12,"column_end":16},"name":"step","qualname":"<Parser>::step","value":"pub fn step<F, T>(Self, F) -> Result<T> where F: FnOnce(Cursor) ->\nResult<(T, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" A low-level parsing method you probably won't use.","sig":null,"attributes":[{"value":"/ A low-level parsing method you probably won't use.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":193727,"byte_end":193781,"line_start":698,"line_end":698,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":193786,"byte_end":193789,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This is used to implement parsing of the most primitive types in the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":193794,"byte_end":193866,"line_start":700,"line_end":700,"column_start":5,"column_end":77}},{"value":"/ [`ast`](crate::ast) module. You probably don't want to use this, but","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":193871,"byte_end":193943,"line_start":701,"line_end":701,"column_start":5,"column_end":77}},{"value":"/ probably want to use something like [`Parser::parse`] or","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":193948,"byte_end":194008,"line_start":702,"line_end":702,"column_start":5,"column_end":65}},{"value":"/ [`Parser::parens`].","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":194013,"byte_end":194036,"line_start":703,"line_end":703,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":194626,"byte_end":194631,"line_start":719,"line_end":719,"column_start":12,"column_end":17},"name":"error","qualname":"<Parser>::error","value":"pub fn error<impl fmt::Display: fmt::Display>(Self, impl fmt::Display)\n-> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error whose line/column information is pointing at the\n current token.","sig":null,"attributes":[{"value":"/ Creates an error whose line/column information is pointing at the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":194276,"byte_end":194345,"line_start":713,"line_end":713,"column_start":5,"column_end":74}},{"value":"/ current token.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":194350,"byte_end":194368,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":194373,"byte_end":194376,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ This is used to produce human-readable error messages which point to the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":194381,"byte_end":194457,"line_start":716,"line_end":716,"column_start":5,"column_end":81}},{"value":"/ right location in the input stream, and the `msg` here is arbitrary text","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":194462,"byte_end":194538,"line_start":717,"line_end":717,"column_start":5,"column_end":81}},{"value":"/ used to associate with the error and indicate why it was generated.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":194543,"byte_end":194614,"line_start":718,"line_end":718,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":194927,"byte_end":194935,"line_start":728,"line_end":728,"column_start":12,"column_end":20},"name":"cur_span","qualname":"<Parser>::cur_span","value":"pub fn cur_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of the current token\n","sig":null,"attributes":[{"value":"/ Returns the span of the current token","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":194874,"byte_end":194915,"line_start":727,"line_end":727,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195051,"byte_end":195060,"line_start":733,"line_end":733,"column_start":12,"column_end":21},"name":"prev_span","qualname":"<Parser>::prev_span","value":"pub fn prev_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of the previous token\n","sig":null,"attributes":[{"value":"/ Returns the span of the previous token","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":194997,"byte_end":195039,"line_start":732,"line_end":732,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200787,"byte_end":200806,"line_start":865,"line_end":865,"column_start":12,"column_end":31},"name":"register_annotation","qualname":"<Parser>::register_annotation","value":"pub fn register_annotation<'b>(Self, &'b str) -> /*impl Trait*/ where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Registers a new known annotation with this parser to allow parsing\n annotations with this name.","sig":null,"attributes":[{"value":"/ Registers a new known annotation with this parser to allow parsing","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195155,"byte_end":195225,"line_start":737,"line_end":737,"column_start":5,"column_end":75}},{"value":"/ annotations with this name.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195230,"byte_end":195261,"line_start":738,"line_end":738,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195266,"byte_end":195269,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ [WebAssembly annotations][annotation] are a proposal for the text format","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195274,"byte_end":195350,"line_start":740,"line_end":740,"column_start":5,"column_end":81}},{"value":"/ which allows decorating the text format with custom structured","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195355,"byte_end":195421,"line_start":741,"line_end":741,"column_start":5,"column_end":71}},{"value":"/ information. By default all annotations are ignored when parsing, but","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195426,"byte_end":195499,"line_start":742,"line_end":742,"column_start":5,"column_end":78}},{"value":"/ the whole purpose of them is to sometimes parse them!","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195504,"byte_end":195561,"line_start":743,"line_end":743,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195566,"byte_end":195569,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ To support parsing text annotations this method is used to allow","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195574,"byte_end":195642,"line_start":745,"line_end":745,"column_start":5,"column_end":73}},{"value":"/ annotations and their tokens to *not* be skipped. Once an annotation is","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195647,"byte_end":195722,"line_start":746,"line_end":746,"column_start":5,"column_end":80}},{"value":"/ registered with this method, then while the return value has not been","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195727,"byte_end":195800,"line_start":747,"line_end":747,"column_start":5,"column_end":78}},{"value":"/ dropped (e.g. the scope of where this function is called) annotations","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195805,"byte_end":195878,"line_start":748,"line_end":748,"column_start":5,"column_end":78}},{"value":"/ with the name `annotation` will be parse of the token stream and not","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195883,"byte_end":195955,"line_start":749,"line_end":749,"column_start":5,"column_end":77}},{"value":"/ implicitly skipped.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195960,"byte_end":195983,"line_start":750,"line_end":750,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195988,"byte_end":195991,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Skipping annotations","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":195996,"byte_end":196022,"line_start":752,"line_end":752,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196027,"byte_end":196030,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ The behavior of skipping unknown/unregistered annotations can be","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196035,"byte_end":196103,"line_start":754,"line_end":754,"column_start":5,"column_end":73}},{"value":"/ somewhat subtle and surprising, so if you're interested in parsing","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196108,"byte_end":196178,"line_start":755,"line_end":755,"column_start":5,"column_end":75}},{"value":"/ annotations it's important to point out the importance of this method","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196183,"byte_end":196256,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ and where to call it.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196261,"byte_end":196286,"line_start":757,"line_end":757,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196291,"byte_end":196294,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ Generally when parsing tokens you'll be bottoming out in various","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196299,"byte_end":196367,"line_start":759,"line_end":759,"column_start":5,"column_end":73}},{"value":"/ `Cursor` methods. These are all documented as advancing the stream as","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196372,"byte_end":196445,"line_start":760,"line_end":760,"column_start":5,"column_end":78}},{"value":"/ much as possible to the next token, skipping \"irrelevant stuff\" like","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196450,"byte_end":196522,"line_start":761,"line_end":761,"column_start":5,"column_end":77}},{"value":"/ comments, whitespace, etc. The `Cursor` methods will also skip unknown","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196527,"byte_end":196601,"line_start":762,"line_end":762,"column_start":5,"column_end":79}},{"value":"/ annotations. This means that if you parse *any* token, it will skip over","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196606,"byte_end":196682,"line_start":763,"line_end":763,"column_start":5,"column_end":81}},{"value":"/ any number of annotations that are unknown at all times.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196687,"byte_end":196747,"line_start":764,"line_end":764,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196752,"byte_end":196755,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ To parse an annotation you must, before parsing any token of the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196760,"byte_end":196828,"line_start":766,"line_end":766,"column_start":5,"column_end":73}},{"value":"/ annotation, register the annotation via this method. This includes the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196833,"byte_end":196907,"line_start":767,"line_end":767,"column_start":5,"column_end":79}},{"value":"/ beginning `(` token, which is otherwise skipped if the annotation isn't","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196912,"byte_end":196987,"line_start":768,"line_end":768,"column_start":5,"column_end":80}},{"value":"/ marked as registered. Typically parser parse the *contents* of an","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":196992,"byte_end":197061,"line_start":769,"line_end":769,"column_start":5,"column_end":74}},{"value":"/ s-expression, so this means that the outer parser of an s-expression","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197066,"byte_end":197138,"line_start":770,"line_end":770,"column_start":5,"column_end":77}},{"value":"/ must register the custom annotation name, rather than the inner parser.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197143,"byte_end":197218,"line_start":771,"line_end":771,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197223,"byte_end":197226,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197231,"byte_end":197243,"line_start":773,"line_end":773,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197248,"byte_end":197251,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ This function returns an RAII guard which, when dropped, will unregister","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197256,"byte_end":197332,"line_start":775,"line_end":775,"column_start":5,"column_end":81}},{"value":"/ the `annotation` given. Parsing `annotation` is only supported while the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197337,"byte_end":197413,"line_start":776,"line_end":776,"column_start":5,"column_end":81}},{"value":"/ returned value is still alive, and once dropped the parser will go back","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197418,"byte_end":197493,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ to skipping annotations with the name `annotation`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197498,"byte_end":197553,"line_start":778,"line_end":778,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197558,"byte_end":197561,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197566,"byte_end":197579,"line_start":780,"line_end":780,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197584,"byte_end":197587,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Let's see an example of how the `@name` annotation is parsed for modules","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197592,"byte_end":197668,"line_start":782,"line_end":782,"column_start":5,"column_end":81}},{"value":"/ to get an idea of how this works:","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197673,"byte_end":197710,"line_start":783,"line_end":783,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197715,"byte_end":197718,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197723,"byte_end":197730,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197735,"byte_end":197753,"line_start":786,"line_end":786,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197758,"byte_end":197784,"line_start":787,"line_end":787,"column_start":5,"column_end":31}},{"value":"/ struct Module<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197789,"byte_end":197812,"line_start":788,"line_end":788,"column_start":5,"column_end":28}},{"value":"/     name: Option<NameAnnotation<'a>>,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197817,"byte_end":197858,"line_start":789,"line_end":789,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197863,"byte_end":197868,"line_start":790,"line_end":790,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197873,"byte_end":197876,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Module<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197881,"byte_end":197920,"line_start":792,"line_end":792,"column_start":5,"column_end":44}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197925,"byte_end":197979,"line_start":793,"line_end":793,"column_start":5,"column_end":59}},{"value":"/         // Modules start out with a `module` keyword","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":197984,"byte_end":198040,"line_start":794,"line_end":794,"column_start":5,"column_end":61}},{"value":"/         parser.parse::<kw::module>()?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198045,"byte_end":198087,"line_start":795,"line_end":795,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198092,"byte_end":198095,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/         // Next may be `(@name \"foo\")`. Typically this annotation would","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198100,"byte_end":198175,"line_start":797,"line_end":797,"column_start":5,"column_end":80}},{"value":"/         // skipped, but we don't want it skipped, so we register it.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198180,"byte_end":198252,"line_start":798,"line_end":798,"column_start":5,"column_end":77}},{"value":"/         // Note that the parse implementation of","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198257,"byte_end":198309,"line_start":799,"line_end":799,"column_start":5,"column_end":57}},{"value":"/         // `Option<NameAnnotation>` is the one that consumes the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198314,"byte_end":198382,"line_start":800,"line_end":800,"column_start":5,"column_end":73}},{"value":"/         // parentheses here.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198387,"byte_end":198419,"line_start":801,"line_end":801,"column_start":5,"column_end":37}},{"value":"/         let _r = parser.register_annotation(\"name\");","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198424,"byte_end":198480,"line_start":802,"line_end":802,"column_start":5,"column_end":61}},{"value":"/         let name = parser.parse()?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198485,"byte_end":198524,"line_start":803,"line_end":803,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198529,"byte_end":198532,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/         // ... and normally you'd otherwise parse module fields here ...","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198537,"byte_end":198613,"line_start":805,"line_end":805,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198618,"byte_end":198621,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/         Ok(Module { name })","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198626,"byte_end":198657,"line_start":807,"line_end":807,"column_start":5,"column_end":36}},{"value":"/     }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198662,"byte_end":198671,"line_start":808,"line_end":808,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198676,"byte_end":198681,"line_start":809,"line_end":809,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198686,"byte_end":198693,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198698,"byte_end":198701,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ Another example is how we parse the `@custom` annotation. Note that this","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198706,"byte_end":198782,"line_start":812,"line_end":812,"column_start":5,"column_end":81}},{"value":"/ is parsed as part of `ModuleField`, so note how the annotation is","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198787,"byte_end":198856,"line_start":813,"line_end":813,"column_start":5,"column_end":74}},{"value":"/ registered *before* we parse the parentheses of the annotation.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198861,"byte_end":198928,"line_start":814,"line_end":814,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198933,"byte_end":198936,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198941,"byte_end":198948,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198953,"byte_end":198971,"line_start":817,"line_end":817,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":198976,"byte_end":199002,"line_start":818,"line_end":818,"column_start":5,"column_end":31}},{"value":"/ struct Module<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199007,"byte_end":199030,"line_start":819,"line_end":819,"column_start":5,"column_end":28}},{"value":"/     fields: Vec<ModuleField<'a>>,","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199035,"byte_end":199072,"line_start":820,"line_end":820,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199077,"byte_end":199082,"line_start":821,"line_end":821,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199087,"byte_end":199090,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Module<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199095,"byte_end":199134,"line_start":823,"line_end":823,"column_start":5,"column_end":44}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199139,"byte_end":199193,"line_start":824,"line_end":824,"column_start":5,"column_end":59}},{"value":"/         // Modules start out with a `module` keyword","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199198,"byte_end":199254,"line_start":825,"line_end":825,"column_start":5,"column_end":61}},{"value":"/         parser.parse::<kw::module>()?;","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199259,"byte_end":199301,"line_start":826,"line_end":826,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199306,"byte_end":199309,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/         // register the `@custom` annotation *first* before we start","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199314,"byte_end":199386,"line_start":828,"line_end":828,"column_start":5,"column_end":77}},{"value":"/         // parsing fields, because each field is contained in","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199391,"byte_end":199456,"line_start":829,"line_end":829,"column_start":5,"column_end":70}},{"value":"/         // parentheses and to parse the parentheses of an annotation we","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199461,"byte_end":199536,"line_start":830,"line_end":830,"column_start":5,"column_end":80}},{"value":"/         // have to known to not skip it.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199541,"byte_end":199585,"line_start":831,"line_end":831,"column_start":5,"column_end":49}},{"value":"/         let _r = parser.register_annotation(\"custom\");","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199590,"byte_end":199648,"line_start":832,"line_end":832,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199653,"byte_end":199656,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/         let mut fields = Vec::new();","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199661,"byte_end":199701,"line_start":834,"line_end":834,"column_start":5,"column_end":45}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199706,"byte_end":199744,"line_start":835,"line_end":835,"column_start":5,"column_end":43}},{"value":"/             fields.push(parser.parens(|p| p.parse())?);","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199749,"byte_end":199808,"line_start":836,"line_end":836,"column_start":5,"column_end":64}},{"value":"/         }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199813,"byte_end":199826,"line_start":837,"line_end":837,"column_start":5,"column_end":18}},{"value":"/         Ok(Module { fields })","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199831,"byte_end":199864,"line_start":838,"line_end":838,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199869,"byte_end":199878,"line_start":839,"line_end":839,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199883,"byte_end":199888,"line_start":840,"line_end":840,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199893,"byte_end":199896,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ enum ModuleField<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199901,"byte_end":199927,"line_start":842,"line_end":842,"column_start":5,"column_end":31}},{"value":"/     Custom(Custom<'a>),","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199932,"byte_end":199959,"line_start":843,"line_end":843,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199964,"byte_end":199978,"line_start":844,"line_end":844,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199983,"byte_end":199988,"line_start":845,"line_end":845,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":199993,"byte_end":199996,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for ModuleField<'a> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200001,"byte_end":200045,"line_start":847,"line_end":847,"column_start":5,"column_end":49}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200050,"byte_end":200104,"line_start":848,"line_end":848,"column_start":5,"column_end":59}},{"value":"/         // Note that because we have previously registered the `@custom`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200109,"byte_end":200185,"line_start":849,"line_end":849,"column_start":5,"column_end":81}},{"value":"/         // annotation with the parser we known that `peek` methods like","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200190,"byte_end":200265,"line_start":850,"line_end":850,"column_start":5,"column_end":80}},{"value":"/         // this, working on the annotation token, are enabled to ever","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200270,"byte_end":200343,"line_start":851,"line_end":851,"column_start":5,"column_end":78}},{"value":"/         // return `true`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200348,"byte_end":200377,"line_start":852,"line_end":852,"column_start":5,"column_end":34}},{"value":"/         if parser.peek::<annotation::custom>() {","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200382,"byte_end":200434,"line_start":853,"line_end":853,"column_start":5,"column_end":57}},{"value":"/             return Ok(ModuleField::Custom(parser.parse()?));","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200439,"byte_end":200503,"line_start":854,"line_end":854,"column_start":5,"column_end":69}},{"value":"/         }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200508,"byte_end":200521,"line_start":855,"line_end":855,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200526,"byte_end":200529,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/         // .. typically we'd parse other module fields here...","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200534,"byte_end":200600,"line_start":857,"line_end":857,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200605,"byte_end":200608,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/         Err(parser.error(\"unknown module field\"))","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200613,"byte_end":200666,"line_start":859,"line_end":859,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200671,"byte_end":200680,"line_start":860,"line_end":860,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200685,"byte_end":200690,"line_start":861,"line_end":861,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200695,"byte_end":200702,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200707,"byte_end":200710,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ [annotation]: https://github.com/WebAssembly/annotations","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":200715,"byte_end":200775,"line_start":864,"line_end":864,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":201672,"byte_end":201680,"line_start":893,"line_end":893,"column_start":12,"column_end":20},"name":"cur_span","qualname":"<Cursor>::cur_span","value":"pub fn cur_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of the next `Token` token.","sig":null,"attributes":[{"value":"/ Returns the span of the next `Token` token.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":201546,"byte_end":201593,"line_start":890,"line_end":890,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":201598,"byte_end":201601,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ Does not take into account whitespace or comments.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":201606,"byte_end":201660,"line_start":892,"line_end":892,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":202375,"byte_end":202380,"line_start":913,"line_end":913,"column_start":12,"column_end":17},"name":"error","qualname":"<Cursor>::error","value":"pub fn error<impl fmt::Display: fmt::Display>(&Self, impl fmt::Display)\n-> Error","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Parser::error`], but works with the current token in this\n [`Cursor`] instead.\n","sig":null,"attributes":[{"value":"/ Same as [`Parser::error`], but works with the current token in this","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":202264,"byte_end":202335,"line_start":911,"line_end":911,"column_start":5,"column_end":76}},{"value":"/ [`Cursor`] instead.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":202340,"byte_end":202363,"line_start":912,"line_end":912,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":202835,"byte_end":202841,"line_start":924,"line_end":924,"column_start":12,"column_end":18},"name":"lparen","qualname":"<Cursor>::lparen","value":"pub fn lparen(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a `(`.","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a `(`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":202486,"byte_end":202552,"line_start":917,"line_end":917,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":202557,"byte_end":202560,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ If the current token is `(`, returns a new [`Cursor`] pointing at the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":202565,"byte_end":202638,"line_start":919,"line_end":919,"column_start":5,"column_end":78}},{"value":"/ rest of the tokens in the stream. Otherwise returns `None`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":202643,"byte_end":202706,"line_start":920,"line_end":920,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":202711,"byte_end":202714,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":202719,"byte_end":202794,"line_start":922,"line_end":922,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":202799,"byte_end":202823,"line_start":923,"line_end":923,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203345,"byte_end":203351,"line_start":938,"line_end":938,"column_start":12,"column_end":18},"name":"rparen","qualname":"<Cursor>::rparen","value":"pub fn rparen(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a `)`.","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a `)`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":202996,"byte_end":203062,"line_start":931,"line_end":931,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203067,"byte_end":203070,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ If the current token is `)`, returns a new [`Cursor`] pointing at the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203075,"byte_end":203148,"line_start":933,"line_end":933,"column_start":5,"column_end":78}},{"value":"/ rest of the tokens in the stream. Otherwise returns `None`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203153,"byte_end":203216,"line_start":934,"line_end":934,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203221,"byte_end":203224,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203229,"byte_end":203304,"line_start":936,"line_end":936,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203309,"byte_end":203333,"line_start":937,"line_end":937,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203960,"byte_end":203962,"line_start":954,"line_end":954,"column_start":12,"column_end":14},"name":"id","qualname":"<Cursor>::id","value":"pub fn id(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Id`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203506,"byte_end":203567,"line_start":945,"line_end":945,"column_start":5,"column_end":66}},{"value":"/ [`Token::Id`](crate::lexer::Token)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203572,"byte_end":203610,"line_start":946,"line_end":946,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203615,"byte_end":203618,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Id`, returns the identifier minus the leading","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203623,"byte_end":203697,"line_start":948,"line_end":948,"column_start":5,"column_end":79}},{"value":"/ `$` character as well as a new [`Cursor`] pointing at the rest of the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203702,"byte_end":203775,"line_start":949,"line_end":949,"column_start":5,"column_end":78}},{"value":"/ tokens in the stream. Otherwise returns `None`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203780,"byte_end":203831,"line_start":950,"line_end":950,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203836,"byte_end":203839,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203844,"byte_end":203919,"line_start":952,"line_end":952,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":203924,"byte_end":203948,"line_start":953,"line_end":953,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204566,"byte_end":204573,"line_start":970,"line_end":970,"column_start":12,"column_end":19},"name":"keyword","qualname":"<Cursor>::keyword","value":"pub fn keyword(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Keyword`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204137,"byte_end":204198,"line_start":961,"line_end":961,"column_start":5,"column_end":66}},{"value":"/ [`Token::Keyword`](crate::lexer::Token)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204203,"byte_end":204246,"line_start":962,"line_end":962,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204251,"byte_end":204254,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Keyword`, returns the keyword as well as a new","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204259,"byte_end":204334,"line_start":964,"line_end":964,"column_start":5,"column_end":80}},{"value":"/ [`Cursor`] pointing at the rest of the tokens in the stream. Otherwise","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204339,"byte_end":204413,"line_start":965,"line_end":965,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204418,"byte_end":204437,"line_start":966,"line_end":966,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204442,"byte_end":204445,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204450,"byte_end":204525,"line_start":968,"line_end":968,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204530,"byte_end":204554,"line_start":969,"line_end":969,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205185,"byte_end":205193,"line_start":986,"line_end":986,"column_start":12,"column_end":20},"name":"reserved","qualname":"<Cursor>::reserved","value":"pub fn reserved(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Reserved`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204747,"byte_end":204808,"line_start":977,"line_end":977,"column_start":5,"column_end":66}},{"value":"/ [`Token::Reserved`](crate::lexer::Token)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204813,"byte_end":204857,"line_start":978,"line_end":978,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204862,"byte_end":204865,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Reserved`, returns the reserved token as well","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204870,"byte_end":204944,"line_start":980,"line_end":980,"column_start":5,"column_end":79}},{"value":"/ as a new [`Cursor`] pointing at the rest of the tokens in the stream.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":204949,"byte_end":205022,"line_start":981,"line_end":981,"column_start":5,"column_end":78}},{"value":"/ Otherwise returns `None`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205027,"byte_end":205056,"line_start":982,"line_end":982,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205061,"byte_end":205064,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205069,"byte_end":205144,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205149,"byte_end":205173,"line_start":985,"line_end":985,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205797,"byte_end":205804,"line_start":1002,"line_end":1002,"column_start":12,"column_end":19},"name":"integer","qualname":"<Cursor>::integer","value":"pub fn integer(Self) -> Option<(&'a Integer, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Integer`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205368,"byte_end":205429,"line_start":993,"line_end":993,"column_start":5,"column_end":66}},{"value":"/ [`Token::Integer`](crate::lexer::Token)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205434,"byte_end":205477,"line_start":994,"line_end":994,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205482,"byte_end":205485,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Integer`, returns the integer as well as a new","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205490,"byte_end":205565,"line_start":996,"line_end":996,"column_start":5,"column_end":80}},{"value":"/ [`Cursor`] pointing at the rest of the tokens in the stream. Otherwise","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205570,"byte_end":205644,"line_start":997,"line_end":997,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205649,"byte_end":205668,"line_start":998,"line_end":998,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205673,"byte_end":205676,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205681,"byte_end":205756,"line_start":1000,"line_end":1000,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205761,"byte_end":205785,"line_start":1001,"line_end":1001,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206407,"byte_end":206412,"line_start":1018,"line_end":1018,"column_start":12,"column_end":17},"name":"float","qualname":"<Cursor>::float","value":"pub fn float(Self) -> Option<(&'a Float, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Float`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":205984,"byte_end":206045,"line_start":1009,"line_end":1009,"column_start":5,"column_end":66}},{"value":"/ [`Token::Float`](crate::lexer::Token)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206050,"byte_end":206091,"line_start":1010,"line_end":1010,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206096,"byte_end":206099,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Float`, returns the float as well as a new","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206104,"byte_end":206175,"line_start":1012,"line_end":1012,"column_start":5,"column_end":76}},{"value":"/ [`Cursor`] pointing at the rest of the tokens in the stream. Otherwise","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206180,"byte_end":206254,"line_start":1013,"line_end":1013,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206259,"byte_end":206278,"line_start":1014,"line_end":1014,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206283,"byte_end":206286,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206291,"byte_end":206366,"line_start":1016,"line_end":1016,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206371,"byte_end":206395,"line_start":1017,"line_end":1017,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207032,"byte_end":207038,"line_start":1034,"line_end":1034,"column_start":12,"column_end":18},"name":"string","qualname":"<Cursor>::string","value":"pub fn string(Self) -> Option<(&'a [u8], Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::String`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206588,"byte_end":206649,"line_start":1025,"line_end":1025,"column_start":5,"column_end":66}},{"value":"/ [`Token::String`](crate::lexer::Token)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206654,"byte_end":206696,"line_start":1026,"line_end":1026,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206701,"byte_end":206704,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ If the current token is `String`, returns the byte value of the string","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206709,"byte_end":206783,"line_start":1028,"line_end":1028,"column_start":5,"column_end":79}},{"value":"/ as well as a new [`Cursor`] pointing at the rest of the tokens in the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206788,"byte_end":206861,"line_start":1029,"line_end":1029,"column_start":5,"column_end":78}},{"value":"/ stream. Otherwise returns `None`.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206866,"byte_end":206903,"line_start":1030,"line_end":1030,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206908,"byte_end":206911,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206916,"byte_end":206991,"line_start":1032,"line_end":1032,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":206996,"byte_end":207020,"line_start":1033,"line_end":1033,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":208219,"byte_end":208229,"line_start":1061,"line_end":1061,"column_start":12,"column_end":22},"name":"annotation","qualname":"<Cursor>::annotation","value":"pub fn annotation(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Reserved`](crate::lexer::Token) and looks like the start of an\n annotation.","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207216,"byte_end":207277,"line_start":1041,"line_end":1041,"column_start":5,"column_end":66}},{"value":"/ [`Token::Reserved`](crate::lexer::Token) and looks like the start of an","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207282,"byte_end":207357,"line_start":1042,"line_end":1042,"column_start":5,"column_end":80}},{"value":"/ annotation.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207362,"byte_end":207377,"line_start":1043,"line_end":1043,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207382,"byte_end":207385,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ [Annotations][annotation] are a WebAssembly proposal for the text format","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207390,"byte_end":207466,"line_start":1045,"line_end":1045,"column_start":5,"column_end":81}},{"value":"/ which allows placing structured text inside of a text file, for example","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207471,"byte_end":207546,"line_start":1046,"line_end":1046,"column_start":5,"column_end":80}},{"value":"/ to specify the name section or other custom sections.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207551,"byte_end":207608,"line_start":1047,"line_end":1047,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207613,"byte_end":207616,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to see if the current token is the `@foo`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207621,"byte_end":207693,"line_start":1049,"line_end":1049,"column_start":5,"column_end":77}},{"value":"/ part of the annotation. This requires the previous token to be `(` and","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207698,"byte_end":207772,"line_start":1050,"line_end":1050,"column_start":5,"column_end":79}},{"value":"/ the current token is `Reserved` which starts with `@` and has a nonzero","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207777,"byte_end":207852,"line_start":1051,"line_end":1051,"column_start":5,"column_end":80}},{"value":"/ length for the following name.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207857,"byte_end":207891,"line_start":1052,"line_end":1052,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207896,"byte_end":207899,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ Note that this will skip *unknown* annoations. Only pre-registered","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207904,"byte_end":207974,"line_start":1054,"line_end":1054,"column_start":5,"column_end":75}},{"value":"/ annotations will be returned here.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":207979,"byte_end":208017,"line_start":1055,"line_end":1055,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":208022,"byte_end":208025,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":208030,"byte_end":208105,"line_start":1057,"line_end":1057,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":208110,"byte_end":208134,"line_start":1058,"line_end":1058,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":208139,"byte_end":208142,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ [annotation]: https://github.com/WebAssembly/annotations","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":208147,"byte_end":208207,"line_start":1060,"line_end":1060,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":208840,"byte_end":208847,"line_start":1077,"line_end":1077,"column_start":12,"column_end":19},"name":"comment","qualname":"<Cursor>::comment","value":"pub fn comment(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::LineComment`](crate::lexer::Token) or a\n [`Token::BlockComment`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":208583,"byte_end":208644,"line_start":1072,"line_end":1072,"column_start":5,"column_end":66}},{"value":"/ [`Token::LineComment`](crate::lexer::Token) or a","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":208649,"byte_end":208701,"line_start":1073,"line_end":1073,"column_start":5,"column_end":57}},{"value":"/ [`Token::BlockComment`](crate::lexer::Token)","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":208706,"byte_end":208754,"line_start":1074,"line_end":1074,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":208759,"byte_end":208762,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ This function will only skip whitespace, no other tokens.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":208767,"byte_end":208828,"line_start":1076,"line_end":1076,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":214188,"byte_end":214192,"line_start":1212,"line_end":1212,"column_start":12,"column_end":16},"name":"peek","qualname":"<Lookahead1>::peek","value":"pub fn peek<T: Peek>(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to see if `T` is the next token in the [`Parser`] this\n [`Lookahead1`] references.","sig":null,"attributes":[{"value":"/ Attempts to see if `T` is the next token in the [`Parser`] this","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":213989,"byte_end":214056,"line_start":1208,"line_end":1208,"column_start":5,"column_end":72}},{"value":"/ [`Lookahead1`] references.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":214061,"byte_end":214091,"line_start":1209,"line_end":1209,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":214096,"byte_end":214099,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ For more information see [`Parser::lookahead1`] and [`Parser::peek`]","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":214104,"byte_end":214176,"line_start":1211,"line_end":1211,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":214644,"byte_end":214649,"line_start":1226,"line_end":1226,"column_start":12,"column_end":17},"name":"error","qualname":"<Lookahead1>::error","value":"pub fn error(Self) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Generates an error message saying that one of the tokens passed to\n [`Lookahead1::peek`] method was expected.","sig":null,"attributes":[{"value":"/ Generates an error message saying that one of the tokens passed to","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":214379,"byte_end":214449,"line_start":1221,"line_end":1221,"column_start":5,"column_end":75}},{"value":"/ [`Lookahead1::peek`] method was expected.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":214454,"byte_end":214499,"line_start":1222,"line_end":1222,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":214504,"byte_end":214507,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ Before calling this method you should call [`Lookahead1::peek`] for all","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":214512,"byte_end":214587,"line_start":1224,"line_end":1224,"column_start":5,"column_end":80}},{"value":"/ possible tokens you'd like to parse.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":214592,"byte_end":214632,"line_start":1225,"line_end":1225,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":8467},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2996,"byte_end":3001,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":8468}],"decl_id":null,"docs":" A convenience error type to tie together all the detailed errors produced by\n this crate.","sig":null,"attributes":[{"value":"/ A convenience error type to tie together all the detailed errors produced by","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2526,"byte_end":2606,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ this crate.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2607,"byte_end":2622,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2623,"byte_end":2626,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ This type can be created from a [`lexer::LexError`] or [`parser::Error`].","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2627,"byte_end":2704,"line_start":67,"line_end":67,"column_start":1,"column_end":78}},{"value":"/ This also contains storage for file/text information so a nice error can be","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2705,"byte_end":2784,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/ rendered along the same lines of rustc's own error messages (minus the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2785,"byte_end":2859,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/ color).","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2860,"byte_end":2871,"line_start":70,"line_end":70,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2872,"byte_end":2875,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This type is typically suitable for use in public APIs for consumers of this","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2876,"byte_end":2956,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ crate.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2957,"byte_end":2967,"line_start":73,"line_end":73,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":4325,"byte_end":4328,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new(Span, String) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates a new error with the given `message` which is targeted at the\n given `span`","sig":null,"attributes":[{"value":"/ Creates a new error with the given `message` which is targeted at the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":4053,"byte_end":4126,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ given `span`","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":4131,"byte_end":4147,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":4152,"byte_end":4155,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Note that you'll want to ensure that `set_text` or `set_path` is called","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":4160,"byte_end":4235,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ on the resulting error to improve the rendering of the error message.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":4240,"byte_end":4313,"line_start":131,"line_end":131,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":4640,"byte_end":4644,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"span","qualname":"<Error>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Return the `Span` for this error.\n","sig":null,"attributes":[{"value":"/ Return the `Span` for this error.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":4591,"byte_end":4628,"line_start":143,"line_end":143,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":5067,"byte_end":5075,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"set_text","qualname":"<Error>::set_text","value":"pub fn set_text(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" To provide a more useful error this function can be used to extract\n relevant textual information about this error into the error itself.","sig":null,"attributes":[{"value":"/ To provide a more useful error this function can be used to extract","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":4697,"byte_end":4768,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/ relevant textual information about this error into the error itself.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":4773,"byte_end":4845,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":4850,"byte_end":4853,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The `contents` here should be the full text of the original file being","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":4858,"byte_end":4932,"line_start":151,"line_end":151,"column_start":5,"column_end":79}},{"value":"/ parsed, and this will extract a sub-slice as necessary to render in the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":4937,"byte_end":5012,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ `Display` implementation later on.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":5017,"byte_end":5055,"line_start":153,"line_end":153,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":5513,"byte_end":5521,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"set_path","qualname":"<Error>::set_path","value":"pub fn set_path(&mut Self, &Path)","parent":null,"children":[],"decl_id":null,"docs":" To provide a more useful error this function can be used to set\n the file name that this error is associated with.","sig":null,"attributes":[{"value":"/ To provide a more useful error this function can be used to set","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":5255,"byte_end":5322,"line_start":161,"line_end":161,"column_start":5,"column_end":72}},{"value":"/ the file name that this error is associated with.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":5327,"byte_end":5380,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":5385,"byte_end":5388,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The `path` here will be stored in this error and later rendered in the","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":5393,"byte_end":5467,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ `Display` implementation.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":5472,"byte_end":5501,"line_start":165,"line_end":165,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":5765,"byte_end":5774,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"lex_error","qualname":"<Error>::lex_error","value":"pub fn lex_error(&Self) -> Option<&lexer::LexError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `LexError`, if any, that describes this error.\n","sig":null,"attributes":[{"value":"/ Returns the underlying `LexError`, if any, that describes this error.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":5680,"byte_end":5753,"line_start":173,"line_end":173,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":6013,"byte_end":6020,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"message","qualname":"<Error>::message","value":"pub fn message(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying message, if any, that describes this error.\n","sig":null,"attributes":[{"value":"/ Returns the underlying message, if any, that describes this error.","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":5931,"byte_end":6001,"line_start":181,"line_end":181,"column_start":5,"column_end":75}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":12405,"byte_end":12412,"line_start":153,"line_end":153,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":13529,"byte_end":13532,"line_start":197,"line_end":197,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":14548,"byte_end":14560,"line_start":247,"line_end":247,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":14784,"byte_end":14794,"line_start":257,"line_end":257,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":15033,"byte_end":15042,"line_start":267,"line_end":267,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":15182,"byte_end":15192,"line_start":274,"line_end":274,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":15328,"byte_end":15340,"line_start":281,"line_end":281,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":15444,"byte_end":15454,"line_start":287,"line_end":287,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":15584,"byte_end":15588,"line_start":294,"line_end":294,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":16287,"byte_end":16293,"line_start":321,"line_end":321,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":16601,"byte_end":16608,"line_start":334,"line_end":334,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":17284,"byte_end":17292,"line_start":358,"line_end":358,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":17748,"byte_end":17755,"line_start":374,"line_end":374,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":19166,"byte_end":19177,"line_start":423,"line_end":423,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":19453,"byte_end":19459,"line_start":435,"line_end":435,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":19760,"byte_end":19767,"line_start":449,"line_end":449,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":20647,"byte_end":20654,"line_start":484,"line_end":484,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":20858,"byte_end":20863,"line_start":493,"line_end":493,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":21091,"byte_end":21101,"line_start":502,"line_end":502,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":21205,"byte_end":21212,"line_start":508,"line_end":508,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":21542,"byte_end":21551,"line_start":520,"line_end":520,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":21683,"byte_end":21689,"line_start":527,"line_end":527,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":22032,"byte_end":22042,"line_start":543,"line_end":543,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":22958,"byte_end":22968,"line_start":570,"line_end":570,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":23172,"byte_end":23177,"line_start":581,"line_end":581,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":23454,"byte_end":23460,"line_start":591,"line_end":591,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":23739,"byte_end":23745,"line_start":601,"line_end":601,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":24057,"byte_end":24063,"line_start":612,"line_end":612,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":24290,"byte_end":24300,"line_start":622,"line_end":622,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":24779,"byte_end":24783,"line_start":637,"line_end":637,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":27931,"byte_end":27942,"line_start":735,"line_end":735,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":28640,"byte_end":28644,"line_start":757,"line_end":757,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":29346,"byte_end":29350,"line_start":782,"line_end":782,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":29844,"byte_end":29847,"line_start":799,"line_end":799,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":30320,"byte_end":30330,"line_start":815,"line_end":815,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":30505,"byte_end":30514,"line_start":824,"line_end":824,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":31248,"byte_end":31260,"line_start":849,"line_end":849,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":31359,"byte_end":31366,"line_start":855,"line_end":855,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":31499,"byte_end":31506,"line_start":862,"line_end":862,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":31603,"byte_end":31609,"line_start":868,"line_end":868,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32102,"byte_end":32117,"line_start":887,"line_end":887,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32249,"byte_end":32261,"line_start":894,"line_end":894,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32390,"byte_end":32399,"line_start":901,"line_end":901,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32530,"byte_end":32539,"line_start":908,"line_end":908,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32667,"byte_end":32675,"line_start":915,"line_end":915,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32775,"byte_end":32784,"line_start":921,"line_end":921,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32884,"byte_end":32894,"line_start":927,"line_end":927,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":33023,"byte_end":33033,"line_start":934,"line_end":934,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":33161,"byte_end":33175,"line_start":941,"line_end":941,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":33310,"byte_end":33317,"line_start":948,"line_end":948,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":33440,"byte_end":33447,"line_start":954,"line_end":954,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":36463,"byte_end":36468,"line_start":1052,"line_end":1052,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":36614,"byte_end":36619,"line_start":1058,"line_end":1058,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":37236,"byte_end":37238,"line_start":1083,"line_end":1083,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":37381,"byte_end":37390,"line_start":1090,"line_end":1090,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":37512,"byte_end":37524,"line_start":1096,"line_end":1096,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":37642,"byte_end":37653,"line_start":1102,"line_end":1102,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":37907,"byte_end":37913,"line_start":1114,"line_end":1114,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":38073,"byte_end":38078,"line_start":1122,"line_end":1122,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":38177,"byte_end":38186,"line_start":1128,"line_end":1128,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":38405,"byte_end":38417,"line_start":1139,"line_end":1139,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":38552,"byte_end":38564,"line_start":1146,"line_end":1146,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":38886,"byte_end":38894,"line_start":1157,"line_end":1157,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":39288,"byte_end":39299,"line_start":1170,"line_end":1170,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":39526,"byte_end":39531,"line_start":1180,"line_end":1180,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/aliases.rs","byte_start":46917,"byte_end":46925,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":67317,"byte_end":67325,"line_start":44,"line_end":44,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":83508,"byte_end":83517,"line_start":462,"line_end":462,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":86938,"byte_end":86950,"line_start":555,"line_end":555,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":97773,"byte_end":97780,"line_start":862,"line_end":862,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":99498,"byte_end":99505,"line_start":919,"line_end":919,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":100293,"byte_end":100305,"line_start":951,"line_end":951,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":102351,"byte_end":102363,"line_start":1008,"line_end":1008,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":102857,"byte_end":102867,"line_start":1025,"line_end":1025,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":104344,"byte_end":104352,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":113839,"byte_end":113851,"line_start":286,"line_end":286,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":114141,"byte_end":114148,"line_start":298,"line_end":298,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":114777,"byte_end":114789,"line_start":318,"line_end":318,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":115191,"byte_end":115202,"line_start":335,"line_end":335,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":116051,"byte_end":116061,"line_start":364,"line_end":364,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":116798,"byte_end":116807,"line_start":391,"line_end":391,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":118068,"byte_end":118072,"line_start":437,"line_end":437,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":40324,"byte_end":40326,"line_start":22,"line_end":22,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":42709,"byte_end":42714,"line_start":93,"line_end":93,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9233481,"byte_end":9233485,"line_start":14,"line_end":14,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9234732,"byte_end":9234734,"line_start":51,"line_end":51,"column_start":10,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9235384,"byte_end":9235386,"line_start":81,"line_end":81,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9235536,"byte_end":9235538,"line_start":88,"line_end":88,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9235670,"byte_end":9235672,"line_start":94,"line_end":94,"column_start":17,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9235704,"byte_end":9235706,"line_start":96,"line_end":96,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236008,"byte_end":9236010,"line_start":107,"line_end":107,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236252,"byte_end":9236254,"line_start":117,"line_end":117,"column_start":15,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9237154,"byte_end":9237159,"line_start":145,"line_end":145,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9237557,"byte_end":9237562,"line_start":162,"line_end":162,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9237930,"byte_end":9237935,"line_start":176,"line_end":176,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9238126,"byte_end":9238131,"line_start":186,"line_end":186,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9238227,"byte_end":9238232,"line_start":192,"line_end":192,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9238482,"byte_end":9238487,"line_start":202,"line_end":202,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9238510,"byte_end":9238515,"line_start":204,"line_end":204,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9239224,"byte_end":9239231,"line_start":238,"line_end":238,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9239740,"byte_end":9239747,"line_start":254,"line_end":254,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9240462,"byte_end":9240469,"line_start":275,"line_end":275,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9240877,"byte_end":9240887,"line_start":292,"line_end":292,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9241298,"byte_end":9241308,"line_start":309,"line_end":309,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9241732,"byte_end":9241746,"line_start":326,"line_end":326,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9241953,"byte_end":9241959,"line_start":334,"line_end":334,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9244446,"byte_end":9244452,"line_start":420,"line_end":420,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9255568,"byte_end":9255574,"line_start":709,"line_end":709,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9258379,"byte_end":9258384,"line_start":36,"line_end":36,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9260157,"byte_end":9260173,"line_start":30,"line_end":30,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9261336,"byte_end":9261346,"line_start":60,"line_end":60,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9262298,"byte_end":9262309,"line_start":93,"line_end":93,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265699,"byte_end":9265705,"line_start":54,"line_end":54,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9266274,"byte_end":9266285,"line_start":76,"line_end":76,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9267076,"byte_end":9267093,"line_start":100,"line_end":100,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9270197,"byte_end":9270202,"line_start":25,"line_end":25,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9270551,"byte_end":9270560,"line_start":40,"line_end":40,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271416,"byte_end":9271422,"line_start":30,"line_end":30,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271665,"byte_end":9271675,"line_start":40,"line_end":40,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9273609,"byte_end":9273621,"line_start":108,"line_end":108,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9273958,"byte_end":9273970,"line_start":121,"line_end":121,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9275065,"byte_end":9275075,"line_start":16,"line_end":16,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9277825,"byte_end":9277841,"line_start":98,"line_end":98,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9328602,"byte_end":9328611,"line_start":1147,"line_end":1147,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329086,"byte_end":9329098,"line_start":1165,"line_end":1165,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329543,"byte_end":9329550,"line_start":1183,"line_end":1183,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329977,"byte_end":9329991,"line_start":1200,"line_end":1200,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9330500,"byte_end":9330507,"line_start":1219,"line_end":1219,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331606,"byte_end":9331612,"line_start":1254,"line_end":1254,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9333878,"byte_end":9333893,"line_start":1321,"line_end":1321,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9334490,"byte_end":9334502,"line_start":1339,"line_end":1339,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9335516,"byte_end":9335525,"line_start":1366,"line_end":1366,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336328,"byte_end":9336337,"line_start":1389,"line_end":1389,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336964,"byte_end":9336972,"line_start":1409,"line_end":1409,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9337461,"byte_end":9337470,"line_start":1427,"line_end":1427,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9338073,"byte_end":9338083,"line_start":1447,"line_end":1447,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9338712,"byte_end":9338722,"line_start":1467,"line_end":1467,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339461,"byte_end":9339473,"line_start":1489,"line_end":1489,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339939,"byte_end":9339948,"line_start":1511,"line_end":1511,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6015}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9343205,"byte_end":9343214,"line_start":1602,"line_end":1602,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9345444,"byte_end":9345456,"line_start":1672,"line_end":1672,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9346304,"byte_end":9346315,"line_start":1704,"line_end":1704,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9348297,"byte_end":9348301,"line_start":46,"line_end":46,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349647,"byte_end":9349652,"line_start":93,"line_end":93,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351513,"byte_end":9351519,"line_start":34,"line_end":34,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9352591,"byte_end":9352597,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353836,"byte_end":9353843,"line_start":59,"line_end":59,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9356475,"byte_end":9356487,"line_start":137,"line_end":137,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9356761,"byte_end":9356773,"line_start":149,"line_end":149,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358987,"byte_end":9358995,"line_start":47,"line_end":47,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9359891,"byte_end":9359902,"line_start":79,"line_end":79,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9361384,"byte_end":9361390,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363977,"byte_end":9363981,"line_start":123,"line_end":123,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9365732,"byte_end":9365739,"line_start":180,"line_end":180,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9366311,"byte_end":9366318,"line_start":199,"line_end":199,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9368675,"byte_end":9368678,"line_start":16,"line_end":16,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370070,"byte_end":9370076,"line_start":59,"line_end":59,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9373123,"byte_end":9373129,"line_start":132,"line_end":132,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374433,"byte_end":9374444,"line_start":179,"line_end":179,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374718,"byte_end":9374729,"line_start":189,"line_end":189,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9378020,"byte_end":9378032,"line_start":39,"line_end":39,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9379947,"byte_end":9379957,"line_start":89,"line_end":89,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1770}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381932,"byte_end":9381937,"line_start":41,"line_end":41,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9384927,"byte_end":9384931,"line_start":134,"line_end":134,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9386182,"byte_end":9386193,"line_start":174,"line_end":174,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9386326,"byte_end":9386337,"line_start":180,"line_end":180,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9388563,"byte_end":9388570,"line_start":18,"line_end":18,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9389735,"byte_end":9389742,"line_start":54,"line_end":54,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9391125,"byte_end":9391133,"line_start":95,"line_end":95,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9392078,"byte_end":9392086,"line_start":124,"line_end":124,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1849},{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9392699,"byte_end":9392706,"line_start":147,"line_end":147,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9393859,"byte_end":9393866,"line_start":197,"line_end":197,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9395533,"byte_end":9395540,"line_start":247,"line_end":247,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396248,"byte_end":9396259,"line_start":272,"line_end":272,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1869}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9397016,"byte_end":9397026,"line_start":298,"line_end":298,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9397784,"byte_end":9397790,"line_start":326,"line_end":326,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398340,"byte_end":9398348,"line_start":347,"line_end":347,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398904,"byte_end":9398913,"line_start":368,"line_end":368,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9399643,"byte_end":9399653,"line_start":396,"line_end":396,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9400704,"byte_end":9400716,"line_start":428,"line_end":428,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9402547,"byte_end":9402559,"line_start":474,"line_end":474,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1892}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9402818,"byte_end":9402830,"line_start":485,"line_end":485,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9403335,"byte_end":9403354,"line_start":506,"line_end":506,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9403635,"byte_end":9403654,"line_start":517,"line_end":517,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9403864,"byte_end":9403876,"line_start":527,"line_end":527,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9404148,"byte_end":9404158,"line_start":540,"line_end":540,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9405015,"byte_end":9405026,"line_start":569,"line_end":569,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9405780,"byte_end":9405789,"line_start":594,"line_end":594,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9406520,"byte_end":9406530,"line_start":618,"line_end":618,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1921}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9407016,"byte_end":9407026,"line_start":635,"line_end":635,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9407572,"byte_end":9407584,"line_start":659,"line_end":659,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9407846,"byte_end":9407858,"line_start":669,"line_end":669,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408519,"byte_end":9408529,"line_start":697,"line_end":697,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409519,"byte_end":9409523,"line_start":733,"line_end":733,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9410901,"byte_end":9410908,"line_start":771,"line_end":771,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9411369,"byte_end":9411376,"line_start":786,"line_end":786,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9411712,"byte_end":9411719,"line_start":799,"line_end":799,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9412485,"byte_end":9412489,"line_start":15,"line_end":15,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9413141,"byte_end":9413159,"line_start":35,"line_end":35,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9414679,"byte_end":9414692,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9415426,"byte_end":9415439,"line_start":116,"line_end":116,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9421674,"byte_end":9421685,"line_start":266,"line_end":266,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9422445,"byte_end":9422455,"line_start":293,"line_end":293,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9423022,"byte_end":9423033,"line_start":317,"line_end":317,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139355,"byte_end":139360,"line_start":222,"line_end":222,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":155779,"byte_end":155784,"line_start":698,"line_end":698,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":155932,"byte_end":155937,"line_start":706,"line_end":706,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":156502,"byte_end":156509,"line_start":725,"line_end":725,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":156997,"byte_end":157002,"line_start":743,"line_end":743,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":157313,"byte_end":157323,"line_start":756,"line_end":756,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":158365,"byte_end":158373,"line_start":815,"line_end":815,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180548,"byte_end":180559,"line_start":332,"line_end":332,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":183699,"byte_end":183705,"line_start":415,"line_end":415,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":201261,"byte_end":201273,"line_start":879,"line_end":879,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":201529,"byte_end":201535,"line_start":889,"line_end":889,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":213968,"byte_end":213978,"line_start":1207,"line_end":1207,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":215641,"byte_end":215647,"line_start":1255,"line_end":1255,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":3339,"byte_end":3344,"line_start":100,"line_end":100,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":6209,"byte_end":6214,"line_start":190,"line_end":190,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":7188,"byte_end":7193,"line_start":227,"line_end":227,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":7203,"byte_end":7207,"line_start":229,"line_end":229,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2502,"byte_end":2507,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":490}},{"kind":"Mod","span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":2517,"byte_end":2523,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":580}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":12405,"byte_end":12412,"line_start":153,"line_end":153,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":27},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":13529,"byte_end":13532,"line_start":197,"line_end":197,"column_start":28,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":14548,"byte_end":14560,"line_start":247,"line_end":247,"column_start":17,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":6605},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":14784,"byte_end":14794,"line_start":257,"line_end":257,"column_start":17,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":6631},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":15033,"byte_end":15042,"line_start":267,"line_end":267,"column_start":17,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6651},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":15182,"byte_end":15192,"line_start":274,"line_end":274,"column_start":17,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":6661},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":15328,"byte_end":15340,"line_start":281,"line_end":281,"column_start":17,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":6674},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":15444,"byte_end":15454,"line_start":287,"line_end":287,"column_start":17,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":6686},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":15584,"byte_end":15588,"line_start":294,"line_end":294,"column_start":17,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":6717},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":16287,"byte_end":16293,"line_start":321,"line_end":321,"column_start":17,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":36703},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":16601,"byte_end":16608,"line_start":334,"line_end":334,"column_start":21,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":6352},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":17284,"byte_end":17292,"line_start":358,"line_end":358,"column_start":21,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":6394},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":17748,"byte_end":17755,"line_start":374,"line_end":374,"column_start":21,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":6434},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":19166,"byte_end":19177,"line_start":423,"line_end":423,"column_start":21,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":6461},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":19453,"byte_end":19459,"line_start":435,"line_end":435,"column_start":17,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":6079},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":19760,"byte_end":19767,"line_start":449,"line_end":449,"column_start":17,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":20647,"byte_end":20654,"line_start":484,"line_end":484,"column_start":20,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":6725},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":20858,"byte_end":20863,"line_start":493,"line_end":493,"column_start":17,"column_end":22},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1021},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":21091,"byte_end":21101,"line_start":502,"line_end":502,"column_start":20,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1057},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":21205,"byte_end":21212,"line_start":508,"line_end":508,"column_start":20,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1038},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":21542,"byte_end":21551,"line_start":520,"line_end":520,"column_start":21,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":6556},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":21683,"byte_end":21689,"line_start":527,"line_end":527,"column_start":17,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":6520},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":22032,"byte_end":22042,"line_start":543,"line_end":543,"column_start":17,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":6583},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":22958,"byte_end":22968,"line_start":570,"line_end":570,"column_start":21,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6493},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":23172,"byte_end":23177,"line_start":581,"line_end":581,"column_start":17,"column_end":22},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6294},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":23454,"byte_end":23460,"line_start":591,"line_end":591,"column_start":17,"column_end":23},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6171},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":23739,"byte_end":23745,"line_start":601,"line_end":601,"column_start":17,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6058},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":24057,"byte_end":24063,"line_start":612,"line_end":612,"column_start":17,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2284},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":24290,"byte_end":24300,"line_start":622,"line_end":622,"column_start":17,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2292},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":24779,"byte_end":24783,"line_start":637,"line_end":637,"column_start":17,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6317},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":27931,"byte_end":27942,"line_start":735,"line_end":735,"column_start":17,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6338},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":28640,"byte_end":28644,"line_start":757,"line_end":757,"column_start":17,"column_end":21},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6194},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":29346,"byte_end":29350,"line_start":782,"line_end":782,"column_start":17,"column_end":21},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6028},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":29844,"byte_end":29847,"line_start":799,"line_end":799,"column_start":17,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":30320,"byte_end":30330,"line_start":815,"line_end":815,"column_start":17,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2361},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":30505,"byte_end":30514,"line_start":824,"line_end":824,"column_start":17,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5888},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":31248,"byte_end":31260,"line_start":849,"line_end":849,"column_start":17,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5895},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":31359,"byte_end":31366,"line_start":855,"line_end":855,"column_start":17,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5901},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":31499,"byte_end":31506,"line_start":862,"line_end":862,"column_start":17,"column_end":24},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5915},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":31603,"byte_end":31609,"line_start":868,"line_end":868,"column_start":17,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5919},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32102,"byte_end":32117,"line_start":887,"line_end":887,"column_start":17,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":5927},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32249,"byte_end":32261,"line_start":894,"line_end":894,"column_start":17,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5934},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32390,"byte_end":32399,"line_start":901,"line_end":901,"column_start":17,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":5941},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32530,"byte_end":32539,"line_start":908,"line_end":908,"column_start":17,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5948},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32667,"byte_end":32675,"line_start":915,"line_end":915,"column_start":17,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5955},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32775,"byte_end":32784,"line_start":921,"line_end":921,"column_start":17,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":32884,"byte_end":32894,"line_start":927,"line_end":927,"column_start":17,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":5967},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":33023,"byte_end":33033,"line_start":934,"line_end":934,"column_start":17,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":5974},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":33161,"byte_end":33175,"line_start":941,"line_end":941,"column_start":17,"column_end":31},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":5908},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":33310,"byte_end":33317,"line_start":948,"line_end":948,"column_start":17,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1199},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":33440,"byte_end":33447,"line_start":954,"line_end":954,"column_start":17,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1203},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":36463,"byte_end":36468,"line_start":1052,"line_end":1052,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":36614,"byte_end":36619,"line_start":1058,"line_end":1058,"column_start":17,"column_end":22},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":176},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":37236,"byte_end":37238,"line_start":1083,"line_end":1083,"column_start":17,"column_end":19},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1011},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":37381,"byte_end":37390,"line_start":1090,"line_end":1090,"column_start":17,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5990},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":37512,"byte_end":37524,"line_start":1096,"line_end":1096,"column_start":17,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":6017},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":37642,"byte_end":37653,"line_start":1102,"line_end":1102,"column_start":21,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":6022},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":37907,"byte_end":37913,"line_start":1114,"line_end":1114,"column_start":17,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2196},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":38073,"byte_end":38078,"line_start":1122,"line_end":1122,"column_start":17,"column_end":22},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2264},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":38177,"byte_end":38186,"line_start":1128,"line_end":1128,"column_start":17,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2273},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":38405,"byte_end":38417,"line_start":1139,"line_end":1139,"column_start":17,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5981},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":38552,"byte_end":38564,"line_start":1146,"line_end":1146,"column_start":17,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":6274},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":38886,"byte_end":38894,"line_start":1157,"line_end":1157,"column_start":17,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":6144},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":39288,"byte_end":39299,"line_start":1170,"line_end":1170,"column_start":17,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":6164},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/binary.rs","byte_start":39526,"byte_end":39531,"line_start":1180,"line_end":1180,"column_start":17,"column_end":22},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2097},"to":{"krate":0,"index":37}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/aliases.rs","byte_start":46917,"byte_end":46925,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":67317,"byte_end":67325,"line_start":44,"line_end":44,"column_start":10,"column_end":18},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":83508,"byte_end":83517,"line_start":462,"line_end":462,"column_start":10,"column_end":19},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":86938,"byte_end":86950,"line_start":555,"line_end":555,"column_start":14,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":97773,"byte_end":97780,"line_start":862,"line_end":862,"column_start":14,"column_end":21},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":99498,"byte_end":99505,"line_start":919,"line_end":919,"column_start":23,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":100293,"byte_end":100305,"line_start":951,"line_end":951,"column_start":32,"column_end":44},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":6605},"to":{"krate":0,"index":372}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":102351,"byte_end":102363,"line_start":1008,"line_end":1008,"column_start":32,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":6674},"to":{"krate":0,"index":372}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/names.rs","byte_start":102857,"byte_end":102867,"line_start":1025,"line_end":1025,"column_start":32,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":6661},"to":{"krate":0,"index":372}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":104344,"byte_end":104352,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":113431,"byte_end":113438,"line_start":272,"line_end":272,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2967},"to":{"krate":0,"index":414}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":113839,"byte_end":113851,"line_start":286,"line_end":286,"column_start":32,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":6605},"to":{"krate":0,"index":414}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":114141,"byte_end":114148,"line_start":298,"line_end":298,"column_start":26,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":424},"to":{"krate":0,"index":419}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":114777,"byte_end":114789,"line_start":318,"line_end":318,"column_start":32,"column_end":44},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":6674},"to":{"krate":0,"index":414}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":115191,"byte_end":115202,"line_start":335,"line_end":335,"column_start":26,"column_end":37},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":438},"to":{"krate":0,"index":419}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":116051,"byte_end":116061,"line_start":364,"line_end":364,"column_start":32,"column_end":42},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":6661},"to":{"krate":0,"index":414}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":116798,"byte_end":116807,"line_start":391,"line_end":391,"column_start":26,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":452},"to":{"krate":0,"index":419}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/types.rs","byte_start":118068,"byte_end":118072,"line_start":437,"line_end":437,"column_start":10,"column_end":14},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":40324,"byte_end":40326,"line_start":22,"line_end":22,"column_start":6,"column_end":8},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/resolve/mod.rs","byte_start":42709,"byte_end":42714,"line_start":93,"line_end":93,"column_start":10,"column_end":15},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9233481,"byte_end":9233485,"line_start":14,"line_end":14,"column_start":6,"column_end":10},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":8493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9234732,"byte_end":9234734,"line_start":51,"line_end":51,"column_start":10,"column_end":12},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9235384,"byte_end":9235386,"line_start":81,"line_end":81,"column_start":19,"column_end":21},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1011},"to":{"krate":2,"index":9508}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9235536,"byte_end":9235538,"line_start":88,"line_end":88,"column_start":24,"column_end":26},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1011},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9235670,"byte_end":9235672,"line_start":94,"line_end":94,"column_start":17,"column_end":19},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1011},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9235704,"byte_end":9235706,"line_start":96,"line_end":96,"column_start":24,"column_end":26},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1011},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236008,"byte_end":9236010,"line_start":107,"line_end":107,"column_start":21,"column_end":23},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1011},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9236252,"byte_end":9236254,"line_start":117,"line_end":117,"column_start":15,"column_end":17},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1011},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9237154,"byte_end":9237159,"line_start":145,"line_end":145,"column_start":6,"column_end":11},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9237557,"byte_end":9237562,"line_start":162,"line_end":162,"column_start":24,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1021},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9237930,"byte_end":9237935,"line_start":176,"line_end":176,"column_start":15,"column_end":20},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1021},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9238126,"byte_end":9238131,"line_start":186,"line_end":186,"column_start":27,"column_end":32},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9238227,"byte_end":9238232,"line_start":192,"line_end":192,"column_start":20,"column_end":25},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9238482,"byte_end":9238487,"line_start":202,"line_end":202,"column_start":13,"column_end":18},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9238510,"byte_end":9238515,"line_start":204,"line_end":204,"column_start":15,"column_end":20},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":9508}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9239224,"byte_end":9239231,"line_start":238,"line_end":238,"column_start":13,"column_end":20},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9239740,"byte_end":9239747,"line_start":254,"line_end":254,"column_start":38,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1038},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9240462,"byte_end":9240469,"line_start":275,"line_end":275,"column_start":28,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1038},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9240877,"byte_end":9240887,"line_start":292,"line_end":292,"column_start":27,"column_end":37},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1057},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9241298,"byte_end":9241308,"line_start":309,"line_end":309,"column_start":28,"column_end":38},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1057},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9241732,"byte_end":9241746,"line_start":326,"line_end":326,"column_start":24,"column_end":38},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1070},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9241953,"byte_end":9241959,"line_start":334,"line_end":334,"column_start":24,"column_end":30},"kind":{"Impl":{"id":112}},"from":{"krate":2,"index":36703},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9244446,"byte_end":9244452,"line_start":420,"line_end":420,"column_start":20,"column_end":26},"kind":{"Impl":{"id":113}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/token.rs","byte_start":9255568,"byte_end":9255574,"line_start":709,"line_end":709,"column_start":15,"column_end":21},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1005},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/alias.rs","byte_start":9258379,"byte_end":9258384,"line_start":36,"line_end":36,"column_start":24,"column_end":29},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2097},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9260157,"byte_end":9260173,"line_start":30,"line_end":30,"column_start":24,"column_end":40},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2118},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9261336,"byte_end":9261346,"line_start":60,"line_end":60,"column_start":27,"column_end":37},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2151},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/assert_expr.rs","byte_start":9262298,"byte_end":9262309,"line_start":93,"line_end":93,"column_start":24,"column_end":35},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2169},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9265699,"byte_end":9265705,"line_start":54,"line_end":54,"column_start":24,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2196},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9266274,"byte_end":9266285,"line_start":76,"line_end":76,"column_start":24,"column_end":35},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2205},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/custom.rs","byte_start":9267076,"byte_end":9267093,"line_start":100,"line_end":100,"column_start":24,"column_end":41},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2225},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9270197,"byte_end":9270202,"line_start":25,"line_end":25,"column_start":24,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2264},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/event.rs","byte_start":9270551,"byte_end":9270560,"line_start":40,"line_end":40,"column_start":24,"column_end":33},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2273},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271416,"byte_end":9271422,"line_start":30,"line_end":30,"column_start":24,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2284},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9271665,"byte_end":9271675,"line_start":40,"line_end":40,"column_start":24,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2292},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9273609,"byte_end":9273621,"line_start":108,"line_end":108,"column_start":24,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2355},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/export.rs","byte_start":9273958,"byte_end":9273970,"line_start":121,"line_end":121,"column_start":15,"column_end":27},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2355},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9275065,"byte_end":9275075,"line_start":16,"line_end":16,"column_start":24,"column_end":34},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2361},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9277825,"byte_end":9277841,"line_start":98,"line_end":98,"column_start":10,"column_end":26},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9328602,"byte_end":9328611,"line_start":1147,"line_end":1147,"column_start":24,"column_end":33},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":5888},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329086,"byte_end":9329098,"line_start":1165,"line_end":1165,"column_start":24,"column_end":36},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":5895},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329543,"byte_end":9329550,"line_start":1183,"line_end":1183,"column_start":24,"column_end":31},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":5901},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9329977,"byte_end":9329991,"line_start":1200,"line_end":1200,"column_start":24,"column_end":38},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":5908},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9330500,"byte_end":9330507,"line_start":1219,"line_end":1219,"column_start":24,"column_end":31},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5915},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9331606,"byte_end":9331612,"line_start":1254,"line_end":1254,"column_start":10,"column_end":16},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9333878,"byte_end":9333893,"line_start":1321,"line_end":1321,"column_start":10,"column_end":25},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":5927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9334490,"byte_end":9334502,"line_start":1339,"line_end":1339,"column_start":24,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5934},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9335516,"byte_end":9335525,"line_start":1366,"line_end":1366,"column_start":24,"column_end":33},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5941},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336328,"byte_end":9336337,"line_start":1389,"line_end":1389,"column_start":24,"column_end":33},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5948},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9336964,"byte_end":9336972,"line_start":1409,"line_end":1409,"column_start":24,"column_end":32},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":5955},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9337461,"byte_end":9337470,"line_start":1427,"line_end":1427,"column_start":24,"column_end":33},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9338073,"byte_end":9338083,"line_start":1447,"line_end":1447,"column_start":24,"column_end":34},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":5967},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9338712,"byte_end":9338722,"line_start":1467,"line_end":1467,"column_start":24,"column_end":34},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5974},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339461,"byte_end":9339473,"line_start":1489,"line_end":1489,"column_start":24,"column_end":36},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5981},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9339939,"byte_end":9339948,"line_start":1511,"line_end":1511,"column_start":6,"column_end":15},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9343205,"byte_end":9343214,"line_start":1602,"line_end":1602,"column_start":24,"column_end":33},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5990},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9345444,"byte_end":9345456,"line_start":1672,"line_end":1672,"column_start":24,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6017},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/expr.rs","byte_start":9346304,"byte_end":9346315,"line_start":1704,"line_end":1704,"column_start":24,"column_end":35},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":6022},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9348297,"byte_end":9348301,"line_start":46,"line_end":46,"column_start":24,"column_end":28},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":6028},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/func.rs","byte_start":9349647,"byte_end":9349652,"line_start":93,"line_end":93,"column_start":10,"column_end":15},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":6050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/global.rs","byte_start":9351513,"byte_end":9351519,"line_start":34,"line_end":34,"column_start":24,"column_end":30},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":6058},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9352591,"byte_end":9352597,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6079},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9353836,"byte_end":9353843,"line_start":59,"line_end":59,"column_start":24,"column_end":31},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9356475,"byte_end":9356487,"line_start":137,"line_end":137,"column_start":24,"column_end":36},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6132},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/import.rs","byte_start":9356761,"byte_end":9356773,"line_start":149,"line_end":149,"column_start":15,"column_end":27},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6132},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9358987,"byte_end":9358995,"line_start":47,"line_end":47,"column_start":24,"column_end":32},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6144},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/instance.rs","byte_start":9359891,"byte_end":9359902,"line_start":79,"line_end":79,"column_start":24,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":6164},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9361384,"byte_end":9361390,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":6171},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9363977,"byte_end":9363981,"line_start":123,"line_end":123,"column_start":24,"column_end":28},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":6194},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9365732,"byte_end":9365739,"line_start":180,"line_end":180,"column_start":6,"column_end":13},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":6213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/memory.rs","byte_start":9366311,"byte_end":9366318,"line_start":199,"line_end":199,"column_start":24,"column_end":31},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":6213},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9368675,"byte_end":9368678,"line_start":16,"line_end":16,"column_start":24,"column_end":27},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1702},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9370070,"byte_end":9370076,"line_start":59,"line_end":59,"column_start":10,"column_end":16},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9373123,"byte_end":9373129,"line_start":132,"line_end":132,"column_start":24,"column_end":30},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1709},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374433,"byte_end":9374444,"line_start":179,"line_end":179,"column_start":10,"column_end":21},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/module.rs","byte_start":9374718,"byte_end":9374729,"line_start":189,"line_end":189,"column_start":24,"column_end":35},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6224},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9378020,"byte_end":9378032,"line_start":39,"line_end":39,"column_start":24,"column_end":36},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6274},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/nested_module.rs","byte_start":9379947,"byte_end":9379957,"line_start":89,"line_end":89,"column_start":15,"column_end":25},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1766},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9381932,"byte_end":9381937,"line_start":41,"line_end":41,"column_start":24,"column_end":29},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6294},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9384927,"byte_end":9384931,"line_start":134,"line_end":134,"column_start":24,"column_end":28},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6317},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9386182,"byte_end":9386193,"line_start":174,"line_end":174,"column_start":24,"column_end":35},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6338},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/table.rs","byte_start":9386326,"byte_end":9386337,"line_start":180,"line_end":180,"column_start":10,"column_end":21},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":6338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9388563,"byte_end":9388570,"line_start":18,"line_end":18,"column_start":24,"column_end":31},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":6352},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9389735,"byte_end":9389742,"line_start":54,"line_end":54,"column_start":19,"column_end":26},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":6352},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9391125,"byte_end":9391133,"line_start":95,"line_end":95,"column_start":24,"column_end":32},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":6394},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9392078,"byte_end":9392086,"line_start":124,"line_end":124,"column_start":19,"column_end":27},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":6394},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9392699,"byte_end":9392706,"line_start":147,"line_end":147,"column_start":10,"column_end":17},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":6434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9393859,"byte_end":9393866,"line_start":197,"line_end":197,"column_start":24,"column_end":31},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":6434},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9395533,"byte_end":9395540,"line_start":247,"line_end":247,"column_start":19,"column_end":26},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":6434},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9396248,"byte_end":9396259,"line_start":272,"line_end":272,"column_start":24,"column_end":35},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":6461},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9397016,"byte_end":9397026,"line_start":298,"line_end":298,"column_start":24,"column_end":34},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":6493},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9397784,"byte_end":9397790,"line_start":326,"line_end":326,"column_start":24,"column_end":30},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":6520},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398340,"byte_end":9398348,"line_start":347,"line_end":347,"column_start":24,"column_end":32},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":6538},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9398904,"byte_end":9398913,"line_start":368,"line_end":368,"column_start":24,"column_end":33},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":6556},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9399643,"byte_end":9399653,"line_start":396,"line_end":396,"column_start":24,"column_end":34},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":6583},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9400704,"byte_end":9400716,"line_start":428,"line_end":428,"column_start":10,"column_end":22},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":6605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9402547,"byte_end":9402559,"line_start":474,"line_end":474,"column_start":24,"column_end":36},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":6605},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9402818,"byte_end":9402830,"line_start":485,"line_end":485,"column_start":19,"column_end":31},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":6605},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9403335,"byte_end":9403354,"line_start":506,"line_end":506,"column_start":24,"column_end":43},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":6618},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9403635,"byte_end":9403654,"line_start":517,"line_end":517,"column_start":19,"column_end":38},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":6618},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9403864,"byte_end":9403876,"line_start":527,"line_end":527,"column_start":44,"column_end":56},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":6605},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9404148,"byte_end":9404158,"line_start":540,"line_end":540,"column_start":24,"column_end":34},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":6631},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9405015,"byte_end":9405026,"line_start":569,"line_end":569,"column_start":10,"column_end":21},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":6640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9405780,"byte_end":9405789,"line_start":594,"line_end":594,"column_start":24,"column_end":33},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":6651},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9406520,"byte_end":9406530,"line_start":618,"line_end":618,"column_start":24,"column_end":34},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":6661},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9407016,"byte_end":9407026,"line_start":635,"line_end":635,"column_start":19,"column_end":29},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":6661},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9407572,"byte_end":9407584,"line_start":659,"line_end":659,"column_start":24,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":6674},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9407846,"byte_end":9407858,"line_start":669,"line_end":669,"column_start":19,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":6674},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9408519,"byte_end":9408529,"line_start":697,"line_end":697,"column_start":24,"column_end":34},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":6686},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9409519,"byte_end":9409523,"line_start":733,"line_end":733,"column_start":24,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":6717},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9410901,"byte_end":9410908,"line_start":771,"line_end":771,"column_start":13,"column_end":20},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":6725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9411369,"byte_end":9411376,"line_start":786,"line_end":786,"column_start":45,"column_end":52},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":6725},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/types.rs","byte_start":9411712,"byte_end":9411719,"line_start":799,"line_end":799,"column_start":57,"column_end":64},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":6725},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9412485,"byte_end":9412489,"line_start":15,"line_end":15,"column_start":24,"column_end":28},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1991},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9413141,"byte_end":9413159,"line_start":35,"line_end":35,"column_start":15,"column_end":33},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1998},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9414679,"byte_end":9414692,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9415426,"byte_end":9415439,"line_start":116,"line_end":116,"column_start":24,"column_end":37},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2003},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9421674,"byte_end":9421685,"line_start":266,"line_end":266,"column_start":24,"column_end":35},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2061},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9422445,"byte_end":9422455,"line_start":293,"line_end":293,"column_start":24,"column_end":34},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2075},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/ast/wast.rs","byte_start":9423022,"byte_end":9423033,"line_start":317,"line_end":317,"column_start":24,"column_end":35},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2085},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":139355,"byte_end":139360,"line_start":222,"line_end":222,"column_start":10,"column_end":15},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":8232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":155779,"byte_end":155784,"line_start":698,"line_end":698,"column_start":23,"column_end":28},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":8232},"to":{"krate":2,"index":7566}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":155932,"byte_end":155937,"line_start":706,"line_end":706,"column_start":10,"column_end":15},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":8239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":156502,"byte_end":156509,"line_start":725,"line_end":725,"column_start":10,"column_end":17},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":8336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":156997,"byte_end":157002,"line_start":743,"line_end":743,"column_start":10,"column_end":15},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":8364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":157313,"byte_end":157323,"line_start":756,"line_end":756,"column_start":10,"column_end":20},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":8390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lexer.rs","byte_start":158365,"byte_end":158373,"line_start":815,"line_end":815,"column_start":23,"column_end":31},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":8283},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":175908,"byte_end":175913,"line_start":208,"line_end":208,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":180548,"byte_end":180559,"line_start":332,"line_end":332,"column_start":6,"column_end":17},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":183699,"byte_end":183705,"line_start":415,"line_end":415,"column_start":10,"column_end":16},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":8450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":201261,"byte_end":201273,"line_start":879,"line_end":879,"column_start":23,"column_end":35},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":201529,"byte_end":201535,"line_start":889,"line_end":889,"column_start":10,"column_end":16},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":8458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":213968,"byte_end":213978,"line_start":1207,"line_end":1207,"column_start":6,"column_end":16},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/parser.rs","byte_start":215641,"byte_end":215647,"line_start":1255,"line_end":1255,"column_start":45,"column_end":51},"kind":{"Impl":{"id":223}},"from":{"krate":2,"index":36703},"to":{"krate":0,"index":620}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":3339,"byte_end":3344,"line_start":100,"line_end":100,"column_start":6,"column_end":11},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":8467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":6209,"byte_end":6214,"line_start":190,"line_end":190,"column_start":23,"column_end":28},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":8467},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":7188,"byte_end":7193,"line_start":227,"line_end":227,"column_start":28,"column_end":33},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":8467},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/haitran/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-35.0.0/src/lib.rs","byte_start":7203,"byte_end":7207,"line_start":229,"line_end":229,"column_start":6,"column_end":10},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":8478},"to":{"krate":4294967295,"index":4294967295}}]}